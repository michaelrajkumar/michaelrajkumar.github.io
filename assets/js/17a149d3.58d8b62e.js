"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4827],{28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var c=r(96540);const i={},t=c.createContext(i);function s(e){const n=c.useContext(t);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),c.createElement(t.Provider,{value:n},e.children)}},33700:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>l});const c=JSON.parse('{"id":"api references/forex","title":"Forex","description":"Retrieve Forex Currency","source":"@site/docs/api references/forex.md","sourceDirName":"api references","slug":"/api references/forex","permalink":"/api references/forex","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Events","permalink":"/api references/events"},"next":{"title":"Linkedaccounts","permalink":"/api references/linkedaccounts"}}');var i=r(74848),t=r(28453);const s={},a="Forex",o={},l=[{value:"Parameters",id:"parameters",level:3},{value:"Responses",id:"responses",level:3},{value:"Status: 200",id:"status-200",level:3}];function p(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"forex",children:"Forex"})}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Retrieve Forex Currency"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Retrieve Forex Currency"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:e=>handleLanguageChange(e.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:e=>copyActiveCode(e.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Retrieve Forex Currency-code-curl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/forex/{currency}"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Retrieve Forex Currency-code-java",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ForexApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ForexApiExample {\n\n    public static void main(String[] args) {\n        \n        ForexApi apiInstance = new ForexApi();\n        String currency = currency_example; // String | \n        try {\n            forex result = apiInstance.forexCurrencyGet(currency);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ForexApi#forexCurrencyGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Retrieve Forex Currency-code-android",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'import io.swagger.client.api.ForexApi;\n\npublic class ForexApiExample {\n\n    public static void main(String[] args) {\n        ForexApi apiInstance = new ForexApi();\n        String currency = currency_example; // String | \n        try {\n            forex result = apiInstance.forexCurrencyGet(currency);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ForexApi#forexCurrencyGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Retrieve Forex Currency-code-objc",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'String *currency = currency_example; // \n\nForexApi *apiInstance = [[ForexApi alloc] init];\n\n[apiInstance forexCurrencyGetWith:currency\n              completionHandler: ^(forex output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Retrieve Forex Currency-code-javascript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ForexApi()\nvar currency = currency_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.forexCurrencyGet(currency, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Retrieve Forex Currency-code-csharp",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class forexCurrencyGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ForexApi();\n            var currency = currency_example;  // String | \n\n            try\n            {\n                forex result = apiInstance.forexCurrencyGet(currency);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ForexApi.forexCurrencyGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Retrieve Forex Currency-code-php",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiForexApi();\n$currency = currency_example; // String | \n\ntry {\n    $result = $api_instance->forexCurrencyGet($currency);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ForexApi->forexCurrencyGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Retrieve Forex Currency-code-perl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ForexApi;\n\nmy $api_instance = WWW::SwaggerClient::ForexApi->new();\nmy $currency = currency_example; # String | \n\neval { \n    my $result = $api_instance->forexCurrencyGet(currency => $currency);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ForexApi->forexCurrencyGet: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Retrieve Forex Currency-code-python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ForexApi()\ncurrency = currency_example # String | \n\ntry: \n    api_response = api_instance.forex_currency_get(currency)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ForexApi->forexCurrencyGet: %s\\n" % e)\n'})})})]}),(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"currency*"}),(0,i.jsx)(n.td,{children:"String Required"})]})})]})]})]}),(0,i.jsxs)("div",{children:[(0,i.jsx)(n.h3,{id:"responses",children:"Responses"}),(0,i.jsx)(n.h3,{id:"status-200",children:"Status: 200"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:' {\n  "object": {\n    "pattern": "forex",\n    "type": "string",\n    "default": "forex"\n  },\n  "rate": {\n    "type": "number",\n    "format": "float"\n  },\n  "location": {\n    "type": "string"\n  },\n  "livemode": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "base": {\n    "type": "string",\n    "format": "currency"\n  },\n  "quote": {\n    "type": "string",\n    "format": "currency"\n  }\n} \n'})})]})]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);