"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[507],{28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>c});var r=t(96540);const i={},a=r.createContext(i);function s(n){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),r.createElement(a.Provider,{value:e},n.children)}},64718:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api references/occurrences","title":"Occurrences","description":"Retrieve Occurrences ID","source":"@site/docs/api references/occurrences.md","sourceDirName":"api references","slug":"/api references/occurrences","permalink":"/ja/api references/occurrences","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Mfaconfirmations","permalink":"/ja/api references/mfaconfirmations"},"next":{"title":"Receipts","permalink":"/ja/api references/receipts"}}');var i=t(74848),a=t(28453);const s={},c="Occurrences",o={},l=[{value:"Parameters",id:"parameters",level:3},{value:"Responses",id:"responses",level:3},{value:"Status: 200",id:"status-200",level:3}];function p(n){const e={code:"code",h1:"h1",h3:"h3",header:"header",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"occurrences",children:"Occurrences"})}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Retrieve Occurrences ID"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Retrieve Occurrences ID"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Retrieve Occurrences ID-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/occurrences/{id}"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Retrieve Occurrences ID-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.OccurrencesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class OccurrencesApiExample {\n\n    public static void main(String[] args) {\n        \n        OccurrencesApi apiInstance = new OccurrencesApi();\n        String id = id_example; // String | \n        try {\n            occurrence result = apiInstance.occurrencesIdGet(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling OccurrencesApi#occurrencesIdGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Retrieve Occurrences ID-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.OccurrencesApi;\n\npublic class OccurrencesApiExample {\n\n    public static void main(String[] args) {\n        OccurrencesApi apiInstance = new OccurrencesApi();\n        String id = id_example; // String | \n        try {\n            occurrence result = apiInstance.occurrencesIdGet(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling OccurrencesApi#occurrencesIdGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Retrieve Occurrences ID-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \n\nOccurrencesApi *apiInstance = [[OccurrencesApi alloc] init];\n\n[apiInstance occurrencesIdGetWith:id\n              completionHandler: ^(occurrence output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Retrieve Occurrences ID-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.OccurrencesApi()\nvar id = id_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.occurrencesIdGet(id, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Retrieve Occurrences ID-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class occurrencesIdGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new OccurrencesApi();\n            var id = id_example;  // String | \n\n            try\n            {\n                occurrence result = apiInstance.occurrencesIdGet(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling OccurrencesApi.occurrencesIdGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Retrieve Occurrences ID-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiOccurrencesApi();\n$id = id_example; // String | \n\ntry {\n    $result = $api_instance->occurrencesIdGet($id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling OccurrencesApi->occurrencesIdGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Retrieve Occurrences ID-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::OccurrencesApi;\n\nmy $api_instance = WWW::SwaggerClient::OccurrencesApi->new();\nmy $id = id_example; # String | \n\neval { \n    my $result = $api_instance->occurrencesIdGet(id => $id);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling OccurrencesApi->occurrencesIdGet: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Retrieve Occurrences ID-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.OccurrencesApi()\nid = id_example # String | \n\ntry: \n    api_response = api_instance.occurrences_id_get(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling OccurrencesApi->occurrencesIdGet: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})})]})]})]}),(0,i.jsxs)("div",{children:[(0,i.jsx)(e.h3,{id:"responses",children:"Responses"}),(0,i.jsx)(e.h3,{id:"status-200",children:"Status: 200"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:' {\n  "object": {\n    "pattern": "occurrence",\n    "type": "string",\n    "default": "occurrence"\n  },\n  "livemode": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "location": {\n    "type": "string"\n  },\n  "id": {\n    "type": "string"\n  },\n  "result": {\n    "type": "string",\n    "nullable": true\n  },\n  "schedule": {\n    "oneOf": [\n      {\n        "type": "object",\n        "properties": {\n          "object": {\n            "pattern": "schedule",\n            "type": "string",\n            "default": "schedule"\n          },\n          "id": {\n            "pattern": "schd_[0-9a-z]+",\n            "type": "string"\n          },\n          "deleted": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "livemode": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "location": {\n            "type": "string"\n          },\n          "every": {\n            "type": "integer"\n          },\n          "occurrences": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "list",\n                "type": "string",\n                "default": "list"\n              },\n              "data": {\n                "type": "array",\n                "items": {}\n              },\n              "limit": {\n                "type": "integer"\n              },\n              "offset": {\n                "type": "integer"\n              },\n              "total": {\n                "type": "integer"\n              },\n              "location": {\n                "type": "string"\n              },\n              "order": {\n                "type": "string",\n                "enum": [\n                  "chronological",\n                  "reverse_chronological"\n                ]\n              },\n              "from": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "to": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "on": {\n            "type": "object",\n            "properties": {\n              "days_of_month": {\n                "type": "array",\n                "items": {}\n              },\n              "weekday_of_month": {\n                "type": "string"\n              },\n              "weekdays": {\n                "type": "array",\n                "items": {\n                  "type": "string"\n                },\n                "enum": [\n                  "sunday",\n                  "monday",\n                  "tuesday",\n                  "wednesday",\n                  "thursday",\n                  "friday",\n                  "saturday"\n                ]\n              }\n            }\n          },\n          "in_words": {\n            "type": "string"\n          },\n          "period": {\n            "type": "string",\n            "enum": [\n              "day",\n              "week",\n              "month"\n            ]\n          },\n          "status": {\n            "type": "string",\n            "enum": [\n              "running",\n              "active",\n              "expiring",\n              "expired",\n              "deleted",\n              "suspended"\n            ]\n          },\n          "active": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "state": {\n            "type": "string",\n            "enum": [\n              "Active",\n              "Pause"\n            ]\n          },\n          "charge": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "charge_schedule",\n                "type": "string",\n                "default": "charge_schedule"\n              },\n              "id": {\n                "pattern": "rchg_[0-9a-z]+",\n                "type": "string"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "currency": {\n                "type": "string",\n                "format": "currency"\n              },\n              "amount": {\n                "type": "integer"\n              },\n              "default_card": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "card": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "card",\n                        "type": "string",\n                        "default": "card"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "street1": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "street2": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "city": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "state": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "phone_number": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "postal_code": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "country": {\n                        "pattern": "^[a-z]{0,2}$",\n                        "type": "string"\n                      },\n                      "financing": {\n                        "type": "string"\n                      },\n                      "bank": {\n                        "type": "string"\n                      },\n                      "brand": {\n                        "type": "string"\n                      },\n                      "fingerprint": {\n                        "type": "string"\n                      },\n                      "first_digits": {\n                        "pattern": "^[0-9]{6}$",\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "last_digits": {\n                        "pattern": "^[0-9]{4}$",\n                        "type": "string"\n                      },\n                      "name": {\n                        "type": "string"\n                      },\n                      "expiration_month": {\n                        "type": "integer"\n                      },\n                      "expiration_year": {\n                        "type": "integer"\n                      },\n                      "security_code_check": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "tokenization_method": {\n                        "type": "string"\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "customer": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "customer",\n                        "type": "string",\n                        "default": "customer"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "cards": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "list",\n                            "type": "string",\n                            "default": "list"\n                          },\n                          "data": {\n                            "type": "array",\n                            "items": {}\n                          },\n                          "limit": {\n                            "type": "integer"\n                          },\n                          "offset": {\n                            "type": "integer"\n                          },\n                          "total": {\n                            "type": "integer"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "order": {\n                            "type": "string",\n                            "enum": [\n                              "chronological",\n                              "reverse_chronological"\n                            ]\n                          },\n                          "from": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "to": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "default_card": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "card",\n                                "type": "string",\n                                "default": "card"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "street1": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "street2": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "city": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "state": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "phone_number": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "postal_code": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "country": {\n                                "pattern": "^[a-z]{0,2}$",\n                                "type": "string"\n                              },\n                              "financing": {\n                                "type": "string"\n                              },\n                              "bank": {\n                                "type": "string"\n                              },\n                              "brand": {\n                                "type": "string"\n                              },\n                              "fingerprint": {\n                                "type": "string"\n                              },\n                              "first_digits": {\n                                "pattern": "^[0-9]{6}$",\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "last_digits": {\n                                "pattern": "^[0-9]{4}$",\n                                "type": "string"\n                              },\n                              "name": {\n                                "type": "string"\n                              },\n                              "expiration_month": {\n                                "type": "integer"\n                              },\n                              "expiration_year": {\n                                "type": "integer"\n                              },\n                              "security_code_check": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "tokenization_method": {\n                                "type": "string"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "linked_accounts": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "list",\n                            "type": "string",\n                            "default": "list"\n                          },\n                          "data": {\n                            "type": "array",\n                            "items": {}\n                          },\n                          "limit": {\n                            "type": "integer"\n                          },\n                          "offset": {\n                            "type": "integer"\n                          },\n                          "total": {\n                            "type": "integer"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "order": {\n                            "type": "string",\n                            "enum": [\n                              "chronological",\n                              "reverse_chronological"\n                            ]\n                          },\n                          "from": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "to": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "description": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "email": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "linked_account": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "linked_account",\n                        "type": "string",\n                        "default": "linked_account"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "registration_uri": {\n                        "type": "string",\n                        "format": "uri"\n                      },\n                      "return_uri": {\n                        "type": "string",\n                        "format": "uri"\n                      },\n                      "type": {\n                        "type": "string"\n                      },\n                      "status": {\n                        "type": "string",\n                        "enum": [\n                          "failed",\n                          "expired",\n                          "deleted",\n                          "pending",\n                          "successful"\n                        ]\n                      },\n                      "last_digits": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "failure_code": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "failure_message": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "registered_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "expires_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "description": {\n                "type": "string",\n                "nullable": true\n              },\n              "metadata": {\n                "type": "object",\n                "default": {}\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "transfer": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "transfer_schedule",\n                "type": "string",\n                "default": "transfer_schedule"\n              },\n              "id": {\n                "pattern": "rtrf_[0-9a-z]+",\n                "type": "string"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "amount": {\n                "type": "integer",\n                "nullable": true\n              },\n              "currency": {\n                "type": "string",\n                "format": "currency"\n              },\n              "percentage_of_balance": {\n                "type": "number",\n                "format": "float",\n                "nullable": true\n              },\n              "recipient": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "recipient",\n                        "type": "string",\n                        "default": "recipient"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "bank_account": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "bank_account",\n                            "type": "string",\n                            "default": "bank_account"\n                          },\n                          "livemode": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "last_digits": {\n                            "pattern": "^[0-9]{4}$",\n                            "type": "string"\n                          },\n                          "account_number": {\n                            "type": "string"\n                          },\n                          "name": {\n                            "type": "string"\n                          },\n                          "type": {\n                            "type": "string",\n                            "enum": [\n                              "normal",\n                              "current"\n                            ]\n                          },\n                          "created_at": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "brand": {\n                            "type": "string"\n                          },\n                          "bank_code": {\n                            "type": "string"\n                          },\n                          "branch_code": {\n                            "type": "string"\n                          }\n                        }\n                      },\n                      "active": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "default": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "verified": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "description": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "email": {\n                        "type": "string"\n                      },\n                      "failure_code": {\n                        "type": "string",\n                        "nullable": true,\n                        "enum": [\n                          "name_mismatch",\n                          "account_not_found",\n                          "bank_not_found"\n                        ]\n                      },\n                      "name": {\n                        "type": "string"\n                      },\n                      "tax_id": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "type": {\n                        "type": "string",\n                        "enum": [\n                          "individual",\n                          "corporation"\n                        ]\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "schedule": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "schedule",\n                                "type": "string",\n                                "default": "schedule"\n                              },\n                              "id": {\n                                "pattern": "schd_[0-9a-z]+",\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "every": {\n                                "type": "integer"\n                              },\n                              "occurrences": {\n                                "$ref": "#/components/schemas/list"\n                              },\n                              "on": {\n                                "$ref": "#/components/schemas/schedule_on"\n                              },\n                              "in_words": {\n                                "type": "string"\n                              },\n                              "period": {\n                                "type": "string",\n                                "enum": [\n                                  "day",\n                                  "week",\n                                  "month"\n                                ]\n                              },\n                              "status": {\n                                "type": "string",\n                                "enum": [\n                                  "running",\n                                  "active",\n                                  "expiring",\n                                  "expired",\n                                  "deleted",\n                                  "suspended"\n                                ]\n                              },\n                              "active": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "state": {\n                                "type": "string",\n                                "enum": [\n                                  "Active",\n                                  "Pause"\n                                ]\n                              },\n                              "charge": {\n                                "$ref": "#/components/schemas/charge_schedule"\n                              },\n                              "transfer": {\n                                "$ref": "#/components/schemas/transfer_schedule"\n                              },\n                              "next_occurrences_on": {\n                                "type": "array",\n                                "items": {\n                                  "type": "string",\n                                  "format": "date"\n                                }\n                              },\n                              "ended_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "start_on": {\n                                "type": "string",\n                                "format": "date"\n                              },\n                              "end_on": {\n                                "type": "string",\n                                "format": "date"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "execute_time": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "deleted_by": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "merchant_name": {\n                                "type": "string"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "verified_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "activated_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "is_realtime_payout": {\n                "type": "boolean",\n                "nullable": true,\n                "enum": [\n                  true,\n                  false\n                ]\n              }\n            }\n          },\n          "next_occurrences_on": {\n            "type": "array",\n            "items": {\n              "type": "string",\n              "format": "date"\n            }\n          },\n          "ended_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "start_on": {\n            "type": "string",\n            "format": "date"\n          },\n          "end_on": {\n            "type": "string",\n            "format": "date"\n          },\n          "created_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "execute_time": {\n            "type": "string",\n            "nullable": true\n          },\n          "deleted_by": {\n            "type": "string",\n            "nullable": true\n          },\n          "merchant_name": {\n            "type": "string"\n          }\n        }\n      },\n      {\n        "type": "string"\n      }\n    ]\n  },\n  "message": {\n    "type": "string",\n    "nullable": true\n  },\n  "status": {\n    "type": "string",\n    "enum": [\n      "successful",\n      "failed",\n      "skipped",\n      "scheduled"\n    ]\n  },\n  "processed_at": {\n    "type": "string",\n    "format": "date-time",\n    "nullable": true\n  },\n  "created_at": {\n    "type": "string",\n    "format": "date-time"\n  },\n  "scheduled_on": {\n    "type": "string",\n    "format": "date"\n  },\n  "retry_on": {\n    "type": "string",\n    "format": "date"\n  },\n  "execute_time": {\n    "type": "string",\n    "nullable": true\n  },\n  "split_metadata": {\n    "type": "object",\n    "nullable": true\n  },\n  "transfer_amount": {\n    "type": "integer"\n  }\n} \n'})})]})]})]})}function d(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}}}]);