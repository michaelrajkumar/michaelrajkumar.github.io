"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1963],{28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>o});var r=t(96540);const i={},a=r.createContext(i);function s(n){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),r.createElement(a.Provider,{value:e},n.children)}},72512:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"api references/charges","title":"Charges","description":"Retrieve Charges","source":"@site/docs/api references/charges.md","sourceDirName":"api references","slug":"/api references/charges","permalink":"/api references/charges","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Chains","permalink":"/api references/chains"},"next":{"title":"Consent","permalink":"/api references/consent"}}');var i=t(74848),a=t(28453);const s={},o="Charges",l={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Parameters",id:"parameters-5",level:3},{value:"Parameters",id:"parameters-6",level:3},{value:"Parameters",id:"parameters-7",level:3},{value:"Parameters",id:"parameters-8",level:3},{value:"Parameters",id:"parameters-9",level:3},{value:"Parameters",id:"parameters-10",level:3},{value:"Parameters",id:"parameters-11",level:3},{value:"Parameters",id:"parameters-12",level:3},{value:"Parameters",id:"parameters-13",level:3},{value:"Responses",id:"responses",level:3},{value:"Status: 200",id:"status-200",level:3}];function p(n){const e={code:"code",h1:"h1",h3:"h3",header:"header",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"charges",children:"Charges"})}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Retrieve Charges"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Retrieve Charges"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Retrieve Charges-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/charges?from=&to=&offset=&limit=&order="\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Retrieve Charges-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ChargesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        \n        ChargesApi apiInstance = new ChargesApi();\n        Date from = 2013-10-20T19:20:30+01:00; // Date | \n        Date to = 2013-10-20T19:20:30+01:00; // Date | \n        Integer offset = 56; // Integer | \n        Integer limit = 56; // Integer | \n        String order = order_example; // String | \n        try {\n            list result = apiInstance.chargesGet(from, to, offset, limit, order);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Retrieve Charges-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.ChargesApi;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        ChargesApi apiInstance = new ChargesApi();\n        Date from = 2013-10-20T19:20:30+01:00; // Date | \n        Date to = 2013-10-20T19:20:30+01:00; // Date | \n        Integer offset = 56; // Integer | \n        Integer limit = 56; // Integer | \n        String order = order_example; // String | \n        try {\n            list result = apiInstance.chargesGet(from, to, offset, limit, order);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Retrieve Charges-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'Date *from = 2013-10-20T19:20:30+01:00; //  (optional) (default to 1970-01-01T00:00Z)\nDate *to = 2013-10-20T19:20:30+01:00; //  (optional)\nInteger *offset = 56; //  (optional) (default to 0)\nInteger *limit = 56; //  (optional) (default to 20)\nString *order = order_example; //  (optional) (default to chronological)\n\nChargesApi *apiInstance = [[ChargesApi alloc] init];\n\n[apiInstance chargesGetWith:from\n    to:to\n    offset:offset\n    limit:limit\n    order:order\n              completionHandler: ^(list output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Retrieve Charges-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ChargesApi()\nvar opts = { \n  'from': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'to': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'offset': 56, // {{Integer}} \n  'limit': 56, // {{Integer}} \n  'order': order_example // {{String}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesGet(opts, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Retrieve Charges-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ChargesApi();\n            var from = 2013-10-20T19:20:30+01:00;  // Date |  (optional)  (default to 1970-01-01T00:00Z)\n            var to = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n            var offset = 56;  // Integer |  (optional)  (default to 0)\n            var limit = 56;  // Integer |  (optional)  (default to 20)\n            var order = order_example;  // String |  (optional)  (default to chronological)\n\n            try\n            {\n                list result = apiInstance.chargesGet(from, to, offset, limit, order);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ChargesApi.chargesGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Retrieve Charges-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiChargesApi();\n$from = 2013-10-20T19:20:30+01:00; // Date | \n$to = 2013-10-20T19:20:30+01:00; // Date | \n$offset = 56; // Integer | \n$limit = 56; // Integer | \n$order = order_example; // String | \n\ntry {\n    $result = $api_instance->chargesGet($from, $to, $offset, $limit, $order);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ChargesApi->chargesGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Retrieve Charges-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ChargesApi;\n\nmy $api_instance = WWW::SwaggerClient::ChargesApi->new();\nmy $from = 2013-10-20T19:20:30+01:00; # Date | \nmy $to = 2013-10-20T19:20:30+01:00; # Date | \nmy $offset = 56; # Integer | \nmy $limit = 56; # Integer | \nmy $order = order_example; # String | \n\neval { \n    my $result = $api_instance->chargesGet(from => $from, to => $to, offset => $offset, limit => $limit, order => $order);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ChargesApi->chargesGet: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Retrieve Charges-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ChargesApi()\nfrom = 2013-10-20T19:20:30+01:00 # Date |  (optional) (default to 1970-01-01T00:00Z)\nto = 2013-10-20T19:20:30+01:00 # Date |  (optional)\noffset = 56 # Integer |  (optional) (default to 0)\nlimit = 56 # Integer |  (optional) (default to 20)\norder = order_example # String |  (optional) (default to chronological)\n\ntry: \n    api_response = api_instance.charges_get(from=from, to=to, offset=offset, limit=limit, order=order)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ChargesApi->chargesGet: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"from"}),(0,i.jsx)(e.td,{children:"Date (date-time)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"to"}),(0,i.jsx)(e.td,{children:"Date (date-time)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"offset"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"limit"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"order"}),(0,i.jsx)(e.td,{children:"String"})]})]})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Create Charges ID Capture"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Create Charges ID Capture"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Create Charges ID Capture-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X POST\\\n-H "Accept: application/json"\\\n-H "Content-Type: application/x-www-form-urlencoded"\\\n"https://api.omise.co/charges/{id}/capture"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Create Charges ID Capture-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ChargesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        \n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        Integer captureAmount = 56; // Integer | \n        try {\n            charge result = apiInstance.chargesIdCapturePost(id, captureAmount);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdCapturePost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Create Charges ID Capture-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.ChargesApi;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        Integer captureAmount = 56; // Integer | \n        try {\n            charge result = apiInstance.chargesIdCapturePost(id, captureAmount);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdCapturePost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Create Charges ID Capture-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \nInteger *captureAmount = 56; //  (optional)\n\nChargesApi *apiInstance = [[ChargesApi alloc] init];\n\n[apiInstance chargesIdCapturePostWith:id\n    captureAmount:captureAmount\n              completionHandler: ^(charge output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Create Charges ID Capture-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ChargesApi()\nvar id = id_example; // {{String}} \nvar opts = { \n  'captureAmount': 56 // {{Integer}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesIdCapturePost(id, opts, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Create Charges ID Capture-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesIdCapturePostExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ChargesApi();\n            var id = id_example;  // String | \n            var captureAmount = 56;  // Integer |  (optional) \n\n            try\n            {\n                charge result = apiInstance.chargesIdCapturePost(id, captureAmount);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ChargesApi.chargesIdCapturePost: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Create Charges ID Capture-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiChargesApi();\n$id = id_example; // String | \n$captureAmount = 56; // Integer | \n\ntry {\n    $result = $api_instance->chargesIdCapturePost($id, $captureAmount);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ChargesApi->chargesIdCapturePost: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Create Charges ID Capture-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ChargesApi;\n\nmy $api_instance = WWW::SwaggerClient::ChargesApi->new();\nmy $id = id_example; # String | \nmy $captureAmount = 56; # Integer | \n\neval { \n    my $result = $api_instance->chargesIdCapturePost(id => $id, captureAmount => $captureAmount);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ChargesApi->chargesIdCapturePost: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Create Charges ID Capture-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ChargesApi()\nid = id_example # String | \ncaptureAmount = 56 # Integer |  (optional)\n\ntry: \n    api_response = api_instance.charges_id_capture_post(id, captureAmount=captureAmount)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ChargesApi->chargesIdCapturePost: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-1",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})})]}),(0,i.jsx)(e.h3,{id:"parameters-2",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"capture_amount"}),(0,i.jsx)(e.td,{children:"Integer"})]})})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Retrieve Charges ID Events"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Retrieve Charges ID Events"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Retrieve Charges ID Events-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/charges/{id}/events?from=&to=&offset=&limit=&order="\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Retrieve Charges ID Events-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ChargesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        \n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        Date from = 2013-10-20T19:20:30+01:00; // Date | \n        Date to = 2013-10-20T19:20:30+01:00; // Date | \n        Integer offset = 56; // Integer | \n        Integer limit = 56; // Integer | \n        String order = order_example; // String | \n        try {\n            list result = apiInstance.chargesIdEventsGet(id, from, to, offset, limit, order);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdEventsGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Retrieve Charges ID Events-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.ChargesApi;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        Date from = 2013-10-20T19:20:30+01:00; // Date | \n        Date to = 2013-10-20T19:20:30+01:00; // Date | \n        Integer offset = 56; // Integer | \n        Integer limit = 56; // Integer | \n        String order = order_example; // String | \n        try {\n            list result = apiInstance.chargesIdEventsGet(id, from, to, offset, limit, order);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdEventsGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Retrieve Charges ID Events-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \nDate *from = 2013-10-20T19:20:30+01:00; //  (optional) (default to 1970-01-01T00:00Z)\nDate *to = 2013-10-20T19:20:30+01:00; //  (optional)\nInteger *offset = 56; //  (optional) (default to 0)\nInteger *limit = 56; //  (optional) (default to 20)\nString *order = order_example; //  (optional) (default to chronological)\n\nChargesApi *apiInstance = [[ChargesApi alloc] init];\n\n[apiInstance chargesIdEventsGetWith:id\n    from:from\n    to:to\n    offset:offset\n    limit:limit\n    order:order\n              completionHandler: ^(list output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Retrieve Charges ID Events-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ChargesApi()\nvar id = id_example; // {{String}} \nvar opts = { \n  'from': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'to': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'offset': 56, // {{Integer}} \n  'limit': 56, // {{Integer}} \n  'order': order_example // {{String}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesIdEventsGet(id, opts, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Retrieve Charges ID Events-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesIdEventsGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ChargesApi();\n            var id = id_example;  // String | \n            var from = 2013-10-20T19:20:30+01:00;  // Date |  (optional)  (default to 1970-01-01T00:00Z)\n            var to = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n            var offset = 56;  // Integer |  (optional)  (default to 0)\n            var limit = 56;  // Integer |  (optional)  (default to 20)\n            var order = order_example;  // String |  (optional)  (default to chronological)\n\n            try\n            {\n                list result = apiInstance.chargesIdEventsGet(id, from, to, offset, limit, order);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ChargesApi.chargesIdEventsGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Retrieve Charges ID Events-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiChargesApi();\n$id = id_example; // String | \n$from = 2013-10-20T19:20:30+01:00; // Date | \n$to = 2013-10-20T19:20:30+01:00; // Date | \n$offset = 56; // Integer | \n$limit = 56; // Integer | \n$order = order_example; // String | \n\ntry {\n    $result = $api_instance->chargesIdEventsGet($id, $from, $to, $offset, $limit, $order);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ChargesApi->chargesIdEventsGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Retrieve Charges ID Events-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ChargesApi;\n\nmy $api_instance = WWW::SwaggerClient::ChargesApi->new();\nmy $id = id_example; # String | \nmy $from = 2013-10-20T19:20:30+01:00; # Date | \nmy $to = 2013-10-20T19:20:30+01:00; # Date | \nmy $offset = 56; # Integer | \nmy $limit = 56; # Integer | \nmy $order = order_example; # String | \n\neval { \n    my $result = $api_instance->chargesIdEventsGet(id => $id, from => $from, to => $to, offset => $offset, limit => $limit, order => $order);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ChargesApi->chargesIdEventsGet: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Retrieve Charges ID Events-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ChargesApi()\nid = id_example # String | \nfrom = 2013-10-20T19:20:30+01:00 # Date |  (optional) (default to 1970-01-01T00:00Z)\nto = 2013-10-20T19:20:30+01:00 # Date |  (optional)\noffset = 56 # Integer |  (optional) (default to 0)\nlimit = 56 # Integer |  (optional) (default to 20)\norder = order_example # String |  (optional) (default to chronological)\n\ntry: \n    api_response = api_instance.charges_id_events_get(id, from=from, to=to, offset=offset, limit=limit, order=order)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ChargesApi->chargesIdEventsGet: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-3",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})})]}),(0,i.jsx)(e.h3,{id:"parameters-4",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"from"}),(0,i.jsx)(e.td,{children:"Date (date-time)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"to"}),(0,i.jsx)(e.td,{children:"Date (date-time)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"offset"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"limit"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"order"}),(0,i.jsx)(e.td,{children:"String"})]})]})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Create Charges ID Expire"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Create Charges ID Expire"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Create Charges ID Expire-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X POST\\\n-H "Accept: application/json"\\\n"https://api.omise.co/charges/{id}/expire"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Create Charges ID Expire-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ChargesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        \n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        try {\n            charge result = apiInstance.chargesIdExpirePost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdExpirePost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Create Charges ID Expire-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.ChargesApi;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        try {\n            charge result = apiInstance.chargesIdExpirePost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdExpirePost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Create Charges ID Expire-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \n\nChargesApi *apiInstance = [[ChargesApi alloc] init];\n\n[apiInstance chargesIdExpirePostWith:id\n              completionHandler: ^(charge output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Create Charges ID Expire-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ChargesApi()\nvar id = id_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesIdExpirePost(id, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Create Charges ID Expire-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesIdExpirePostExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ChargesApi();\n            var id = id_example;  // String | \n\n            try\n            {\n                charge result = apiInstance.chargesIdExpirePost(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ChargesApi.chargesIdExpirePost: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Create Charges ID Expire-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiChargesApi();\n$id = id_example; // String | \n\ntry {\n    $result = $api_instance->chargesIdExpirePost($id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ChargesApi->chargesIdExpirePost: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Create Charges ID Expire-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ChargesApi;\n\nmy $api_instance = WWW::SwaggerClient::ChargesApi->new();\nmy $id = id_example; # String | \n\neval { \n    my $result = $api_instance->chargesIdExpirePost(id => $id);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ChargesApi->chargesIdExpirePost: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Create Charges ID Expire-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ChargesApi()\nid = id_example # String | \n\ntry: \n    api_response = api_instance.charges_id_expire_post(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ChargesApi->chargesIdExpirePost: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-5",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Retrieve Charges ID"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Retrieve Charges ID"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Retrieve Charges ID-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/charges/{id}"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Retrieve Charges ID-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ChargesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        \n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        try {\n            charge result = apiInstance.chargesIdGet(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Retrieve Charges ID-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.ChargesApi;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        try {\n            charge result = apiInstance.chargesIdGet(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Retrieve Charges ID-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \n\nChargesApi *apiInstance = [[ChargesApi alloc] init];\n\n[apiInstance chargesIdGetWith:id\n              completionHandler: ^(charge output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Retrieve Charges ID-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ChargesApi()\nvar id = id_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesIdGet(id, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Retrieve Charges ID-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesIdGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ChargesApi();\n            var id = id_example;  // String | \n\n            try\n            {\n                charge result = apiInstance.chargesIdGet(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ChargesApi.chargesIdGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Retrieve Charges ID-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiChargesApi();\n$id = id_example; // String | \n\ntry {\n    $result = $api_instance->chargesIdGet($id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ChargesApi->chargesIdGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Retrieve Charges ID-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ChargesApi;\n\nmy $api_instance = WWW::SwaggerClient::ChargesApi->new();\nmy $id = id_example; # String | \n\neval { \n    my $result = $api_instance->chargesIdGet(id => $id);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ChargesApi->chargesIdGet: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Retrieve Charges ID-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ChargesApi()\nid = id_example # String | \n\ntry: \n    api_response = api_instance.charges_id_get(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ChargesApi->chargesIdGet: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-6",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Create Charges ID Mark As Failed"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Create Charges ID Mark As Failed"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Create Charges ID Mark As Failed-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X POST\\\n-H "Accept: application/json"\\\n"https://api.omise.co/charges/{id}/mark_as_failed"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Create Charges ID Mark As Failed-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ChargesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        \n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        try {\n            charge result = apiInstance.chargesIdMarkAsFailedPost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdMarkAsFailedPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Create Charges ID Mark As Failed-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.ChargesApi;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        try {\n            charge result = apiInstance.chargesIdMarkAsFailedPost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdMarkAsFailedPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Create Charges ID Mark As Failed-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \n\nChargesApi *apiInstance = [[ChargesApi alloc] init];\n\n[apiInstance chargesIdMarkAsFailedPostWith:id\n              completionHandler: ^(charge output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Create Charges ID Mark As Failed-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ChargesApi()\nvar id = id_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesIdMarkAsFailedPost(id, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Create Charges ID Mark As Failed-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesIdMarkAsFailedPostExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ChargesApi();\n            var id = id_example;  // String | \n\n            try\n            {\n                charge result = apiInstance.chargesIdMarkAsFailedPost(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ChargesApi.chargesIdMarkAsFailedPost: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Create Charges ID Mark As Failed-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiChargesApi();\n$id = id_example; // String | \n\ntry {\n    $result = $api_instance->chargesIdMarkAsFailedPost($id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ChargesApi->chargesIdMarkAsFailedPost: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Create Charges ID Mark As Failed-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ChargesApi;\n\nmy $api_instance = WWW::SwaggerClient::ChargesApi->new();\nmy $id = id_example; # String | \n\neval { \n    my $result = $api_instance->chargesIdMarkAsFailedPost(id => $id);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ChargesApi->chargesIdMarkAsFailedPost: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Create Charges ID Mark As Failed-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ChargesApi()\nid = id_example # String | \n\ntry: \n    api_response = api_instance.charges_id_mark_as_failed_post(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ChargesApi->chargesIdMarkAsFailedPost: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-7",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Create Charges ID Mark As Paid"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Create Charges ID Mark As Paid"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Create Charges ID Mark As Paid-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X POST\\\n-H "Accept: application/json"\\\n"https://api.omise.co/charges/{id}/mark_as_paid"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Create Charges ID Mark As Paid-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ChargesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        \n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        try {\n            charge result = apiInstance.chargesIdMarkAsPaidPost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdMarkAsPaidPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Create Charges ID Mark As Paid-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.ChargesApi;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        try {\n            charge result = apiInstance.chargesIdMarkAsPaidPost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdMarkAsPaidPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Create Charges ID Mark As Paid-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \n\nChargesApi *apiInstance = [[ChargesApi alloc] init];\n\n[apiInstance chargesIdMarkAsPaidPostWith:id\n              completionHandler: ^(charge output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Create Charges ID Mark As Paid-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ChargesApi()\nvar id = id_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesIdMarkAsPaidPost(id, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Create Charges ID Mark As Paid-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesIdMarkAsPaidPostExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ChargesApi();\n            var id = id_example;  // String | \n\n            try\n            {\n                charge result = apiInstance.chargesIdMarkAsPaidPost(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ChargesApi.chargesIdMarkAsPaidPost: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Create Charges ID Mark As Paid-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiChargesApi();\n$id = id_example; // String | \n\ntry {\n    $result = $api_instance->chargesIdMarkAsPaidPost($id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ChargesApi->chargesIdMarkAsPaidPost: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Create Charges ID Mark As Paid-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ChargesApi;\n\nmy $api_instance = WWW::SwaggerClient::ChargesApi->new();\nmy $id = id_example; # String | \n\neval { \n    my $result = $api_instance->chargesIdMarkAsPaidPost(id => $id);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ChargesApi->chargesIdMarkAsPaidPost: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Create Charges ID Mark As Paid-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ChargesApi()\nid = id_example # String | \n\ntry: \n    api_response = api_instance.charges_id_mark_as_paid_post(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ChargesApi->chargesIdMarkAsPaidPost: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-8",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Update Charges ID"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Update Charges ID"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Update Charges ID-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X PATCH\\\n-H "Accept: application/json"\\\n-H "Content-Type: application/x-www-form-urlencoded"\\\n"https://api.omise.co/charges/{id}"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Update Charges ID-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ChargesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        \n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        String description = description_example; // String | \n        Object metadata = ; // Object | \n        try {\n            charge result = apiInstance.chargesIdPatch(id, description, metadata);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdPatch");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Update Charges ID-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.ChargesApi;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        String description = description_example; // String | \n        Object metadata = ; // Object | \n        try {\n            charge result = apiInstance.chargesIdPatch(id, description, metadata);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdPatch");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Update Charges ID-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \nString *description = description_example; //  (optional)\nObject *metadata = ; //  (optional)\n\nChargesApi *apiInstance = [[ChargesApi alloc] init];\n\n[apiInstance chargesIdPatchWith:id\n    description:description\n    metadata:metadata\n              completionHandler: ^(charge output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Update Charges ID-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ChargesApi()\nvar id = id_example; // {{String}} \nvar opts = { \n  'description': description_example // {{String}} \n  'metadata':  // {{Object}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesIdPatch(id, opts, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Update Charges ID-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesIdPatchExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ChargesApi();\n            var id = id_example;  // String | \n            var description = description_example;  // String |  (optional) \n            var metadata = new Object(); // Object |  (optional) \n\n            try\n            {\n                charge result = apiInstance.chargesIdPatch(id, description, metadata);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ChargesApi.chargesIdPatch: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Update Charges ID-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiChargesApi();\n$id = id_example; // String | \n$description = description_example; // String | \n$metadata = ; // Object | \n\ntry {\n    $result = $api_instance->chargesIdPatch($id, $description, $metadata);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ChargesApi->chargesIdPatch: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Update Charges ID-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ChargesApi;\n\nmy $api_instance = WWW::SwaggerClient::ChargesApi->new();\nmy $id = id_example; # String | \nmy $description = description_example; # String | \nmy $metadata = ; # Object | \n\neval { \n    my $result = $api_instance->chargesIdPatch(id => $id, description => $description, metadata => $metadata);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ChargesApi->chargesIdPatch: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Update Charges ID-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ChargesApi()\nid = id_example # String | \ndescription = description_example # String |  (optional)\nmetadata =  # Object |  (optional)\n\ntry: \n    api_response = api_instance.charges_id_patch(id, description=description, metadata=metadata)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ChargesApi->chargesIdPatch: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-9",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})})]}),(0,i.jsx)(e.h3,{id:"parameters-10",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"description"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"metadata"}),(0,i.jsx)(e.td,{children:"Object"})]})]})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Create Charges ID Reverse"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Create Charges ID Reverse"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Create Charges ID Reverse-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X POST\\\n-H "Accept: application/json"\\\n"https://api.omise.co/charges/{id}/reverse"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Create Charges ID Reverse-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ChargesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        \n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        try {\n            charge result = apiInstance.chargesIdReversePost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdReversePost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Create Charges ID Reverse-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.ChargesApi;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        ChargesApi apiInstance = new ChargesApi();\n        String id = id_example; // String | \n        try {\n            charge result = apiInstance.chargesIdReversePost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesIdReversePost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Create Charges ID Reverse-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \n\nChargesApi *apiInstance = [[ChargesApi alloc] init];\n\n[apiInstance chargesIdReversePostWith:id\n              completionHandler: ^(charge output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Create Charges ID Reverse-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ChargesApi()\nvar id = id_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesIdReversePost(id, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Create Charges ID Reverse-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesIdReversePostExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ChargesApi();\n            var id = id_example;  // String | \n\n            try\n            {\n                charge result = apiInstance.chargesIdReversePost(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ChargesApi.chargesIdReversePost: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Create Charges ID Reverse-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiChargesApi();\n$id = id_example; // String | \n\ntry {\n    $result = $api_instance->chargesIdReversePost($id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ChargesApi->chargesIdReversePost: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Create Charges ID Reverse-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ChargesApi;\n\nmy $api_instance = WWW::SwaggerClient::ChargesApi->new();\nmy $id = id_example; # String | \n\neval { \n    my $result = $api_instance->chargesIdReversePost(id => $id);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ChargesApi->chargesIdReversePost: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Create Charges ID Reverse-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ChargesApi()\nid = id_example # String | \n\ntry: \n    api_response = api_instance.charges_id_reverse_post(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ChargesApi->chargesIdReversePost: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-11",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Create Charges"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Create Charges"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Create Charges-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X POST\\\n-H "Accept: application/json"\\\n-H "Content-Type: application/x-www-form-urlencoded"\\\n"https://api.omise.co/charges"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Create Charges-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ChargesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        \n        ChargesApi apiInstance = new ChargesApi();\n        Boolean capture = true; // Boolean | \n        String currency = currency_example; // String | \n        Integer amount = 56; // Integer | \n        String ip = ip_example; // String | \n        Object metadata = ; // Object | \n        String card = card_example; // String | \n        String customer = customer_example; // String | \n        String source = source_example; // String | \n        String linkedAccount = linkedAccount_example; // String | \n        String description = description_example; // String | \n        String returnUri = returnUri_example; // String | \n        Date expiresAt = 2013-10-20T19:20:30+01:00; // Date | \n        charges_platform_fee platformFee = ; // charges_platform_fee | \n        Boolean zeroInterestInstallments = true; // Boolean | \n        String authorizationType = authorizationType_example; // String | \n        String firstCharge = firstCharge_example; // String | \n        String transactionIndicator = transactionIndicator_example; // String | \n        String recurringReason = recurringReason_example; // String | \n        array[String] webhookEndpoints = ; // array[String] | \n        String statementDescriptor = statementDescriptor_example; // String | \n        try {\n            charge result = apiInstance.chargesPost(capture, currency, amount, ip, metadata, card, customer, source, linkedAccount, description, returnUri, expiresAt, platformFee, zeroInterestInstallments, authorizationType, firstCharge, transactionIndicator, recurringReason, webhookEndpoints, statementDescriptor);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Create Charges-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.ChargesApi;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        ChargesApi apiInstance = new ChargesApi();\n        Boolean capture = true; // Boolean | \n        String currency = currency_example; // String | \n        Integer amount = 56; // Integer | \n        String ip = ip_example; // String | \n        Object metadata = ; // Object | \n        String card = card_example; // String | \n        String customer = customer_example; // String | \n        String source = source_example; // String | \n        String linkedAccount = linkedAccount_example; // String | \n        String description = description_example; // String | \n        String returnUri = returnUri_example; // String | \n        Date expiresAt = 2013-10-20T19:20:30+01:00; // Date | \n        charges_platform_fee platformFee = ; // charges_platform_fee | \n        Boolean zeroInterestInstallments = true; // Boolean | \n        String authorizationType = authorizationType_example; // String | \n        String firstCharge = firstCharge_example; // String | \n        String transactionIndicator = transactionIndicator_example; // String | \n        String recurringReason = recurringReason_example; // String | \n        array[String] webhookEndpoints = ; // array[String] | \n        String statementDescriptor = statementDescriptor_example; // String | \n        try {\n            charge result = apiInstance.chargesPost(capture, currency, amount, ip, metadata, card, customer, source, linkedAccount, description, returnUri, expiresAt, platformFee, zeroInterestInstallments, authorizationType, firstCharge, transactionIndicator, recurringReason, webhookEndpoints, statementDescriptor);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Create Charges-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'Boolean *capture = true; //  (optional)\nString *currency = currency_example; //  (optional)\nInteger *amount = 56; //  (optional)\nString *ip = ip_example; //  (optional)\nObject *metadata = ; //  (optional)\nString *card = card_example; //  (optional)\nString *customer = customer_example; //  (optional)\nString *source = source_example; //  (optional)\nString *linkedAccount = linkedAccount_example; //  (optional)\nString *description = description_example; //  (optional)\nString *returnUri = returnUri_example; //  (optional)\nDate *expiresAt = 2013-10-20T19:20:30+01:00; //  (optional)\ncharges_platform_fee *platformFee = ; //  (optional)\nBoolean *zeroInterestInstallments = true; //  (optional)\nString *authorizationType = authorizationType_example; //  (optional)\nString *firstCharge = firstCharge_example; //  (optional)\nString *transactionIndicator = transactionIndicator_example; //  (optional)\nString *recurringReason = recurringReason_example; //  (optional)\narray[String] *webhookEndpoints = ; //  (optional)\nString *statementDescriptor = statementDescriptor_example; //  (optional)\n\nChargesApi *apiInstance = [[ChargesApi alloc] init];\n\n[apiInstance chargesPostWith:capture\n    currency:currency\n    amount:amount\n    ip:ip\n    metadata:metadata\n    card:card\n    customer:customer\n    source:source\n    linkedAccount:linkedAccount\n    description:description\n    returnUri:returnUri\n    expiresAt:expiresAt\n    platformFee:platformFee\n    zeroInterestInstallments:zeroInterestInstallments\n    authorizationType:authorizationType\n    firstCharge:firstCharge\n    transactionIndicator:transactionIndicator\n    recurringReason:recurringReason\n    webhookEndpoints:webhookEndpoints\n    statementDescriptor:statementDescriptor\n              completionHandler: ^(charge output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Create Charges-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ChargesApi()\nvar opts = { \n  'capture': true // {{Boolean}} \n  'currency': currency_example // {{String}} \n  'amount': 56 // {{Integer}} \n  'ip': ip_example // {{String}} \n  'metadata':  // {{Object}} \n  'card': card_example // {{String}} \n  'customer': customer_example // {{String}} \n  'source': source_example // {{String}} \n  'linkedAccount': linkedAccount_example // {{String}} \n  'description': description_example // {{String}} \n  'returnUri': returnUri_example // {{String}} \n  'expiresAt': 2013-10-20T19:20:30+01:00 // {{Date}} \n  'platformFee':  // {{charges_platform_fee}} \n  'zeroInterestInstallments': true // {{Boolean}} \n  'authorizationType': authorizationType_example // {{String}} \n  'firstCharge': firstCharge_example // {{String}} \n  'transactionIndicator': transactionIndicator_example // {{String}} \n  'recurringReason': recurringReason_example // {{String}} \n  'webhookEndpoints':  // {{array[String]}} \n  'statementDescriptor': statementDescriptor_example // {{String}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesPost(opts, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Create Charges-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesPostExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ChargesApi();\n            var capture = true;  // Boolean |  (optional) \n            var currency = currency_example;  // String |  (optional) \n            var amount = 56;  // Integer |  (optional) \n            var ip = ip_example;  // String |  (optional) \n            var metadata = new Object(); // Object |  (optional) \n            var card = card_example;  // String |  (optional) \n            var customer = customer_example;  // String |  (optional) \n            var source = source_example;  // String |  (optional) \n            var linkedAccount = linkedAccount_example;  // String |  (optional) \n            var description = description_example;  // String |  (optional) \n            var returnUri = returnUri_example;  // String |  (optional) \n            var expiresAt = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n            var platformFee = new charges_platform_fee(); // charges_platform_fee |  (optional) \n            var zeroInterestInstallments = true;  // Boolean |  (optional) \n            var authorizationType = authorizationType_example;  // String |  (optional) \n            var firstCharge = firstCharge_example;  // String |  (optional) \n            var transactionIndicator = transactionIndicator_example;  // String |  (optional) \n            var recurringReason = recurringReason_example;  // String |  (optional) \n            var webhookEndpoints = new array[String](); // array[String] |  (optional) \n            var statementDescriptor = statementDescriptor_example;  // String |  (optional) \n\n            try\n            {\n                charge result = apiInstance.chargesPost(capture, currency, amount, ip, metadata, card, customer, source, linkedAccount, description, returnUri, expiresAt, platformFee, zeroInterestInstallments, authorizationType, firstCharge, transactionIndicator, recurringReason, webhookEndpoints, statementDescriptor);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ChargesApi.chargesPost: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Create Charges-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiChargesApi();\n$capture = true; // Boolean | \n$currency = currency_example; // String | \n$amount = 56; // Integer | \n$ip = ip_example; // String | \n$metadata = ; // Object | \n$card = card_example; // String | \n$customer = customer_example; // String | \n$source = source_example; // String | \n$linkedAccount = linkedAccount_example; // String | \n$description = description_example; // String | \n$returnUri = returnUri_example; // String | \n$expiresAt = 2013-10-20T19:20:30+01:00; // Date | \n$platformFee = ; // charges_platform_fee | \n$zeroInterestInstallments = true; // Boolean | \n$authorizationType = authorizationType_example; // String | \n$firstCharge = firstCharge_example; // String | \n$transactionIndicator = transactionIndicator_example; // String | \n$recurringReason = recurringReason_example; // String | \n$webhookEndpoints = ; // array[String] | \n$statementDescriptor = statementDescriptor_example; // String | \n\ntry {\n    $result = $api_instance->chargesPost($capture, $currency, $amount, $ip, $metadata, $card, $customer, $source, $linkedAccount, $description, $returnUri, $expiresAt, $platformFee, $zeroInterestInstallments, $authorizationType, $firstCharge, $transactionIndicator, $recurringReason, $webhookEndpoints, $statementDescriptor);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ChargesApi->chargesPost: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Create Charges-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ChargesApi;\n\nmy $api_instance = WWW::SwaggerClient::ChargesApi->new();\nmy $capture = true; # Boolean | \nmy $currency = currency_example; # String | \nmy $amount = 56; # Integer | \nmy $ip = ip_example; # String | \nmy $metadata = ; # Object | \nmy $card = card_example; # String | \nmy $customer = customer_example; # String | \nmy $source = source_example; # String | \nmy $linkedAccount = linkedAccount_example; # String | \nmy $description = description_example; # String | \nmy $returnUri = returnUri_example; # String | \nmy $expiresAt = 2013-10-20T19:20:30+01:00; # Date | \nmy $platformFee = ; # charges_platform_fee | \nmy $zeroInterestInstallments = true; # Boolean | \nmy $authorizationType = authorizationType_example; # String | \nmy $firstCharge = firstCharge_example; # String | \nmy $transactionIndicator = transactionIndicator_example; # String | \nmy $recurringReason = recurringReason_example; # String | \nmy $webhookEndpoints = []; # array[String] | \nmy $statementDescriptor = statementDescriptor_example; # String | \n\neval { \n    my $result = $api_instance->chargesPost(capture => $capture, currency => $currency, amount => $amount, ip => $ip, metadata => $metadata, card => $card, customer => $customer, source => $source, linkedAccount => $linkedAccount, description => $description, returnUri => $returnUri, expiresAt => $expiresAt, platformFee => $platformFee, zeroInterestInstallments => $zeroInterestInstallments, authorizationType => $authorizationType, firstCharge => $firstCharge, transactionIndicator => $transactionIndicator, recurringReason => $recurringReason, webhookEndpoints => $webhookEndpoints, statementDescriptor => $statementDescriptor);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ChargesApi->chargesPost: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Create Charges-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ChargesApi()\ncapture = true # Boolean |  (optional)\ncurrency = currency_example # String |  (optional)\namount = 56 # Integer |  (optional)\nip = ip_example # String |  (optional)\nmetadata =  # Object |  (optional)\ncard = card_example # String |  (optional)\ncustomer = customer_example # String |  (optional)\nsource = source_example # String |  (optional)\nlinkedAccount = linkedAccount_example # String |  (optional)\ndescription = description_example # String |  (optional)\nreturnUri = returnUri_example # String |  (optional)\nexpiresAt = 2013-10-20T19:20:30+01:00 # Date |  (optional)\nplatformFee =  # charges_platform_fee |  (optional)\nzeroInterestInstallments = true # Boolean |  (optional)\nauthorizationType = authorizationType_example # String |  (optional)\nfirstCharge = firstCharge_example # String |  (optional)\ntransactionIndicator = transactionIndicator_example # String |  (optional)\nrecurringReason = recurringReason_example # String |  (optional)\nwebhookEndpoints =  # array[String] |  (optional)\nstatementDescriptor = statementDescriptor_example # String |  (optional)\n\ntry: \n    api_response = api_instance.charges_post(capture=capture, currency=currency, amount=amount, ip=ip, metadata=metadata, card=card, customer=customer, source=source, linkedAccount=linkedAccount, description=description, returnUri=returnUri, expiresAt=expiresAt, platformFee=platformFee, zeroInterestInstallments=zeroInterestInstallments, authorizationType=authorizationType, firstCharge=firstCharge, transactionIndicator=transactionIndicator, recurringReason=recurringReason, webhookEndpoints=webhookEndpoints, statementDescriptor=statementDescriptor)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ChargesApi->chargesPost: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-12",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"capture"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"currency"}),(0,i.jsx)(e.td,{children:"String (currency)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"amount"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"ip"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"metadata"}),(0,i.jsx)(e.td,{children:"Object"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"card"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"customer"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"source"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"linked_account"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"description"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"return_uri"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"expires_at"}),(0,i.jsx)(e.td,{children:"Date (date-time)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"platform_fee"}),(0,i.jsx)(e.td,{children:"charges_platform_fee"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"zero_interest_installments"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"authorization_type"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"first_charge"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"transaction_indicator"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"recurring_reason"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"webhook_endpoints"}),(0,i.jsx)(e.td,{children:"array[String]"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"statement_descriptor"}),(0,i.jsx)(e.td,{children:"String"})]})]})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Retrieve Charges Search"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Retrieve Charges Search"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Retrieve Charges Search-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/charges/search?scope=&query=&filters[amount]=&filters[authorized]=&filters[capture]=&filters[capture_id]=&filters[captured]=&filters[card_last_digits]=&filters[created]=&filters[currency]=&filters[customer_present]=&filters[disputed]=&filters[failure_code]=&filters[is_installment]=&filters[refunded]=&filters[refund_amount]=&filters[reversed]=&filters[safe]=&filters[scheduled]=&filters[source_of_fund]=&filters[source_type]=&filters[status]=&filters[voided]=&filters[installment_terms]=&filters[acquirer_reference_number]="\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Retrieve Charges Search-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.ChargesApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        \n        ChargesApi apiInstance = new ChargesApi();\n        String scope = scope_example; // String | \n        String query = query_example; // String | \n        Integer filters[amount] = 56; // Integer | \n        Boolean filters[authorized] = true; // Boolean | \n        Boolean filters[capture] = true; // Boolean | \n        String filters[captureId] = filters[captureId]_example; // String | \n        Boolean filters[captured] = true; // Boolean | \n        String filters[cardLastDigits] = filters[cardLastDigits]_example; // String | \n        Date filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n        String filters[currency] = filters[currency]_example; // String | \n        Boolean filters[customerPresent] = true; // Boolean | \n        Boolean filters[disputed] = true; // Boolean | \n        String filters[failureCode] = filters[failureCode]_example; // String | \n        Boolean filters[isInstallment] = true; // Boolean | \n        Integer filters[refunded] = 56; // Integer | \n        Integer filters[refundAmount] = 56; // Integer | \n        Boolean filters[reversed] = true; // Boolean | \n        Boolean filters[safe] = true; // Boolean | \n        Boolean filters[scheduled] = true; // Boolean | \n        String filters[sourceOfFund] = filters[sourceOfFund]_example; // String | \n        String filters[sourceType] = filters[sourceType]_example; // String | \n        String filters[status] = filters[status]_example; // String | \n        Boolean filters[voided] = true; // Boolean | \n        Integer filters[installmentTerms] = 56; // Integer | \n        String filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example; // String | \n        try {\n            charge result = apiInstance.chargesSearchGet(scope, query, filters[amount], filters[authorized], filters[capture], filters[captureId], filters[captured], filters[cardLastDigits], filters[created], filters[currency], filters[customerPresent], filters[disputed], filters[failureCode], filters[isInstallment], filters[refunded], filters[refundAmount], filters[reversed], filters[safe], filters[scheduled], filters[sourceOfFund], filters[sourceType], filters[status], filters[voided], filters[installmentTerms], filters[acquirerReferenceNumber]);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesSearchGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Retrieve Charges Search-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.ChargesApi;\n\npublic class ChargesApiExample {\n\n    public static void main(String[] args) {\n        ChargesApi apiInstance = new ChargesApi();\n        String scope = scope_example; // String | \n        String query = query_example; // String | \n        Integer filters[amount] = 56; // Integer | \n        Boolean filters[authorized] = true; // Boolean | \n        Boolean filters[capture] = true; // Boolean | \n        String filters[captureId] = filters[captureId]_example; // String | \n        Boolean filters[captured] = true; // Boolean | \n        String filters[cardLastDigits] = filters[cardLastDigits]_example; // String | \n        Date filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n        String filters[currency] = filters[currency]_example; // String | \n        Boolean filters[customerPresent] = true; // Boolean | \n        Boolean filters[disputed] = true; // Boolean | \n        String filters[failureCode] = filters[failureCode]_example; // String | \n        Boolean filters[isInstallment] = true; // Boolean | \n        Integer filters[refunded] = 56; // Integer | \n        Integer filters[refundAmount] = 56; // Integer | \n        Boolean filters[reversed] = true; // Boolean | \n        Boolean filters[safe] = true; // Boolean | \n        Boolean filters[scheduled] = true; // Boolean | \n        String filters[sourceOfFund] = filters[sourceOfFund]_example; // String | \n        String filters[sourceType] = filters[sourceType]_example; // String | \n        String filters[status] = filters[status]_example; // String | \n        Boolean filters[voided] = true; // Boolean | \n        Integer filters[installmentTerms] = 56; // Integer | \n        String filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example; // String | \n        try {\n            charge result = apiInstance.chargesSearchGet(scope, query, filters[amount], filters[authorized], filters[capture], filters[captureId], filters[captured], filters[cardLastDigits], filters[created], filters[currency], filters[customerPresent], filters[disputed], filters[failureCode], filters[isInstallment], filters[refunded], filters[refundAmount], filters[reversed], filters[safe], filters[scheduled], filters[sourceOfFund], filters[sourceType], filters[status], filters[voided], filters[installmentTerms], filters[acquirerReferenceNumber]);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling ChargesApi#chargesSearchGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Retrieve Charges Search-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *scope = scope_example; //  (optional) (default to charge)\nString *query = query_example; //  (optional)\nInteger *filters[amount] = 56; //  (optional)\nBoolean *filters[authorized] = true; //  (optional)\nBoolean *filters[capture] = true; //  (optional)\nString *filters[captureId] = filters[captureId]_example; //  (optional)\nBoolean *filters[captured] = true; //  (optional)\nString *filters[cardLastDigits] = filters[cardLastDigits]_example; //  (optional)\nDate *filters[created] = 2013-10-20T19:20:30+01:00; //  (optional)\nString *filters[currency] = filters[currency]_example; //  (optional)\nBoolean *filters[customerPresent] = true; //  (optional)\nBoolean *filters[disputed] = true; //  (optional)\nString *filters[failureCode] = filters[failureCode]_example; //  (optional)\nBoolean *filters[isInstallment] = true; //  (optional)\nInteger *filters[refunded] = 56; //  (optional)\nInteger *filters[refundAmount] = 56; //  (optional)\nBoolean *filters[reversed] = true; //  (optional)\nBoolean *filters[safe] = true; //  (optional)\nBoolean *filters[scheduled] = true; //  (optional)\nString *filters[sourceOfFund] = filters[sourceOfFund]_example; //  (optional)\nString *filters[sourceType] = filters[sourceType]_example; //  (optional)\nString *filters[status] = filters[status]_example; //  (optional)\nBoolean *filters[voided] = true; //  (optional)\nInteger *filters[installmentTerms] = 56; //  (optional)\nString *filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example; //  (optional)\n\nChargesApi *apiInstance = [[ChargesApi alloc] init];\n\n[apiInstance chargesSearchGetWith:scope\n    query:query\n    filters[amount]:filters[amount]\n    filters[authorized]:filters[authorized]\n    filters[capture]:filters[capture]\n    filters[captureId]:filters[captureId]\n    filters[captured]:filters[captured]\n    filters[cardLastDigits]:filters[cardLastDigits]\n    filters[created]:filters[created]\n    filters[currency]:filters[currency]\n    filters[customerPresent]:filters[customerPresent]\n    filters[disputed]:filters[disputed]\n    filters[failureCode]:filters[failureCode]\n    filters[isInstallment]:filters[isInstallment]\n    filters[refunded]:filters[refunded]\n    filters[refundAmount]:filters[refundAmount]\n    filters[reversed]:filters[reversed]\n    filters[safe]:filters[safe]\n    filters[scheduled]:filters[scheduled]\n    filters[sourceOfFund]:filters[sourceOfFund]\n    filters[sourceType]:filters[sourceType]\n    filters[status]:filters[status]\n    filters[voided]:filters[voided]\n    filters[installmentTerms]:filters[installmentTerms]\n    filters[acquirerReferenceNumber]:filters[acquirerReferenceNumber]\n              completionHandler: ^(charge output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Retrieve Charges Search-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.ChargesApi()\nvar opts = { \n  'scope': scope_example, // {{String}} \n  'query': query_example, // {{String}} \n  'filters[amount]': 56, // {{Integer}} \n  'filters[authorized]': true, // {{Boolean}} \n  'filters[capture]': true, // {{Boolean}} \n  'filters[captureId]': filters[captureId]_example, // {{String}} \n  'filters[captured]': true, // {{Boolean}} \n  'filters[cardLastDigits]': filters[cardLastDigits]_example, // {{String}} \n  'filters[created]': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'filters[currency]': filters[currency]_example, // {{String}} \n  'filters[customerPresent]': true, // {{Boolean}} \n  'filters[disputed]': true, // {{Boolean}} \n  'filters[failureCode]': filters[failureCode]_example, // {{String}} \n  'filters[isInstallment]': true, // {{Boolean}} \n  'filters[refunded]': 56, // {{Integer}} \n  'filters[refundAmount]': 56, // {{Integer}} \n  'filters[reversed]': true, // {{Boolean}} \n  'filters[safe]': true, // {{Boolean}} \n  'filters[scheduled]': true, // {{Boolean}} \n  'filters[sourceOfFund]': filters[sourceOfFund]_example, // {{String}} \n  'filters[sourceType]': filters[sourceType]_example, // {{String}} \n  'filters[status]': filters[status]_example, // {{String}} \n  'filters[voided]': true, // {{Boolean}} \n  'filters[installmentTerms]': 56, // {{Integer}} \n  'filters[acquirerReferenceNumber]': filters[acquirerReferenceNumber]_example // {{String}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesSearchGet(opts, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Retrieve Charges Search-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesSearchGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new ChargesApi();\n            var scope = scope_example;  // String |  (optional)  (default to charge)\n            var query = query_example;  // String |  (optional) \n            var filters[amount] = 56;  // Integer |  (optional) \n            var filters[authorized] = true;  // Boolean |  (optional) \n            var filters[capture] = true;  // Boolean |  (optional) \n            var filters[captureId] = filters[captureId]_example;  // String |  (optional) \n            var filters[captured] = true;  // Boolean |  (optional) \n            var filters[cardLastDigits] = filters[cardLastDigits]_example;  // String |  (optional) \n            var filters[created] = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n            var filters[currency] = filters[currency]_example;  // String |  (optional) \n            var filters[customerPresent] = true;  // Boolean |  (optional) \n            var filters[disputed] = true;  // Boolean |  (optional) \n            var filters[failureCode] = filters[failureCode]_example;  // String |  (optional) \n            var filters[isInstallment] = true;  // Boolean |  (optional) \n            var filters[refunded] = 56;  // Integer |  (optional) \n            var filters[refundAmount] = 56;  // Integer |  (optional) \n            var filters[reversed] = true;  // Boolean |  (optional) \n            var filters[safe] = true;  // Boolean |  (optional) \n            var filters[scheduled] = true;  // Boolean |  (optional) \n            var filters[sourceOfFund] = filters[sourceOfFund]_example;  // String |  (optional) \n            var filters[sourceType] = filters[sourceType]_example;  // String |  (optional) \n            var filters[status] = filters[status]_example;  // String |  (optional) \n            var filters[voided] = true;  // Boolean |  (optional) \n            var filters[installmentTerms] = 56;  // Integer |  (optional) \n            var filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example;  // String |  (optional) \n\n            try\n            {\n                charge result = apiInstance.chargesSearchGet(scope, query, filters[amount], filters[authorized], filters[capture], filters[captureId], filters[captured], filters[cardLastDigits], filters[created], filters[currency], filters[customerPresent], filters[disputed], filters[failureCode], filters[isInstallment], filters[refunded], filters[refundAmount], filters[reversed], filters[safe], filters[scheduled], filters[sourceOfFund], filters[sourceType], filters[status], filters[voided], filters[installmentTerms], filters[acquirerReferenceNumber]);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling ChargesApi.chargesSearchGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Retrieve Charges Search-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiChargesApi();\n$scope = scope_example; // String | \n$query = query_example; // String | \n$filters[amount] = 56; // Integer | \n$filters[authorized] = true; // Boolean | \n$filters[capture] = true; // Boolean | \n$filters[captureId] = filters[captureId]_example; // String | \n$filters[captured] = true; // Boolean | \n$filters[cardLastDigits] = filters[cardLastDigits]_example; // String | \n$filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n$filters[currency] = filters[currency]_example; // String | \n$filters[customerPresent] = true; // Boolean | \n$filters[disputed] = true; // Boolean | \n$filters[failureCode] = filters[failureCode]_example; // String | \n$filters[isInstallment] = true; // Boolean | \n$filters[refunded] = 56; // Integer | \n$filters[refundAmount] = 56; // Integer | \n$filters[reversed] = true; // Boolean | \n$filters[safe] = true; // Boolean | \n$filters[scheduled] = true; // Boolean | \n$filters[sourceOfFund] = filters[sourceOfFund]_example; // String | \n$filters[sourceType] = filters[sourceType]_example; // String | \n$filters[status] = filters[status]_example; // String | \n$filters[voided] = true; // Boolean | \n$filters[installmentTerms] = 56; // Integer | \n$filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example; // String | \n\ntry {\n    $result = $api_instance->chargesSearchGet($scope, $query, $filters[amount], $filters[authorized], $filters[capture], $filters[captureId], $filters[captured], $filters[cardLastDigits], $filters[created], $filters[currency], $filters[customerPresent], $filters[disputed], $filters[failureCode], $filters[isInstallment], $filters[refunded], $filters[refundAmount], $filters[reversed], $filters[safe], $filters[scheduled], $filters[sourceOfFund], $filters[sourceType], $filters[status], $filters[voided], $filters[installmentTerms], $filters[acquirerReferenceNumber]);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ChargesApi->chargesSearchGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Retrieve Charges Search-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::ChargesApi;\n\nmy $api_instance = WWW::SwaggerClient::ChargesApi->new();\nmy $scope = scope_example; # String | \nmy $query = query_example; # String | \nmy $filters[amount] = 56; # Integer | \nmy $filters[authorized] = true; # Boolean | \nmy $filters[capture] = true; # Boolean | \nmy $filters[captureId] = filters[captureId]_example; # String | \nmy $filters[captured] = true; # Boolean | \nmy $filters[cardLastDigits] = filters[cardLastDigits]_example; # String | \nmy $filters[created] = 2013-10-20T19:20:30+01:00; # Date | \nmy $filters[currency] = filters[currency]_example; # String | \nmy $filters[customerPresent] = true; # Boolean | \nmy $filters[disputed] = true; # Boolean | \nmy $filters[failureCode] = filters[failureCode]_example; # String | \nmy $filters[isInstallment] = true; # Boolean | \nmy $filters[refunded] = 56; # Integer | \nmy $filters[refundAmount] = 56; # Integer | \nmy $filters[reversed] = true; # Boolean | \nmy $filters[safe] = true; # Boolean | \nmy $filters[scheduled] = true; # Boolean | \nmy $filters[sourceOfFund] = filters[sourceOfFund]_example; # String | \nmy $filters[sourceType] = filters[sourceType]_example; # String | \nmy $filters[status] = filters[status]_example; # String | \nmy $filters[voided] = true; # Boolean | \nmy $filters[installmentTerms] = 56; # Integer | \nmy $filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example; # String | \n\neval { \n    my $result = $api_instance->chargesSearchGet(scope => $scope, query => $query, filters[amount] => $filters[amount], filters[authorized] => $filters[authorized], filters[capture] => $filters[capture], filters[captureId] => $filters[captureId], filters[captured] => $filters[captured], filters[cardLastDigits] => $filters[cardLastDigits], filters[created] => $filters[created], filters[currency] => $filters[currency], filters[customerPresent] => $filters[customerPresent], filters[disputed] => $filters[disputed], filters[failureCode] => $filters[failureCode], filters[isInstallment] => $filters[isInstallment], filters[refunded] => $filters[refunded], filters[refundAmount] => $filters[refundAmount], filters[reversed] => $filters[reversed], filters[safe] => $filters[safe], filters[scheduled] => $filters[scheduled], filters[sourceOfFund] => $filters[sourceOfFund], filters[sourceType] => $filters[sourceType], filters[status] => $filters[status], filters[voided] => $filters[voided], filters[installmentTerms] => $filters[installmentTerms], filters[acquirerReferenceNumber] => $filters[acquirerReferenceNumber]);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling ChargesApi->chargesSearchGet: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Retrieve Charges Search-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.ChargesApi()\nscope = scope_example # String |  (optional) (default to charge)\nquery = query_example # String |  (optional)\nfilters[amount] = 56 # Integer |  (optional)\nfilters[authorized] = true # Boolean |  (optional)\nfilters[capture] = true # Boolean |  (optional)\nfilters[captureId] = filters[captureId]_example # String |  (optional)\nfilters[captured] = true # Boolean |  (optional)\nfilters[cardLastDigits] = filters[cardLastDigits]_example # String |  (optional)\nfilters[created] = 2013-10-20T19:20:30+01:00 # Date |  (optional)\nfilters[currency] = filters[currency]_example # String |  (optional)\nfilters[customerPresent] = true # Boolean |  (optional)\nfilters[disputed] = true # Boolean |  (optional)\nfilters[failureCode] = filters[failureCode]_example # String |  (optional)\nfilters[isInstallment] = true # Boolean |  (optional)\nfilters[refunded] = 56 # Integer |  (optional)\nfilters[refundAmount] = 56 # Integer |  (optional)\nfilters[reversed] = true # Boolean |  (optional)\nfilters[safe] = true # Boolean |  (optional)\nfilters[scheduled] = true # Boolean |  (optional)\nfilters[sourceOfFund] = filters[sourceOfFund]_example # String |  (optional)\nfilters[sourceType] = filters[sourceType]_example # String |  (optional)\nfilters[status] = filters[status]_example # String |  (optional)\nfilters[voided] = true # Boolean |  (optional)\nfilters[installmentTerms] = 56 # Integer |  (optional)\nfilters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example # String |  (optional)\n\ntry: \n    api_response = api_instance.charges_search_get(scope=scope, query=query, filters[amount]=filters[amount], filters[authorized]=filters[authorized], filters[capture]=filters[capture], filters[captureId]=filters[captureId], filters[captured]=filters[captured], filters[cardLastDigits]=filters[cardLastDigits], filters[created]=filters[created], filters[currency]=filters[currency], filters[customerPresent]=filters[customerPresent], filters[disputed]=filters[disputed], filters[failureCode]=filters[failureCode], filters[isInstallment]=filters[isInstallment], filters[refunded]=filters[refunded], filters[refundAmount]=filters[refundAmount], filters[reversed]=filters[reversed], filters[safe]=filters[safe], filters[scheduled]=filters[scheduled], filters[sourceOfFund]=filters[sourceOfFund], filters[sourceType]=filters[sourceType], filters[status]=filters[status], filters[voided]=filters[voided], filters[installmentTerms]=filters[installmentTerms], filters[acquirerReferenceNumber]=filters[acquirerReferenceNumber])\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling ChargesApi->chargesSearchGet: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-13",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"scope"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"query"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[amount]"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[authorized]"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[capture]"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[capture_id]"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[captured]"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[card_last_digits]"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[created]"}),(0,i.jsx)(e.td,{children:"Date (date-time)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[currency]"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[customer_present]"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[disputed]"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[failure_code]"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[is_installment]"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[refunded]"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[refund_amount]"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[reversed]"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[safe]"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[scheduled]"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[source_of_fund]"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[source_type]"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[status]"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[voided]"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[installment_terms]"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[acquirer_reference_number]"}),(0,i.jsx)(e.td,{children:"String"})]})]})]})]})]}),(0,i.jsxs)("div",{children:[(0,i.jsx)(e.h3,{id:"responses",children:"Responses"}),(0,i.jsx)(e.h3,{id:"status-200",children:"Status: 200"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:' {\n  "object": {\n    "pattern": "charge",\n    "type": "string",\n    "default": "charge"\n  },\n  "id": {\n    "pattern": "chrg_[0-9a-z]+",\n    "type": "string"\n  },\n  "location": {\n    "type": "string"\n  },\n  "amount": {\n    "type": "integer"\n  },\n  "authorization_type": {\n    "type": "string"\n  },\n  "authorized_amount": {\n    "type": "integer"\n  },\n  "captured_amount": {\n    "type": "integer"\n  },\n  "acquirer_reference_number": {\n    "type": "string",\n    "nullable": true\n  },\n  "net": {\n    "type": "integer"\n  },\n  "fee": {\n    "type": "integer"\n  },\n  "fee_vat": {\n    "type": "integer"\n  },\n  "interest": {\n    "type": "integer"\n  },\n  "interest_vat": {\n    "type": "integer"\n  },\n  "funding_amount": {\n    "type": "integer"\n  },\n  "refunded_amount": {\n    "type": "integer"\n  },\n  "transaction_fees": {\n    "type": "object",\n    "properties": {\n      "fee_flat": {\n        "type": "integer"\n      },\n      "fee_rate": {\n        "type": "number",\n        "format": "float"\n      },\n      "vat_rate": {\n        "type": "number",\n        "format": "float"\n      }\n    }\n  },\n  "platform_fee": {\n    "type": "object",\n    "properties": {\n      "fixed": {\n        "type": "integer"\n      },\n      "amount": {\n        "type": "integer"\n      },\n      "percentage": {\n        "type": "string"\n      }\n    }\n  },\n  "unmanaged_payment": {\n    "type": "object",\n    "properties": {\n      "authorization_code": {\n        "type": "string"\n      },\n      "backend_name": {\n        "type": "string"\n      },\n      "iin": {\n        "type": "string"\n      },\n      "merchant_reference": {\n        "type": "string"\n      }\n    }\n  },\n  "three_ds_info": {\n    "type": "object",\n    "properties": {\n      "three_ds_version": {\n        "type": "string"\n      },\n      "authenticated_at": {\n        "type": "string",\n        "format": "date-time"\n      },\n      "eci": {\n        "type": "string"\n      },\n      "transaction_status": {\n        "type": "string"\n      },\n      "acs_url": {\n        "type": "string"\n      }\n    }\n  },\n  "currency": {\n    "type": "string",\n    "format": "currency"\n  },\n  "funding_currency": {\n    "type": "string",\n    "format": "currency"\n  },\n  "ip": {\n    "type": "string",\n    "nullable": true\n  },\n  "refunds": {\n    "type": "object",\n    "properties": {\n      "object": {\n        "pattern": "list",\n        "type": "string",\n        "default": "list"\n      },\n      "data": {\n        "type": "array",\n        "items": {}\n      },\n      "limit": {\n        "type": "integer"\n      },\n      "offset": {\n        "type": "integer"\n      },\n      "total": {\n        "type": "integer"\n      },\n      "location": {\n        "type": "string"\n      },\n      "order": {\n        "type": "string",\n        "enum": [\n          "chronological",\n          "reverse_chronological"\n        ]\n      },\n      "from": {\n        "type": "string",\n        "format": "date-time"\n      },\n      "to": {\n        "type": "string",\n        "format": "date-time"\n      }\n    }\n  },\n  "link": {\n    "oneOf": [\n      {\n        "type": "object",\n        "properties": {\n          "object": {\n            "pattern": "link",\n            "type": "string",\n            "default": "link"\n          },\n          "id": {\n            "type": "string"\n          },\n          "livemode": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "location": {\n            "type": "string"\n          },\n          "deleted": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "multiple": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "used": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "currency": {\n            "type": "string",\n            "format": "currency"\n          },\n          "amount": {\n            "type": "integer"\n          },\n          "charges": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "list",\n                "type": "string",\n                "default": "list"\n              },\n              "data": {\n                "type": "array",\n                "items": {}\n              },\n              "limit": {\n                "type": "integer"\n              },\n              "offset": {\n                "type": "integer"\n              },\n              "total": {\n                "type": "integer"\n              },\n              "location": {\n                "type": "string"\n              },\n              "order": {\n                "type": "string",\n                "enum": [\n                  "chronological",\n                  "reverse_chronological"\n                ]\n              },\n              "from": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "to": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "description": {\n            "type": "string"\n          },\n          "title": {\n            "type": "string"\n          },\n          "payment_uri": {\n            "type": "string",\n            "format": "uri"\n          },\n          "created_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "used_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "deleted_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "merchant_name": {\n            "type": "string"\n          },\n          "merchant_uid": {\n            "type": "string"\n          }\n        }\n      },\n      {\n        "type": "string"\n      }\n    ]\n  },\n  "description": {\n    "type": "string",\n    "nullable": true\n  },\n  "metadata": {\n    "type": "object",\n    "default": {}\n  },\n  "missing_3ds_fields": {\n    "type": "object"\n  },\n  "card": {\n    "type": "object",\n    "properties": {\n      "object": {\n        "pattern": "card",\n        "type": "string",\n        "default": "card"\n      },\n      "id": {\n        "type": "string"\n      },\n      "livemode": {\n        "type": "boolean",\n        "enum": [\n          true,\n          false\n        ]\n      },\n      "location": {\n        "type": "string"\n      },\n      "deleted": {\n        "type": "boolean",\n        "enum": [\n          true,\n          false\n        ]\n      },\n      "street1": {\n        "type": "string",\n        "nullable": true\n      },\n      "street2": {\n        "type": "string",\n        "nullable": true\n      },\n      "city": {\n        "type": "string",\n        "nullable": true\n      },\n      "state": {\n        "type": "string",\n        "nullable": true\n      },\n      "phone_number": {\n        "type": "string",\n        "nullable": true\n      },\n      "postal_code": {\n        "type": "string",\n        "nullable": true\n      },\n      "country": {\n        "pattern": "^[a-z]{0,2}$",\n        "type": "string"\n      },\n      "financing": {\n        "type": "string"\n      },\n      "bank": {\n        "type": "string"\n      },\n      "brand": {\n        "type": "string"\n      },\n      "fingerprint": {\n        "type": "string"\n      },\n      "first_digits": {\n        "pattern": "^[0-9]{6}$",\n        "type": "string",\n        "nullable": true\n      },\n      "last_digits": {\n        "pattern": "^[0-9]{4}$",\n        "type": "string"\n      },\n      "name": {\n        "type": "string"\n      },\n      "expiration_month": {\n        "type": "integer"\n      },\n      "expiration_year": {\n        "type": "integer"\n      },\n      "security_code_check": {\n        "type": "boolean",\n        "enum": [\n          true,\n          false\n        ]\n      },\n      "tokenization_method": {\n        "type": "string"\n      },\n      "created_at": {\n        "type": "string",\n        "format": "date-time"\n      }\n    }\n  },\n  "source": {\n    "type": "object",\n    "properties": {\n      "object": {\n        "pattern": "source",\n        "type": "string",\n        "default": "source"\n      },\n      "id": {\n        "type": "string"\n      },\n      "livemode": {\n        "type": "boolean",\n        "enum": [\n          true,\n          false\n        ]\n      },\n      "location": {\n        "type": "string"\n      },\n      "amount": {\n        "type": "integer"\n      },\n      "barcode": {\n        "type": "string"\n      },\n      "bank": {\n        "type": "string"\n      },\n      "created_at": {\n        "type": "string",\n        "format": "date-time"\n      },\n      "currency": {\n        "type": "string",\n        "format": "currency"\n      },\n      "email": {\n        "type": "string"\n      },\n      "flow": {\n        "type": "string",\n        "enum": [\n          "redirect",\n          "offline",\n          "app_redirect"\n        ]\n      },\n      "installment_term": {\n        "type": "integer"\n      },\n      "ip": {\n        "type": "string"\n      },\n      "absorption_type": {\n        "type": "string",\n        "enum": [\n          "merchant",\n          "customer"\n        ]\n      },\n      "name": {\n        "type": "string"\n      },\n      "mobile_number": {\n        "type": "string"\n      },\n      "phone_number": {\n        "type": "string"\n      },\n      "platform_type": {\n        "type": "string"\n      },\n      "scannable_code": {\n        "type": "object",\n        "properties": {\n          "object": {\n            "pattern": "barcode",\n            "type": "string",\n            "default": "barcode"\n          },\n          "type": {\n            "type": "string"\n          },\n          "image": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "document",\n                "type": "string",\n                "default": "document"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "id": {\n                "type": "string"\n              },\n              "deleted": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "filename": {\n                "type": "string"\n              },\n              "location": {\n                "type": "string"\n              },\n              "kind": {\n                "type": "string"\n              },\n              "download_uri": {\n                "type": "string",\n                "format": "uri"\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "raw_data": {\n            "type": "string"\n          }\n        }\n      },\n      "qr_settings": {\n        "type": "object",\n        "properties": {\n          "image_type": {\n            "type": "string"\n          }\n        }\n      },\n      "billing": {\n        "type": "object",\n        "properties": {\n          "city": {\n            "type": "string"\n          },\n          "country": {\n            "type": "string"\n          },\n          "postal_code": {\n            "type": "string"\n          },\n          "state": {\n            "type": "string"\n          },\n          "street1": {\n            "type": "string"\n          },\n          "street2": {\n            "type": "string"\n          }\n        }\n      },\n      "shipping": {\n        "type": "object",\n        "properties": {\n          "city": {\n            "type": "string"\n          },\n          "country": {\n            "type": "string"\n          },\n          "postal_code": {\n            "type": "string"\n          },\n          "state": {\n            "type": "string"\n          },\n          "street1": {\n            "type": "string"\n          },\n          "street2": {\n            "type": "string"\n          }\n        }\n      },\n      "items": {\n        "type": "array",\n        "items": {}\n      },\n      "references": {\n        "type": "object",\n        "properties": {\n          "expires_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "device_id": {\n            "type": "string"\n          },\n          "customer_amount": {\n            "type": "integer"\n          },\n          "customer_currency": {\n            "type": "string"\n          },\n          "customer_exchange_rate": {\n            "type": "number",\n            "format": "float"\n          },\n          "omise_tax_id": {\n            "type": "string"\n          },\n          "reference_number_1": {\n            "type": "string"\n          },\n          "reference_number_2": {\n            "type": "string"\n          },\n          "barcode": {\n            "type": "string"\n          },\n          "payment_code": {\n            "type": "string"\n          },\n          "va_code": {\n            "type": "string"\n          }\n        }\n      },\n      "provider_references": {\n        "type": "object",\n        "properties": {\n          "reference_number_1": {\n            "type": "string"\n          },\n          "reference_number_2": {\n            "type": "string"\n          },\n          "buyer_name": {\n            "type": "string"\n          }\n        }\n      },\n      "store_id": {\n        "type": "string"\n      },\n      "store_name": {\n        "type": "string"\n      },\n      "terminal_id": {\n        "type": "string"\n      },\n      "type": {\n        "type": "string"\n      },\n      "zero_interest_installments": {\n        "type": "boolean",\n        "enum": [\n          true,\n          false\n        ]\n      },\n      "charge_status": {\n        "type": "string",\n        "enum": [\n          "failed",\n          "expired",\n          "pending",\n          "reversed",\n          "successful",\n          "unknown"\n        ]\n      },\n      "receipt_amount": {\n        "type": "integer"\n      },\n      "discounts": {\n        "type": "array",\n        "items": {},\n        "default": []\n      },\n      "promotion_code": {\n        "type": "string"\n      },\n      "supplier_id": {\n        "type": "string"\n      }\n    }\n  },\n  "schedule": {\n    "oneOf": [\n      {\n        "type": "object",\n        "properties": {\n          "object": {\n            "pattern": "schedule",\n            "type": "string",\n            "default": "schedule"\n          },\n          "id": {\n            "pattern": "schd_[0-9a-z]+",\n            "type": "string"\n          },\n          "deleted": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "livemode": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "location": {\n            "type": "string"\n          },\n          "every": {\n            "type": "integer"\n          },\n          "occurrences": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "list",\n                "type": "string",\n                "default": "list"\n              },\n              "data": {\n                "type": "array",\n                "items": {}\n              },\n              "limit": {\n                "type": "integer"\n              },\n              "offset": {\n                "type": "integer"\n              },\n              "total": {\n                "type": "integer"\n              },\n              "location": {\n                "type": "string"\n              },\n              "order": {\n                "type": "string",\n                "enum": [\n                  "chronological",\n                  "reverse_chronological"\n                ]\n              },\n              "from": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "to": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "on": {\n            "type": "object",\n            "properties": {\n              "days_of_month": {\n                "type": "array",\n                "items": {}\n              },\n              "weekday_of_month": {\n                "type": "string"\n              },\n              "weekdays": {\n                "type": "array",\n                "items": {\n                  "type": "string"\n                },\n                "enum": [\n                  "sunday",\n                  "monday",\n                  "tuesday",\n                  "wednesday",\n                  "thursday",\n                  "friday",\n                  "saturday"\n                ]\n              }\n            }\n          },\n          "in_words": {\n            "type": "string"\n          },\n          "period": {\n            "type": "string",\n            "enum": [\n              "day",\n              "week",\n              "month"\n            ]\n          },\n          "status": {\n            "type": "string",\n            "enum": [\n              "running",\n              "active",\n              "expiring",\n              "expired",\n              "deleted",\n              "suspended"\n            ]\n          },\n          "active": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "state": {\n            "type": "string",\n            "enum": [\n              "Active",\n              "Pause"\n            ]\n          },\n          "charge": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "charge_schedule",\n                "type": "string",\n                "default": "charge_schedule"\n              },\n              "id": {\n                "pattern": "rchg_[0-9a-z]+",\n                "type": "string"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "currency": {\n                "type": "string",\n                "format": "currency"\n              },\n              "amount": {\n                "type": "integer"\n              },\n              "default_card": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "card": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "card",\n                        "type": "string",\n                        "default": "card"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "street1": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "street2": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "city": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "state": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "phone_number": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "postal_code": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "country": {\n                        "pattern": "^[a-z]{0,2}$",\n                        "type": "string"\n                      },\n                      "financing": {\n                        "type": "string"\n                      },\n                      "bank": {\n                        "type": "string"\n                      },\n                      "brand": {\n                        "type": "string"\n                      },\n                      "fingerprint": {\n                        "type": "string"\n                      },\n                      "first_digits": {\n                        "pattern": "^[0-9]{6}$",\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "last_digits": {\n                        "pattern": "^[0-9]{4}$",\n                        "type": "string"\n                      },\n                      "name": {\n                        "type": "string"\n                      },\n                      "expiration_month": {\n                        "type": "integer"\n                      },\n                      "expiration_year": {\n                        "type": "integer"\n                      },\n                      "security_code_check": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "tokenization_method": {\n                        "type": "string"\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "customer": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "customer",\n                        "type": "string",\n                        "default": "customer"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "cards": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "list",\n                            "type": "string",\n                            "default": "list"\n                          },\n                          "data": {\n                            "type": "array",\n                            "items": {}\n                          },\n                          "limit": {\n                            "type": "integer"\n                          },\n                          "offset": {\n                            "type": "integer"\n                          },\n                          "total": {\n                            "type": "integer"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "order": {\n                            "type": "string",\n                            "enum": [\n                              "chronological",\n                              "reverse_chronological"\n                            ]\n                          },\n                          "from": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "to": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "default_card": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "card",\n                                "type": "string",\n                                "default": "card"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "street1": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "street2": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "city": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "state": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "phone_number": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "postal_code": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "country": {\n                                "pattern": "^[a-z]{0,2}$",\n                                "type": "string"\n                              },\n                              "financing": {\n                                "type": "string"\n                              },\n                              "bank": {\n                                "type": "string"\n                              },\n                              "brand": {\n                                "type": "string"\n                              },\n                              "fingerprint": {\n                                "type": "string"\n                              },\n                              "first_digits": {\n                                "pattern": "^[0-9]{6}$",\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "last_digits": {\n                                "pattern": "^[0-9]{4}$",\n                                "type": "string"\n                              },\n                              "name": {\n                                "type": "string"\n                              },\n                              "expiration_month": {\n                                "type": "integer"\n                              },\n                              "expiration_year": {\n                                "type": "integer"\n                              },\n                              "security_code_check": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "tokenization_method": {\n                                "type": "string"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "linked_accounts": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "list",\n                            "type": "string",\n                            "default": "list"\n                          },\n                          "data": {\n                            "type": "array",\n                            "items": {}\n                          },\n                          "limit": {\n                            "type": "integer"\n                          },\n                          "offset": {\n                            "type": "integer"\n                          },\n                          "total": {\n                            "type": "integer"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "order": {\n                            "type": "string",\n                            "enum": [\n                              "chronological",\n                              "reverse_chronological"\n                            ]\n                          },\n                          "from": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "to": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "description": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "email": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "linked_account": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "linked_account",\n                        "type": "string",\n                        "default": "linked_account"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "registration_uri": {\n                        "type": "string",\n                        "format": "uri"\n                      },\n                      "return_uri": {\n                        "type": "string",\n                        "format": "uri"\n                      },\n                      "type": {\n                        "type": "string"\n                      },\n                      "status": {\n                        "type": "string",\n                        "enum": [\n                          "failed",\n                          "expired",\n                          "deleted",\n                          "pending",\n                          "successful"\n                        ]\n                      },\n                      "last_digits": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "failure_code": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "failure_message": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "registered_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "expires_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "description": {\n                "type": "string",\n                "nullable": true\n              },\n              "metadata": {\n                "type": "object",\n                "default": {}\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "transfer": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "transfer_schedule",\n                "type": "string",\n                "default": "transfer_schedule"\n              },\n              "id": {\n                "pattern": "rtrf_[0-9a-z]+",\n                "type": "string"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "amount": {\n                "type": "integer",\n                "nullable": true\n              },\n              "currency": {\n                "type": "string",\n                "format": "currency"\n              },\n              "percentage_of_balance": {\n                "type": "number",\n                "format": "float",\n                "nullable": true\n              },\n              "recipient": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "recipient",\n                        "type": "string",\n                        "default": "recipient"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "bank_account": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "bank_account",\n                            "type": "string",\n                            "default": "bank_account"\n                          },\n                          "livemode": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "last_digits": {\n                            "pattern": "^[0-9]{4}$",\n                            "type": "string"\n                          },\n                          "account_number": {\n                            "type": "string"\n                          },\n                          "name": {\n                            "type": "string"\n                          },\n                          "type": {\n                            "type": "string",\n                            "enum": [\n                              "normal",\n                              "current"\n                            ]\n                          },\n                          "created_at": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "brand": {\n                            "type": "string"\n                          },\n                          "bank_code": {\n                            "type": "string"\n                          },\n                          "branch_code": {\n                            "type": "string"\n                          }\n                        }\n                      },\n                      "active": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "default": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "verified": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "description": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "email": {\n                        "type": "string"\n                      },\n                      "failure_code": {\n                        "type": "string",\n                        "nullable": true,\n                        "enum": [\n                          "name_mismatch",\n                          "account_not_found",\n                          "bank_not_found"\n                        ]\n                      },\n                      "name": {\n                        "type": "string"\n                      },\n                      "tax_id": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "type": {\n                        "type": "string",\n                        "enum": [\n                          "individual",\n                          "corporation"\n                        ]\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "schedule": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "schedule",\n                                "type": "string",\n                                "default": "schedule"\n                              },\n                              "id": {\n                                "pattern": "schd_[0-9a-z]+",\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "every": {\n                                "type": "integer"\n                              },\n                              "occurrences": {\n                                "$ref": "#/components/schemas/list"\n                              },\n                              "on": {\n                                "$ref": "#/components/schemas/schedule_on"\n                              },\n                              "in_words": {\n                                "type": "string"\n                              },\n                              "period": {\n                                "type": "string",\n                                "enum": [\n                                  "day",\n                                  "week",\n                                  "month"\n                                ]\n                              },\n                              "status": {\n                                "type": "string",\n                                "enum": [\n                                  "running",\n                                  "active",\n                                  "expiring",\n                                  "expired",\n                                  "deleted",\n                                  "suspended"\n                                ]\n                              },\n                              "active": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "state": {\n                                "type": "string",\n                                "enum": [\n                                  "Active",\n                                  "Pause"\n                                ]\n                              },\n                              "charge": {\n                                "$ref": "#/components/schemas/charge_schedule"\n                              },\n                              "transfer": {\n                                "$ref": "#/components/schemas/transfer_schedule"\n                              },\n                              "next_occurrences_on": {\n                                "type": "array",\n                                "items": {\n                                  "type": "string",\n                                  "format": "date"\n                                }\n                              },\n                              "ended_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "start_on": {\n                                "type": "string",\n                                "format": "date"\n                              },\n                              "end_on": {\n                                "type": "string",\n                                "format": "date"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "execute_time": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "deleted_by": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "merchant_name": {\n                                "type": "string"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "verified_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "activated_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "is_realtime_payout": {\n                "type": "boolean",\n                "nullable": true,\n                "enum": [\n                  true,\n                  false\n                ]\n              }\n            }\n          },\n          "next_occurrences_on": {\n            "type": "array",\n            "items": {\n              "type": "string",\n              "format": "date"\n            }\n          },\n          "ended_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "start_on": {\n            "type": "string",\n            "format": "date"\n          },\n          "end_on": {\n            "type": "string",\n            "format": "date"\n          },\n          "created_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "execute_time": {\n            "type": "string",\n            "nullable": true\n          },\n          "deleted_by": {\n            "type": "string",\n            "nullable": true\n          },\n          "merchant_name": {\n            "type": "string"\n          }\n        }\n      },\n      {\n        "type": "string"\n      }\n    ]\n  },\n  "linked_account": {\n    "type": "object",\n    "properties": {\n      "object": {\n        "pattern": "linked_account",\n        "type": "string",\n        "default": "linked_account"\n      },\n      "id": {\n        "type": "string"\n      },\n      "livemode": {\n        "type": "boolean",\n        "enum": [\n          true,\n          false\n        ]\n      },\n      "location": {\n        "type": "string"\n      },\n      "registration_uri": {\n        "type": "string",\n        "format": "uri"\n      },\n      "return_uri": {\n        "type": "string",\n        "format": "uri"\n      },\n      "type": {\n        "type": "string"\n      },\n      "status": {\n        "type": "string",\n        "enum": [\n          "failed",\n          "expired",\n          "deleted",\n          "pending",\n          "successful"\n        ]\n      },\n      "last_digits": {\n        "type": "string",\n        "nullable": true\n      },\n      "metadata": {\n        "type": "object",\n        "default": {}\n      },\n      "failure_code": {\n        "type": "string",\n        "nullable": true\n      },\n      "failure_message": {\n        "type": "string",\n        "nullable": true\n      },\n      "registered_at": {\n        "type": "string",\n        "format": "date-time"\n      },\n      "expires_at": {\n        "type": "string",\n        "format": "date-time"\n      },\n      "created_at": {\n        "type": "string",\n        "format": "date-time"\n      }\n    }\n  },\n  "customer": {\n    "oneOf": [\n      {\n        "type": "object",\n        "properties": {\n          "object": {\n            "pattern": "customer",\n            "type": "string",\n            "default": "customer"\n          },\n          "id": {\n            "type": "string"\n          },\n          "livemode": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "location": {\n            "type": "string"\n          },\n          "deleted": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "metadata": {\n            "type": "object",\n            "default": {}\n          },\n          "cards": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "list",\n                "type": "string",\n                "default": "list"\n              },\n              "data": {\n                "type": "array",\n                "items": {}\n              },\n              "limit": {\n                "type": "integer"\n              },\n              "offset": {\n                "type": "integer"\n              },\n              "total": {\n                "type": "integer"\n              },\n              "location": {\n                "type": "string"\n              },\n              "order": {\n                "type": "string",\n                "enum": [\n                  "chronological",\n                  "reverse_chronological"\n                ]\n              },\n              "from": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "to": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "default_card": {\n            "oneOf": [\n              {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "card",\n                    "type": "string",\n                    "default": "card"\n                  },\n                  "id": {\n                    "type": "string"\n                  },\n                  "livemode": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "deleted": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "street1": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "street2": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "city": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "state": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "phone_number": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "postal_code": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "country": {\n                    "pattern": "^[a-z]{0,2}$",\n                    "type": "string"\n                  },\n                  "financing": {\n                    "type": "string"\n                  },\n                  "bank": {\n                    "type": "string"\n                  },\n                  "brand": {\n                    "type": "string"\n                  },\n                  "fingerprint": {\n                    "type": "string"\n                  },\n                  "first_digits": {\n                    "pattern": "^[0-9]{6}$",\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "last_digits": {\n                    "pattern": "^[0-9]{4}$",\n                    "type": "string"\n                  },\n                  "name": {\n                    "type": "string"\n                  },\n                  "expiration_month": {\n                    "type": "integer"\n                  },\n                  "expiration_year": {\n                    "type": "integer"\n                  },\n                  "security_code_check": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "tokenization_method": {\n                    "type": "string"\n                  },\n                  "created_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  }\n                }\n              },\n              {\n                "type": "string"\n              }\n            ]\n          },\n          "linked_accounts": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "list",\n                "type": "string",\n                "default": "list"\n              },\n              "data": {\n                "type": "array",\n                "items": {}\n              },\n              "limit": {\n                "type": "integer"\n              },\n              "offset": {\n                "type": "integer"\n              },\n              "total": {\n                "type": "integer"\n              },\n              "location": {\n                "type": "string"\n              },\n              "order": {\n                "type": "string",\n                "enum": [\n                  "chronological",\n                  "reverse_chronological"\n                ]\n              },\n              "from": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "to": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "description": {\n            "type": "string",\n            "nullable": true\n          },\n          "email": {\n            "type": "string",\n            "nullable": true\n          },\n          "created_at": {\n            "type": "string",\n            "format": "date-time"\n          }\n        }\n      },\n      {\n        "type": "string"\n      }\n    ]\n  },\n  "dispute": {\n    "type": "object",\n    "properties": {\n      "object": {\n        "pattern": "dispute",\n        "type": "string",\n        "default": "dispute"\n      },\n      "id": {\n        "type": "string"\n      },\n      "livemode": {\n        "type": "boolean",\n        "enum": [\n          true,\n          false\n        ]\n      },\n      "location": {\n        "type": "string"\n      },\n      "currency": {\n        "type": "string",\n        "format": "currency"\n      },\n      "amount": {\n        "type": "integer"\n      },\n      "funding_amount": {\n        "type": "integer"\n      },\n      "funding_currency": {\n        "type": "string",\n        "format": "currency"\n      },\n      "metadata": {\n        "type": "object",\n        "default": {}\n      },\n      "charge": {\n        "oneOf": [\n          {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "charge",\n                "type": "string",\n                "default": "charge"\n              },\n              "id": {\n                "pattern": "chrg_[0-9a-z]+",\n                "type": "string"\n              },\n              "location": {\n                "type": "string"\n              },\n              "amount": {\n                "type": "integer"\n              },\n              "authorization_type": {\n                "type": "string"\n              },\n              "authorized_amount": {\n                "type": "integer"\n              },\n              "captured_amount": {\n                "type": "integer"\n              },\n              "acquirer_reference_number": {\n                "type": "string",\n                "nullable": true\n              },\n              "net": {\n                "type": "integer"\n              },\n              "fee": {\n                "type": "integer"\n              },\n              "fee_vat": {\n                "type": "integer"\n              },\n              "interest": {\n                "type": "integer"\n              },\n              "interest_vat": {\n                "type": "integer"\n              },\n              "funding_amount": {\n                "type": "integer"\n              },\n              "refunded_amount": {\n                "type": "integer"\n              },\n              "transaction_fees": {\n                "type": "object",\n                "properties": {\n                  "fee_flat": {\n                    "type": "integer"\n                  },\n                  "fee_rate": {\n                    "type": "number",\n                    "format": "float"\n                  },\n                  "vat_rate": {\n                    "type": "number",\n                    "format": "float"\n                  }\n                }\n              },\n              "platform_fee": {\n                "type": "object",\n                "properties": {\n                  "fixed": {\n                    "type": "integer"\n                  },\n                  "amount": {\n                    "type": "integer"\n                  },\n                  "percentage": {\n                    "type": "string"\n                  }\n                }\n              },\n              "unmanaged_payment": {\n                "type": "object",\n                "properties": {\n                  "authorization_code": {\n                    "type": "string"\n                  },\n                  "backend_name": {\n                    "type": "string"\n                  },\n                  "iin": {\n                    "type": "string"\n                  },\n                  "merchant_reference": {\n                    "type": "string"\n                  }\n                }\n              },\n              "three_ds_info": {\n                "type": "object",\n                "properties": {\n                  "three_ds_version": {\n                    "type": "string"\n                  },\n                  "authenticated_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "eci": {\n                    "type": "string"\n                  },\n                  "transaction_status": {\n                    "type": "string"\n                  },\n                  "acs_url": {\n                    "type": "string"\n                  }\n                }\n              },\n              "currency": {\n                "type": "string",\n                "format": "currency"\n              },\n              "funding_currency": {\n                "type": "string",\n                "format": "currency"\n              },\n              "ip": {\n                "type": "string",\n                "nullable": true\n              },\n              "refunds": {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "list",\n                    "type": "string",\n                    "default": "list"\n                  },\n                  "data": {\n                    "type": "array",\n                    "items": {}\n                  },\n                  "limit": {\n                    "type": "integer"\n                  },\n                  "offset": {\n                    "type": "integer"\n                  },\n                  "total": {\n                    "type": "integer"\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "order": {\n                    "type": "string",\n                    "enum": [\n                      "chronological",\n                      "reverse_chronological"\n                    ]\n                  },\n                  "from": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "to": {\n                    "type": "string",\n                    "format": "date-time"\n                  }\n                }\n              },\n              "link": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "link",\n                        "type": "string",\n                        "default": "link"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "multiple": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "used": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "currency": {\n                        "type": "string",\n                        "format": "currency"\n                      },\n                      "amount": {\n                        "type": "integer"\n                      },\n                      "charges": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "list",\n                            "type": "string",\n                            "default": "list"\n                          },\n                          "data": {\n                            "type": "array",\n                            "items": {}\n                          },\n                          "limit": {\n                            "type": "integer"\n                          },\n                          "offset": {\n                            "type": "integer"\n                          },\n                          "total": {\n                            "type": "integer"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "order": {\n                            "type": "string",\n                            "enum": [\n                              "chronological",\n                              "reverse_chronological"\n                            ]\n                          },\n                          "from": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "to": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "description": {\n                        "type": "string"\n                      },\n                      "title": {\n                        "type": "string"\n                      },\n                      "payment_uri": {\n                        "type": "string",\n                        "format": "uri"\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "used_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "deleted_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "merchant_name": {\n                        "type": "string"\n                      },\n                      "merchant_uid": {\n                        "type": "string"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "description": {\n                "type": "string",\n                "nullable": true\n              },\n              "metadata": {\n                "type": "object",\n                "default": {}\n              },\n              "missing_3ds_fields": {\n                "type": "object"\n              },\n              "card": {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "card",\n                    "type": "string",\n                    "default": "card"\n                  },\n                  "id": {\n                    "type": "string"\n                  },\n                  "livemode": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "deleted": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "street1": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "street2": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "city": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "state": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "phone_number": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "postal_code": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "country": {\n                    "pattern": "^[a-z]{0,2}$",\n                    "type": "string"\n                  },\n                  "financing": {\n                    "type": "string"\n                  },\n                  "bank": {\n                    "type": "string"\n                  },\n                  "brand": {\n                    "type": "string"\n                  },\n                  "fingerprint": {\n                    "type": "string"\n                  },\n                  "first_digits": {\n                    "pattern": "^[0-9]{6}$",\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "last_digits": {\n                    "pattern": "^[0-9]{4}$",\n                    "type": "string"\n                  },\n                  "name": {\n                    "type": "string"\n                  },\n                  "expiration_month": {\n                    "type": "integer"\n                  },\n                  "expiration_year": {\n                    "type": "integer"\n                  },\n                  "security_code_check": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "tokenization_method": {\n                    "type": "string"\n                  },\n                  "created_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  }\n                }\n              },\n              "source": {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "source",\n                    "type": "string",\n                    "default": "source"\n                  },\n                  "id": {\n                    "type": "string"\n                  },\n                  "livemode": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "amount": {\n                    "type": "integer"\n                  },\n                  "barcode": {\n                    "type": "string"\n                  },\n                  "bank": {\n                    "type": "string"\n                  },\n                  "created_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "currency": {\n                    "type": "string",\n                    "format": "currency"\n                  },\n                  "email": {\n                    "type": "string"\n                  },\n                  "flow": {\n                    "type": "string",\n                    "enum": [\n                      "redirect",\n                      "offline",\n                      "app_redirect"\n                    ]\n                  },\n                  "installment_term": {\n                    "type": "integer"\n                  },\n                  "ip": {\n                    "type": "string"\n                  },\n                  "absorption_type": {\n                    "type": "string",\n                    "enum": [\n                      "merchant",\n                      "customer"\n                    ]\n                  },\n                  "name": {\n                    "type": "string"\n                  },\n                  "mobile_number": {\n                    "type": "string"\n                  },\n                  "phone_number": {\n                    "type": "string"\n                  },\n                  "platform_type": {\n                    "type": "string"\n                  },\n                  "scannable_code": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "barcode",\n                        "type": "string",\n                        "default": "barcode"\n                      },\n                      "type": {\n                        "type": "string"\n                      },\n                      "image": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "document",\n                            "type": "string",\n                            "default": "document"\n                          },\n                          "livemode": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "id": {\n                            "type": "string"\n                          },\n                          "deleted": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "filename": {\n                            "type": "string"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "kind": {\n                            "type": "string"\n                          },\n                          "download_uri": {\n                            "type": "string",\n                            "format": "uri"\n                          },\n                          "created_at": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "raw_data": {\n                        "type": "string"\n                      }\n                    }\n                  },\n                  "qr_settings": {\n                    "type": "object",\n                    "properties": {\n                      "image_type": {\n                        "type": "string"\n                      }\n                    }\n                  },\n                  "billing": {\n                    "type": "object",\n                    "properties": {\n                      "city": {\n                        "type": "string"\n                      },\n                      "country": {\n                        "type": "string"\n                      },\n                      "postal_code": {\n                        "type": "string"\n                      },\n                      "state": {\n                        "type": "string"\n                      },\n                      "street1": {\n                        "type": "string"\n                      },\n                      "street2": {\n                        "type": "string"\n                      }\n                    }\n                  },\n                  "shipping": {\n                    "type": "object",\n                    "properties": {\n                      "city": {\n                        "type": "string"\n                      },\n                      "country": {\n                        "type": "string"\n                      },\n                      "postal_code": {\n                        "type": "string"\n                      },\n                      "state": {\n                        "type": "string"\n                      },\n                      "street1": {\n                        "type": "string"\n                      },\n                      "street2": {\n                        "type": "string"\n                      }\n                    }\n                  },\n                  "items": {\n                    "type": "array",\n                    "items": {}\n                  },\n                  "references": {\n                    "type": "object",\n                    "properties": {\n                      "expires_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "device_id": {\n                        "type": "string"\n                      },\n                      "customer_amount": {\n                        "type": "integer"\n                      },\n                      "customer_currency": {\n                        "type": "string"\n                      },\n                      "customer_exchange_rate": {\n                        "type": "number",\n                        "format": "float"\n                      },\n                      "omise_tax_id": {\n                        "type": "string"\n                      },\n                      "reference_number_1": {\n                        "type": "string"\n                      },\n                      "reference_number_2": {\n                        "type": "string"\n                      },\n                      "barcode": {\n                        "type": "string"\n                      },\n                      "payment_code": {\n                        "type": "string"\n                      },\n                      "va_code": {\n                        "type": "string"\n                      }\n                    }\n                  },\n                  "provider_references": {\n                    "type": "object",\n                    "properties": {\n                      "reference_number_1": {\n                        "type": "string"\n                      },\n                      "reference_number_2": {\n                        "type": "string"\n                      },\n                      "buyer_name": {\n                        "type": "string"\n                      }\n                    }\n                  },\n                  "store_id": {\n                    "type": "string"\n                  },\n                  "store_name": {\n                    "type": "string"\n                  },\n                  "terminal_id": {\n                    "type": "string"\n                  },\n                  "type": {\n                    "type": "string"\n                  },\n                  "zero_interest_installments": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "charge_status": {\n                    "type": "string",\n                    "enum": [\n                      "failed",\n                      "expired",\n                      "pending",\n                      "reversed",\n                      "successful",\n                      "unknown"\n                    ]\n                  },\n                  "receipt_amount": {\n                    "type": "integer"\n                  },\n                  "discounts": {\n                    "type": "array",\n                    "items": {},\n                    "default": []\n                  },\n                  "promotion_code": {\n                    "type": "string"\n                  },\n                  "supplier_id": {\n                    "type": "string"\n                  }\n                }\n              },\n              "schedule": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "schedule",\n                        "type": "string",\n                        "default": "schedule"\n                      },\n                      "id": {\n                        "pattern": "schd_[0-9a-z]+",\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "every": {\n                        "type": "integer"\n                      },\n                      "occurrences": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "list",\n                            "type": "string",\n                            "default": "list"\n                          },\n                          "data": {\n                            "type": "array",\n                            "items": {}\n                          },\n                          "limit": {\n                            "type": "integer"\n                          },\n                          "offset": {\n                            "type": "integer"\n                          },\n                          "total": {\n                            "type": "integer"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "order": {\n                            "type": "string",\n                            "enum": [\n                              "chronological",\n                              "reverse_chronological"\n                            ]\n                          },\n                          "from": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "to": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "on": {\n                        "type": "object",\n                        "properties": {\n                          "days_of_month": {\n                            "type": "array",\n                            "items": {}\n                          },\n                          "weekday_of_month": {\n                            "type": "string"\n                          },\n                          "weekdays": {\n                            "type": "array",\n                            "items": {\n                              "type": "string"\n                            },\n                            "enum": [\n                              "sunday",\n                              "monday",\n                              "tuesday",\n                              "wednesday",\n                              "thursday",\n                              "friday",\n                              "saturday"\n                            ]\n                          }\n                        }\n                      },\n                      "in_words": {\n                        "type": "string"\n                      },\n                      "period": {\n                        "type": "string",\n                        "enum": [\n                          "day",\n                          "week",\n                          "month"\n                        ]\n                      },\n                      "status": {\n                        "type": "string",\n                        "enum": [\n                          "running",\n                          "active",\n                          "expiring",\n                          "expired",\n                          "deleted",\n                          "suspended"\n                        ]\n                      },\n                      "active": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "state": {\n                        "type": "string",\n                        "enum": [\n                          "Active",\n                          "Pause"\n                        ]\n                      },\n                      "charge": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "charge_schedule",\n                            "type": "string",\n                            "default": "charge_schedule"\n                          },\n                          "id": {\n                            "pattern": "rchg_[0-9a-z]+",\n                            "type": "string"\n                          },\n                          "livemode": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "currency": {\n                            "type": "string",\n                            "format": "currency"\n                          },\n                          "amount": {\n                            "type": "integer"\n                          },\n                          "default_card": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "card": {\n                            "oneOf": [\n                              {\n                                "type": "object",\n                                "properties": {\n                                  "object": {\n                                    "pattern": "card",\n                                    "type": "string",\n                                    "default": "card"\n                                  },\n                                  "id": {\n                                    "type": "string"\n                                  },\n                                  "livemode": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "location": {\n                                    "type": "string"\n                                  },\n                                  "deleted": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "street1": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "street2": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "city": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "state": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "phone_number": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "postal_code": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "country": {\n                                    "pattern": "^[a-z]{0,2}$",\n                                    "type": "string"\n                                  },\n                                  "financing": {\n                                    "type": "string"\n                                  },\n                                  "bank": {\n                                    "type": "string"\n                                  },\n                                  "brand": {\n                                    "type": "string"\n                                  },\n                                  "fingerprint": {\n                                    "type": "string"\n                                  },\n                                  "first_digits": {\n                                    "pattern": "^[0-9]{6}$",\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "last_digits": {\n                                    "pattern": "^[0-9]{4}$",\n                                    "type": "string"\n                                  },\n                                  "name": {\n                                    "type": "string"\n                                  },\n                                  "expiration_month": {\n                                    "type": "integer"\n                                  },\n                                  "expiration_year": {\n                                    "type": "integer"\n                                  },\n                                  "security_code_check": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "tokenization_method": {\n                                    "type": "string"\n                                  },\n                                  "created_at": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  }\n                                }\n                              },\n                              {\n                                "type": "string"\n                              }\n                            ]\n                          },\n                          "customer": {\n                            "oneOf": [\n                              {\n                                "type": "object",\n                                "properties": {\n                                  "object": {\n                                    "pattern": "customer",\n                                    "type": "string",\n                                    "default": "customer"\n                                  },\n                                  "id": {\n                                    "type": "string"\n                                  },\n                                  "livemode": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "location": {\n                                    "type": "string"\n                                  },\n                                  "deleted": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "metadata": {\n                                    "type": "object",\n                                    "default": {}\n                                  },\n                                  "cards": {\n                                    "type": "object",\n                                    "properties": {\n                                      "object": {\n                                        "pattern": "list",\n                                        "type": "string",\n                                        "default": "list"\n                                      },\n                                      "data": {\n                                        "type": "array",\n                                        "items": {}\n                                      },\n                                      "limit": {\n                                        "type": "integer"\n                                      },\n                                      "offset": {\n                                        "type": "integer"\n                                      },\n                                      "total": {\n                                        "type": "integer"\n                                      },\n                                      "location": {\n                                        "type": "string"\n                                      },\n                                      "order": {\n                                        "type": "string",\n                                        "enum": [\n                                          "chronological",\n                                          "reverse_chronological"\n                                        ]\n                                      },\n                                      "from": {\n                                        "type": "string",\n                                        "format": "date-time"\n                                      },\n                                      "to": {\n                                        "type": "string",\n                                        "format": "date-time"\n                                      }\n                                    }\n                                  },\n                                  "default_card": {\n                                    "oneOf": [\n                                      {\n                                        "type": "object",\n                                        "properties": {\n                                          "object": {\n                                            "pattern": "card",\n                                            "type": "string",\n                                            "default": "card"\n                                          },\n                                          "id": {\n                                            "type": "string"\n                                          },\n                                          "livemode": {\n                                            "type": "boolean",\n                                            "enum": [\n                                              true,\n                                              false\n                                            ]\n                                          },\n                                          "location": {\n                                            "type": "string"\n                                          },\n                                          "deleted": {\n                                            "type": "boolean",\n                                            "enum": [\n                                              true,\n                                              false\n                                            ]\n                                          },\n                                          "street1": {\n                                            "type": "string",\n                                            "nullable": true\n                                          },\n                                          "street2": {\n                                            "type": "string",\n                                            "nullable": true\n                                          },\n                                          "city": {\n                                            "type": "string",\n                                            "nullable": true\n                                          },\n                                          "state": {\n                                            "type": "string",\n                                            "nullable": true\n                                          },\n                                          "phone_number": {\n                                            "type": "string",\n                                            "nullable": true\n                                          },\n                                          "postal_code": {\n                                            "type": "string",\n                                            "nullable": true\n                                          },\n                                          "country": {\n                                            "pattern": "^[a-z]{0,2}$",\n                                            "type": "string"\n                                          },\n                                          "financing": {\n                                            "type": "string"\n                                          },\n                                          "bank": {\n                                            "type": "string"\n                                          },\n                                          "brand": {\n                                            "type": "string"\n                                          },\n                                          "fingerprint": {\n                                            "type": "string"\n                                          },\n                                          "first_digits": {\n                                            "pattern": "^[0-9]{6}$",\n                                            "type": "string",\n                                            "nullable": true\n                                          },\n                                          "last_digits": {\n                                            "pattern": "^[0-9]{4}$",\n                                            "type": "string"\n                                          },\n                                          "name": {\n                                            "type": "string"\n                                          },\n                                          "expiration_month": {\n                                            "type": "integer"\n                                          },\n                                          "expiration_year": {\n                                            "type": "integer"\n                                          },\n                                          "security_code_check": {\n                                            "type": "boolean",\n                                            "enum": [\n                                              true,\n                                              false\n                                            ]\n                                          },\n                                          "tokenization_method": {\n                                            "type": "string"\n                                          },\n                                          "created_at": {\n                                            "type": "string",\n                                            "format": "date-time"\n                                          }\n                                        }\n                                      },\n                                      {\n                                        "type": "string"\n                                      }\n                                    ]\n                                  },\n                                  "linked_accounts": {\n                                    "type": "object",\n                                    "properties": {\n                                      "object": {\n                                        "pattern": "list",\n                                        "type": "string",\n                                        "default": "list"\n                                      },\n                                      "data": {\n                                        "type": "array",\n                                        "items": {}\n                                      },\n                                      "limit": {\n                                        "type": "integer"\n                                      },\n                                      "offset": {\n                                        "type": "integer"\n                                      },\n                                      "total": {\n                                        "type": "integer"\n                                      },\n                                      "location": {\n                                        "type": "string"\n                                      },\n                                      "order": {\n                                        "type": "string",\n                                        "enum": [\n                                          "chronological",\n                                          "reverse_chronological"\n                                        ]\n                                      },\n                                      "from": {\n                                        "type": "string",\n                                        "format": "date-time"\n                                      },\n                                      "to": {\n                                        "type": "string",\n                                        "format": "date-time"\n                                      }\n                                    }\n                                  },\n                                  "description": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "email": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "created_at": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  }\n                                }\n                              },\n                              {\n                                "type": "string"\n                              }\n                            ]\n                          },\n                          "linked_account": {\n                            "oneOf": [\n                              {\n                                "type": "object",\n                                "properties": {\n                                  "object": {\n                                    "pattern": "linked_account",\n                                    "type": "string",\n                                    "default": "linked_account"\n                                  },\n                                  "id": {\n                                    "type": "string"\n                                  },\n                                  "livemode": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "location": {\n                                    "type": "string"\n                                  },\n                                  "registration_uri": {\n                                    "type": "string",\n                                    "format": "uri"\n                                  },\n                                  "return_uri": {\n                                    "type": "string",\n                                    "format": "uri"\n                                  },\n                                  "type": {\n                                    "type": "string"\n                                  },\n                                  "status": {\n                                    "type": "string",\n                                    "enum": [\n                                      "failed",\n                                      "expired",\n                                      "deleted",\n                                      "pending",\n                                      "successful"\n                                    ]\n                                  },\n                                  "last_digits": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "metadata": {\n                                    "type": "object",\n                                    "default": {}\n                                  },\n                                  "failure_code": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "failure_message": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "registered_at": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  },\n                                  "expires_at": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  },\n                                  "created_at": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  }\n                                }\n                              },\n                              {\n                                "type": "string"\n                              }\n                            ]\n                          },\n                          "description": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "metadata": {\n                            "type": "object",\n                            "default": {}\n                          },\n                          "created_at": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "transfer": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "transfer_schedule",\n                            "type": "string",\n                            "default": "transfer_schedule"\n                          },\n                          "id": {\n                            "pattern": "rtrf_[0-9a-z]+",\n                            "type": "string"\n                          },\n                          "livemode": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "amount": {\n                            "type": "integer",\n                            "nullable": true\n                          },\n                          "currency": {\n                            "type": "string",\n                            "format": "currency"\n                          },\n                          "percentage_of_balance": {\n                            "type": "number",\n                            "format": "float",\n                            "nullable": true\n                          },\n                          "recipient": {\n                            "oneOf": [\n                              {\n                                "type": "object",\n                                "properties": {\n                                  "object": {\n                                    "pattern": "recipient",\n                                    "type": "string",\n                                    "default": "recipient"\n                                  },\n                                  "id": {\n                                    "type": "string"\n                                  },\n                                  "livemode": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "location": {\n                                    "type": "string"\n                                  },\n                                  "deleted": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "bank_account": {\n                                    "type": "object",\n                                    "properties": {\n                                      "object": {\n                                        "pattern": "bank_account",\n                                        "type": "string",\n                                        "default": "bank_account"\n                                      },\n                                      "livemode": {\n                                        "type": "boolean",\n                                        "enum": [\n                                          true,\n                                          false\n                                        ]\n                                      },\n                                      "last_digits": {\n                                        "pattern": "^[0-9]{4}$",\n                                        "type": "string"\n                                      },\n                                      "account_number": {\n                                        "type": "string"\n                                      },\n                                      "name": {\n                                        "type": "string"\n                                      },\n                                      "type": {\n                                        "type": "string",\n                                        "enum": [\n                                          "normal",\n                                          "current"\n                                        ]\n                                      },\n                                      "created_at": {\n                                        "type": "string",\n                                        "format": "date-time"\n                                      },\n                                      "brand": {\n                                        "type": "string"\n                                      },\n                                      "bank_code": {\n                                        "type": "string"\n                                      },\n                                      "branch_code": {\n                                        "type": "string"\n                                      }\n                                    }\n                                  },\n                                  "active": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "default": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "verified": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "description": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "email": {\n                                    "type": "string"\n                                  },\n                                  "failure_code": {\n                                    "type": "string",\n                                    "nullable": true,\n                                    "enum": [\n                                      "name_mismatch",\n                                      "account_not_found",\n                                      "bank_not_found"\n                                    ]\n                                  },\n                                  "name": {\n                                    "type": "string"\n                                  },\n                                  "tax_id": {\n                                    "type": "string",\n                                    "nullable": true\n                                  },\n                                  "type": {\n                                    "type": "string",\n                                    "enum": [\n                                      "individual",\n                                      "corporation"\n                                    ]\n                                  },\n                                  "created_at": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  },\n                                  "schedule": {\n                                    "oneOf": [\n                                      {\n                                        "type": "object",\n                                        "properties": {\n                                          "object": {\n                                            "pattern": "schedule",\n                                            "type": "string",\n                                            "default": "schedule"\n                                          },\n                                          "id": {\n                                            "pattern": "schd_[0-9a-z]+",\n                                            "type": "string"\n                                          },\n                                          "deleted": {\n                                            "type": "boolean",\n                                            "enum": [\n                                              true,\n                                              false\n                                            ]\n                                          },\n                                          "livemode": {\n                                            "type": "boolean",\n                                            "enum": [\n                                              true,\n                                              false\n                                            ]\n                                          },\n                                          "location": {\n                                            "type": "string"\n                                          },\n                                          "every": {\n                                            "type": "integer"\n                                          },\n                                          "occurrences": {\n                                            "$ref": "#/components/schemas/list"\n                                          },\n                                          "on": {\n                                            "$ref": "#/components/schemas/schedule_on"\n                                          },\n                                          "in_words": {\n                                            "type": "string"\n                                          },\n                                          "period": {\n                                            "type": "string",\n                                            "enum": [\n                                              "day",\n                                              "week",\n                                              "month"\n                                            ]\n                                          },\n                                          "status": {\n                                            "type": "string",\n                                            "enum": [\n                                              "running",\n                                              "active",\n                                              "expiring",\n                                              "expired",\n                                              "deleted",\n                                              "suspended"\n                                            ]\n                                          },\n                                          "active": {\n                                            "type": "boolean",\n                                            "enum": [\n                                              true,\n                                              false\n                                            ]\n                                          },\n                                          "state": {\n                                            "type": "string",\n                                            "enum": [\n                                              "Active",\n                                              "Pause"\n                                            ]\n                                          },\n                                          "charge": {\n                                            "$ref": "#/components/schemas/charge_schedule"\n                                          },\n                                          "transfer": {\n                                            "$ref": "#/components/schemas/transfer_schedule"\n                                          },\n                                          "next_occurrences_on": {\n                                            "type": "array",\n                                            "items": {\n                                              "type": "string",\n                                              "format": "date"\n                                            }\n                                          },\n                                          "ended_at": {\n                                            "type": "string",\n                                            "format": "date-time"\n                                          },\n                                          "start_on": {\n                                            "type": "string",\n                                            "format": "date"\n                                          },\n                                          "end_on": {\n                                            "type": "string",\n                                            "format": "date"\n                                          },\n                                          "created_at": {\n                                            "type": "string",\n                                            "format": "date-time"\n                                          },\n                                          "execute_time": {\n                                            "type": "string",\n                                            "nullable": true\n                                          },\n                                          "deleted_by": {\n                                            "type": "string",\n                                            "nullable": true\n                                          },\n                                          "merchant_name": {\n                                            "type": "string"\n                                          }\n                                        }\n                                      },\n                                      {\n                                        "type": "string"\n                                      }\n                                    ]\n                                  },\n                                  "metadata": {\n                                    "type": "object",\n                                    "default": {}\n                                  },\n                                  "verified_at": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  },\n                                  "activated_at": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  }\n                                }\n                              },\n                              {\n                                "type": "string"\n                              }\n                            ]\n                          },\n                          "created_at": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "is_realtime_payout": {\n                            "type": "boolean",\n                            "nullable": true,\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          }\n                        }\n                      },\n                      "next_occurrences_on": {\n                        "type": "array",\n                        "items": {\n                          "type": "string",\n                          "format": "date"\n                        }\n                      },\n                      "ended_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "start_on": {\n                        "type": "string",\n                        "format": "date"\n                      },\n                      "end_on": {\n                        "type": "string",\n                        "format": "date"\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "execute_time": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "deleted_by": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "merchant_name": {\n                        "type": "string"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "linked_account": {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "linked_account",\n                    "type": "string",\n                    "default": "linked_account"\n                  },\n                  "id": {\n                    "type": "string"\n                  },\n                  "livemode": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "registration_uri": {\n                    "type": "string",\n                    "format": "uri"\n                  },\n                  "return_uri": {\n                    "type": "string",\n                    "format": "uri"\n                  },\n                  "type": {\n                    "type": "string"\n                  },\n                  "status": {\n                    "type": "string",\n                    "enum": [\n                      "failed",\n                      "expired",\n                      "deleted",\n                      "pending",\n                      "successful"\n                    ]\n                  },\n                  "last_digits": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "metadata": {\n                    "type": "object",\n                    "default": {}\n                  },\n                  "failure_code": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "failure_message": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "registered_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "expires_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "created_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  }\n                }\n              },\n              "customer": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "customer",\n                        "type": "string",\n                        "default": "customer"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "cards": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "list",\n                            "type": "string",\n                            "default": "list"\n                          },\n                          "data": {\n                            "type": "array",\n                            "items": {}\n                          },\n                          "limit": {\n                            "type": "integer"\n                          },\n                          "offset": {\n                            "type": "integer"\n                          },\n                          "total": {\n                            "type": "integer"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "order": {\n                            "type": "string",\n                            "enum": [\n                              "chronological",\n                              "reverse_chronological"\n                            ]\n                          },\n                          "from": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "to": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "default_card": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "card",\n                                "type": "string",\n                                "default": "card"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "street1": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "street2": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "city": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "state": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "phone_number": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "postal_code": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "country": {\n                                "pattern": "^[a-z]{0,2}$",\n                                "type": "string"\n                              },\n                              "financing": {\n                                "type": "string"\n                              },\n                              "bank": {\n                                "type": "string"\n                              },\n                              "brand": {\n                                "type": "string"\n                              },\n                              "fingerprint": {\n                                "type": "string"\n                              },\n                              "first_digits": {\n                                "pattern": "^[0-9]{6}$",\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "last_digits": {\n                                "pattern": "^[0-9]{4}$",\n                                "type": "string"\n                              },\n                              "name": {\n                                "type": "string"\n                              },\n                              "expiration_month": {\n                                "type": "integer"\n                              },\n                              "expiration_year": {\n                                "type": "integer"\n                              },\n                              "security_code_check": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "tokenization_method": {\n                                "type": "string"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "linked_accounts": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "list",\n                            "type": "string",\n                            "default": "list"\n                          },\n                          "data": {\n                            "type": "array",\n                            "items": {}\n                          },\n                          "limit": {\n                            "type": "integer"\n                          },\n                          "offset": {\n                            "type": "integer"\n                          },\n                          "total": {\n                            "type": "integer"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "order": {\n                            "type": "string",\n                            "enum": [\n                              "chronological",\n                              "reverse_chronological"\n                            ]\n                          },\n                          "from": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "to": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "description": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "email": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "dispute": {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "dispute",\n                    "type": "string",\n                    "default": "dispute"\n                  },\n                  "id": {\n                    "type": "string"\n                  },\n                  "livemode": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "currency": {\n                    "type": "string",\n                    "format": "currency"\n                  },\n                  "amount": {\n                    "type": "integer"\n                  },\n                  "funding_amount": {\n                    "type": "integer"\n                  },\n                  "funding_currency": {\n                    "type": "string",\n                    "format": "currency"\n                  },\n                  "metadata": {\n                    "type": "object",\n                    "default": {}\n                  },\n                  "charge": {\n                    "oneOf": [\n                      {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "charge",\n                            "type": "string",\n                            "default": "charge"\n                          },\n                          "id": {\n                            "pattern": "chrg_[0-9a-z]+",\n                            "type": "string"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "amount": {\n                            "type": "integer"\n                          },\n                          "authorization_type": {\n                            "type": "string"\n                          },\n                          "authorized_amount": {\n                            "type": "integer"\n                          },\n                          "captured_amount": {\n                            "type": "integer"\n                          },\n                          "acquirer_reference_number": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "net": {\n                            "type": "integer"\n                          },\n                          "fee": {\n                            "type": "integer"\n                          },\n                          "fee_vat": {\n                            "type": "integer"\n                          },\n                          "interest": {\n                            "type": "integer"\n                          },\n                          "interest_vat": {\n                            "type": "integer"\n                          },\n                          "funding_amount": {\n                            "type": "integer"\n                          },\n                          "refunded_amount": {\n                            "type": "integer"\n                          },\n                          "transaction_fees": {\n                            "type": "object",\n                            "properties": {\n                              "fee_flat": {\n                                "type": "integer"\n                              },\n                              "fee_rate": {\n                                "type": "number",\n                                "format": "float"\n                              },\n                              "vat_rate": {\n                                "type": "number",\n                                "format": "float"\n                              }\n                            }\n                          },\n                          "platform_fee": {\n                            "type": "object",\n                            "properties": {\n                              "fixed": {\n                                "type": "integer"\n                              },\n                              "amount": {\n                                "type": "integer"\n                              },\n                              "percentage": {\n                                "type": "string"\n                              }\n                            }\n                          },\n                          "unmanaged_payment": {\n                            "type": "object",\n                            "properties": {\n                              "authorization_code": {\n                                "type": "string"\n                              },\n                              "backend_name": {\n                                "type": "string"\n                              },\n                              "iin": {\n                                "type": "string"\n                              },\n                              "merchant_reference": {\n                                "type": "string"\n                              }\n                            }\n                          },\n                          "three_ds_info": {\n                            "type": "object",\n                            "properties": {\n                              "three_ds_version": {\n                                "type": "string"\n                              },\n                              "authenticated_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "eci": {\n                                "type": "string"\n                              },\n                              "transaction_status": {\n                                "type": "string"\n                              },\n                              "acs_url": {\n                                "type": "string"\n                              }\n                            }\n                          },\n                          "currency": {\n                            "type": "string",\n                            "format": "currency"\n                          },\n                          "funding_currency": {\n                            "type": "string",\n                            "format": "currency"\n                          },\n                          "ip": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "refunds": {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "list",\n                                "type": "string",\n                                "default": "list"\n                              },\n                              "data": {\n                                "type": "array",\n                                "items": {}\n                              },\n                              "limit": {\n                                "type": "integer"\n                              },\n                              "offset": {\n                                "type": "integer"\n                              },\n                              "total": {\n                                "type": "integer"\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "order": {\n                                "type": "string",\n                                "enum": [\n                                  "chronological",\n                                  "reverse_chronological"\n                                ]\n                              },\n                              "from": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "to": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          "link": {\n                            "oneOf": [\n                              {\n                                "$ref": "#/components/schemas/link"\n                              },\n                              {\n                                "type": "string"\n                              }\n                            ]\n                          },\n                          "description": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "metadata": {\n                            "type": "object",\n                            "default": {}\n                          },\n                          "missing_3ds_fields": {\n                            "type": "object"\n                          },\n                          "card": {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "card",\n                                "type": "string",\n                                "default": "card"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "street1": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "street2": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "city": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "state": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "phone_number": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "postal_code": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "country": {\n                                "pattern": "^[a-z]{0,2}$",\n                                "type": "string"\n                              },\n                              "financing": {\n                                "type": "string"\n                              },\n                              "bank": {\n                                "type": "string"\n                              },\n                              "brand": {\n                                "type": "string"\n                              },\n                              "fingerprint": {\n                                "type": "string"\n                              },\n                              "first_digits": {\n                                "pattern": "^[0-9]{6}$",\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "last_digits": {\n                                "pattern": "^[0-9]{4}$",\n                                "type": "string"\n                              },\n                              "name": {\n                                "type": "string"\n                              },\n                              "expiration_month": {\n                                "type": "integer"\n                              },\n                              "expiration_year": {\n                                "type": "integer"\n                              },\n                              "security_code_check": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "tokenization_method": {\n                                "type": "string"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          "source": {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "source",\n                                "type": "string",\n                                "default": "source"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "amount": {\n                                "type": "integer"\n                              },\n                              "barcode": {\n                                "type": "string"\n                              },\n                              "bank": {\n                                "type": "string"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "currency": {\n                                "type": "string",\n                                "format": "currency"\n                              },\n                              "email": {\n                                "type": "string"\n                              },\n                              "flow": {\n                                "type": "string",\n                                "enum": [\n                                  "redirect",\n                                  "offline",\n                                  "app_redirect"\n                                ]\n                              },\n                              "installment_term": {\n                                "type": "integer"\n                              },\n                              "ip": {\n                                "type": "string"\n                              },\n                              "absorption_type": {\n                                "type": "string",\n                                "enum": [\n                                  "merchant",\n                                  "customer"\n                                ]\n                              },\n                              "name": {\n                                "type": "string"\n                              },\n                              "mobile_number": {\n                                "type": "string"\n                              },\n                              "phone_number": {\n                                "type": "string"\n                              },\n                              "platform_type": {\n                                "type": "string"\n                              },\n                              "scannable_code": {\n                                "$ref": "#/components/schemas/barcode"\n                              },\n                              "qr_settings": {\n                                "$ref": "#/components/schemas/sources_qr_settings"\n                              },\n                              "billing": {\n                                "$ref": "#/components/schemas/source_billing"\n                              },\n                              "shipping": {\n                                "$ref": "#/components/schemas/source_billing"\n                              },\n                              "items": {\n                                "type": "array",\n                                "items": {}\n                              },\n                              "references": {\n                                "$ref": "#/components/schemas/source_references"\n                              },\n                              "provider_references": {\n                                "$ref": "#/components/schemas/source_provider_references"\n                              },\n                              "store_id": {\n                                "type": "string"\n                              },\n                              "store_name": {\n                                "type": "string"\n                              },\n                              "terminal_id": {\n                                "type": "string"\n                              },\n                              "type": {\n                                "type": "string"\n                              },\n                              "zero_interest_installments": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "charge_status": {\n                                "type": "string",\n                                "enum": [\n                                  "failed",\n                                  "expired",\n                                  "pending",\n                                  "reversed",\n                                  "successful",\n                                  "unknown"\n                                ]\n                              },\n                              "receipt_amount": {\n                                "type": "integer"\n                              },\n                              "discounts": {\n                                "type": "array",\n                                "items": {},\n                                "default": []\n                              },\n                              "promotion_code": {\n                                "type": "string"\n                              },\n                              "supplier_id": {\n                                "type": "string"\n                              }\n                            }\n                          },\n                          "schedule": {\n                            "oneOf": [\n                              {\n                                "$ref": "#/components/schemas/schedule"\n                              },\n                              {\n                                "type": "string"\n                              }\n                            ]\n                          },\n                          "linked_account": {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "linked_account",\n                                "type": "string",\n                                "default": "linked_account"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "registration_uri": {\n                                "type": "string",\n                                "format": "uri"\n                              },\n                              "return_uri": {\n                                "type": "string",\n                                "format": "uri"\n                              },\n                              "type": {\n                                "type": "string"\n                              },\n                              "status": {\n                                "type": "string",\n                                "enum": [\n                                  "failed",\n                                  "expired",\n                                  "deleted",\n                                  "pending",\n                                  "successful"\n                                ]\n                              },\n                              "last_digits": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "metadata": {\n                                "type": "object",\n                                "default": {}\n                              },\n                              "failure_code": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "failure_message": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "registered_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "expires_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          "customer": {\n                            "oneOf": [\n                              {\n                                "$ref": "#/components/schemas/customer"\n                              },\n                              {\n                                "type": "string"\n                              }\n                            ]\n                          },\n                          "dispute": {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "dispute",\n                                "type": "string",\n                                "default": "dispute"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "currency": {\n                                "type": "string",\n                                "format": "currency"\n                              },\n                              "amount": {\n                                "type": "integer"\n                              },\n                              "funding_amount": {\n                                "type": "integer"\n                              },\n                              "funding_currency": {\n                                "type": "string",\n                                "format": "currency"\n                              },\n                              "metadata": {\n                                "type": "object",\n                                "default": {}\n                              },\n                              "charge": {\n                                "oneOf": [\n                                  {\n                                    "$ref": "#/components/schemas/charge"\n                                  },\n                                  {\n                                    "type": "string"\n                                  }\n                                ]\n                              },\n                              "documents": {\n                                "$ref": "#/components/schemas/list"\n                              },\n                              "transactions": {\n                                "type": "array",\n                                "items": {\n                                  "$ref": "#/components/schemas/transaction"\n                                }\n                              },\n                              "admin_message": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "message": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "reason_code": {\n                                "type": "string",\n                                "enum": [\n                                  "not_recorded",\n                                  "not_available",\n                                  "other",\n                                  "incorrect_transaction_amount",\n                                  "duplicate_processing",\n                                  "credit_not_processed",\n                                  "paid_by_other_means",\n                                  "unauthorized_charge",\n                                  "non_matching_account_number",\n                                  "incorrect_currency",\n                                  "late_presentment",\n                                  "cancelled_recurring_transaction",\n                                  "not_as_described_or_defective_merchandise",\n                                  "goods_or_services_not_provided",\n                                  "incorrect_transaction_code",\n                                  "invalid_data",\n                                  "expired_card",\n                                  "transaction_not_recognised"\n                                ]\n                              },\n                              "reason_message": {\n                                "type": "string"\n                              },\n                              "status": {\n                                "type": "string",\n                                "enum": [\n                                  "open",\n                                  "pending",\n                                  "won",\n                                  "lost"\n                                ]\n                              },\n                              "closed_at": {\n                                "type": "string",\n                                "format": "date-time",\n                                "nullable": true\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "merchant_name": {\n                                "type": "string"\n                              },\n                              "merchant_uid": {\n                                "type": "string"\n                              }\n                            }\n                          },\n                          "transaction": {\n                            "oneOf": [\n                              {\n                                "$ref": "#/components/schemas/transaction"\n                              },\n                              {\n                                "type": "string"\n                              }\n                            ]\n                          },\n                          "failure_code": {\n                            "type": "string",\n                            "nullable": true,\n                            "enum": [\n                              "failed_fraud_check",\n                              "failed_processing",\n                              "insufficient_balance",\n                              "insufficient_fund",\n                              "invalid_account_number",\n                              "invalid_security_code",\n                              "payment_cancelled",\n                              "payment_rejected",\n                              "timeout",\n                              "expired_card"\n                            ]\n                          },\n                          "failure_message": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "merchant_advice": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "merchant_advice_code": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "status": {\n                            "type": "string",\n                            "enum": [\n                              "failed",\n                              "expired",\n                              "pending",\n                              "reversed",\n                              "successful"\n                            ]\n                          },\n                          "authorize_uri": {\n                            "type": "string",\n                            "format": "uri",\n                            "nullable": true\n                          },\n                          "return_uri": {\n                            "type": "string",\n                            "format": "uri",\n                            "nullable": true\n                          },\n                          "created_at": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "paid_at": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "authorized_at": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "expires_at": {\n                            "type": "string",\n                            "format": "date-time",\n                            "nullable": true\n                          },\n                          "expired_at": {\n                            "type": "string",\n                            "format": "date-time",\n                            "nullable": true\n                          },\n                          "reversed_at": {\n                            "type": "string",\n                            "format": "date-time",\n                            "nullable": true\n                          },\n                          "multi_capture": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "zero_interest_installments": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "authorized": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "capturable": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "capture": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "disputable": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "livemode": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "refundable": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "partially_refundable": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "reversed": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "reversible": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "voided": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "paid": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "expired": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "can_perform_void": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "merchant_name": {\n                            "type": "string"\n                          },\n                          "merchant_uid": {\n                            "type": "string"\n                          },\n                          "approval_code": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "statement_descriptor": {\n                            "type": "string"\n                          }\n                        }\n                      },\n                      {\n                        "type": "string"\n                      }\n                    ]\n                  },\n                  "documents": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "list",\n                        "type": "string",\n                        "default": "list"\n                      },\n                      "data": {\n                        "type": "array",\n                        "items": {}\n                      },\n                      "limit": {\n                        "type": "integer"\n                      },\n                      "offset": {\n                        "type": "integer"\n                      },\n                      "total": {\n                        "type": "integer"\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "order": {\n                        "type": "string",\n                        "enum": [\n                          "chronological",\n                          "reverse_chronological"\n                        ]\n                      },\n                      "from": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "to": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  "transactions": {\n                    "type": "array",\n                    "items": {\n                      "type": "object",\n                      "properties": {\n                        "object": {\n                          "pattern": "transaction",\n                          "type": "string",\n                          "default": "transaction"\n                        },\n                        "id": {\n                          "pattern": "trxn_[0-9a-z]+",\n                          "type": "string"\n                        },\n                        "livemode": {\n                          "type": "boolean",\n                          "enum": [\n                            true,\n                            false\n                          ]\n                        },\n                        "currency": {\n                          "type": "string",\n                          "format": "currency"\n                        },\n                        "amount": {\n                          "type": "integer"\n                        },\n                        "location": {\n                          "type": "string"\n                        },\n                        "direction": {\n                          "type": "string",\n                          "enum": [\n                            "credit",\n                            "debit"\n                          ]\n                        },\n                        "key": {\n                          "type": "string"\n                        },\n                        "origin": {\n                          "type": "string"\n                        },\n                        "transferable_at": {\n                          "type": "string",\n                          "format": "date-time"\n                        },\n                        "created_at": {\n                          "type": "string",\n                          "format": "date-time"\n                        }\n                      }\n                    }\n                  },\n                  "admin_message": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "message": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "reason_code": {\n                    "type": "string",\n                    "enum": [\n                      "not_recorded",\n                      "not_available",\n                      "other",\n                      "incorrect_transaction_amount",\n                      "duplicate_processing",\n                      "credit_not_processed",\n                      "paid_by_other_means",\n                      "unauthorized_charge",\n                      "non_matching_account_number",\n                      "incorrect_currency",\n                      "late_presentment",\n                      "cancelled_recurring_transaction",\n                      "not_as_described_or_defective_merchandise",\n                      "goods_or_services_not_provided",\n                      "incorrect_transaction_code",\n                      "invalid_data",\n                      "expired_card",\n                      "transaction_not_recognised"\n                    ]\n                  },\n                  "reason_message": {\n                    "type": "string"\n                  },\n                  "status": {\n                    "type": "string",\n                    "enum": [\n                      "open",\n                      "pending",\n                      "won",\n                      "lost"\n                    ]\n                  },\n                  "closed_at": {\n                    "type": "string",\n                    "format": "date-time",\n                    "nullable": true\n                  },\n                  "created_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "merchant_name": {\n                    "type": "string"\n                  },\n                  "merchant_uid": {\n                    "type": "string"\n                  }\n                }\n              },\n              "transaction": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "transaction",\n                        "type": "string",\n                        "default": "transaction"\n                      },\n                      "id": {\n                        "pattern": "trxn_[0-9a-z]+",\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "currency": {\n                        "type": "string",\n                        "format": "currency"\n                      },\n                      "amount": {\n                        "type": "integer"\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "direction": {\n                        "type": "string",\n                        "enum": [\n                          "credit",\n                          "debit"\n                        ]\n                      },\n                      "key": {\n                        "type": "string"\n                      },\n                      "origin": {\n                        "type": "string"\n                      },\n                      "transferable_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "failure_code": {\n                "type": "string",\n                "nullable": true,\n                "enum": [\n                  "failed_fraud_check",\n                  "failed_processing",\n                  "insufficient_balance",\n                  "insufficient_fund",\n                  "invalid_account_number",\n                  "invalid_security_code",\n                  "payment_cancelled",\n                  "payment_rejected",\n                  "timeout",\n                  "expired_card"\n                ]\n              },\n              "failure_message": {\n                "type": "string",\n                "nullable": true\n              },\n              "merchant_advice": {\n                "type": "string",\n                "nullable": true\n              },\n              "merchant_advice_code": {\n                "type": "string",\n                "nullable": true\n              },\n              "status": {\n                "type": "string",\n                "enum": [\n                  "failed",\n                  "expired",\n                  "pending",\n                  "reversed",\n                  "successful"\n                ]\n              },\n              "authorize_uri": {\n                "type": "string",\n                "format": "uri",\n                "nullable": true\n              },\n              "return_uri": {\n                "type": "string",\n                "format": "uri",\n                "nullable": true\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "paid_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "authorized_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "expires_at": {\n                "type": "string",\n                "format": "date-time",\n                "nullable": true\n              },\n              "expired_at": {\n                "type": "string",\n                "format": "date-time",\n                "nullable": true\n              },\n              "reversed_at": {\n                "type": "string",\n                "format": "date-time",\n                "nullable": true\n              },\n              "multi_capture": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "zero_interest_installments": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "authorized": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "capturable": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "capture": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "disputable": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "refundable": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "partially_refundable": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "reversed": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "reversible": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "voided": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "paid": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "expired": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "can_perform_void": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "merchant_name": {\n                "type": "string"\n              },\n              "merchant_uid": {\n                "type": "string"\n              },\n              "approval_code": {\n                "type": "string",\n                "nullable": true\n              },\n              "statement_descriptor": {\n                "type": "string"\n              }\n            }\n          },\n          {\n            "type": "string"\n          }\n        ]\n      },\n      "documents": {\n        "type": "object",\n        "properties": {\n          "object": {\n            "pattern": "list",\n            "type": "string",\n            "default": "list"\n          },\n          "data": {\n            "type": "array",\n            "items": {}\n          },\n          "limit": {\n            "type": "integer"\n          },\n          "offset": {\n            "type": "integer"\n          },\n          "total": {\n            "type": "integer"\n          },\n          "location": {\n            "type": "string"\n          },\n          "order": {\n            "type": "string",\n            "enum": [\n              "chronological",\n              "reverse_chronological"\n            ]\n          },\n          "from": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "to": {\n            "type": "string",\n            "format": "date-time"\n          }\n        }\n      },\n      "transactions": {\n        "type": "array",\n        "items": {\n          "type": "object",\n          "properties": {\n            "object": {\n              "pattern": "transaction",\n              "type": "string",\n              "default": "transaction"\n            },\n            "id": {\n              "pattern": "trxn_[0-9a-z]+",\n              "type": "string"\n            },\n            "livemode": {\n              "type": "boolean",\n              "enum": [\n                true,\n                false\n              ]\n            },\n            "currency": {\n              "type": "string",\n              "format": "currency"\n            },\n            "amount": {\n              "type": "integer"\n            },\n            "location": {\n              "type": "string"\n            },\n            "direction": {\n              "type": "string",\n              "enum": [\n                "credit",\n                "debit"\n              ]\n            },\n            "key": {\n              "type": "string"\n            },\n            "origin": {\n              "type": "string"\n            },\n            "transferable_at": {\n              "type": "string",\n              "format": "date-time"\n            },\n            "created_at": {\n              "type": "string",\n              "format": "date-time"\n            }\n          }\n        }\n      },\n      "admin_message": {\n        "type": "string",\n        "nullable": true\n      },\n      "message": {\n        "type": "string",\n        "nullable": true\n      },\n      "reason_code": {\n        "type": "string",\n        "enum": [\n          "not_recorded",\n          "not_available",\n          "other",\n          "incorrect_transaction_amount",\n          "duplicate_processing",\n          "credit_not_processed",\n          "paid_by_other_means",\n          "unauthorized_charge",\n          "non_matching_account_number",\n          "incorrect_currency",\n          "late_presentment",\n          "cancelled_recurring_transaction",\n          "not_as_described_or_defective_merchandise",\n          "goods_or_services_not_provided",\n          "incorrect_transaction_code",\n          "invalid_data",\n          "expired_card",\n          "transaction_not_recognised"\n        ]\n      },\n      "reason_message": {\n        "type": "string"\n      },\n      "status": {\n        "type": "string",\n        "enum": [\n          "open",\n          "pending",\n          "won",\n          "lost"\n        ]\n      },\n      "closed_at": {\n        "type": "string",\n        "format": "date-time",\n        "nullable": true\n      },\n      "created_at": {\n        "type": "string",\n        "format": "date-time"\n      },\n      "merchant_name": {\n        "type": "string"\n      },\n      "merchant_uid": {\n        "type": "string"\n      }\n    }\n  },\n  "transaction": {\n    "oneOf": [\n      {\n        "type": "object",\n        "properties": {\n          "object": {\n            "pattern": "transaction",\n            "type": "string",\n            "default": "transaction"\n          },\n          "id": {\n            "pattern": "trxn_[0-9a-z]+",\n            "type": "string"\n          },\n          "livemode": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "currency": {\n            "type": "string",\n            "format": "currency"\n          },\n          "amount": {\n            "type": "integer"\n          },\n          "location": {\n            "type": "string"\n          },\n          "direction": {\n            "type": "string",\n            "enum": [\n              "credit",\n              "debit"\n            ]\n          },\n          "key": {\n            "type": "string"\n          },\n          "origin": {\n            "type": "string"\n          },\n          "transferable_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "created_at": {\n            "type": "string",\n            "format": "date-time"\n          }\n        }\n      },\n      {\n        "type": "string"\n      }\n    ]\n  },\n  "failure_code": {\n    "type": "string",\n    "nullable": true,\n    "enum": [\n      "failed_fraud_check",\n      "failed_processing",\n      "insufficient_balance",\n      "insufficient_fund",\n      "invalid_account_number",\n      "invalid_security_code",\n      "payment_cancelled",\n      "payment_rejected",\n      "timeout",\n      "expired_card"\n    ]\n  },\n  "failure_message": {\n    "type": "string",\n    "nullable": true\n  },\n  "merchant_advice": {\n    "type": "string",\n    "nullable": true\n  },\n  "merchant_advice_code": {\n    "type": "string",\n    "nullable": true\n  },\n  "status": {\n    "type": "string",\n    "enum": [\n      "failed",\n      "expired",\n      "pending",\n      "reversed",\n      "successful"\n    ]\n  },\n  "authorize_uri": {\n    "type": "string",\n    "format": "uri",\n    "nullable": true\n  },\n  "return_uri": {\n    "type": "string",\n    "format": "uri",\n    "nullable": true\n  },\n  "created_at": {\n    "type": "string",\n    "format": "date-time"\n  },\n  "paid_at": {\n    "type": "string",\n    "format": "date-time"\n  },\n  "authorized_at": {\n    "type": "string",\n    "format": "date-time"\n  },\n  "expires_at": {\n    "type": "string",\n    "format": "date-time",\n    "nullable": true\n  },\n  "expired_at": {\n    "type": "string",\n    "format": "date-time",\n    "nullable": true\n  },\n  "reversed_at": {\n    "type": "string",\n    "format": "date-time",\n    "nullable": true\n  },\n  "multi_capture": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "zero_interest_installments": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "authorized": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "capturable": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "capture": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "disputable": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "livemode": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "refundable": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "partially_refundable": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "reversed": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "reversible": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "voided": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "paid": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "expired": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "can_perform_void": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "merchant_name": {\n    "type": "string"\n  },\n  "merchant_uid": {\n    "type": "string"\n  },\n  "approval_code": {\n    "type": "string",\n    "nullable": true\n  },\n  "statement_descriptor": {\n    "type": "string"\n  }\n} \n'})})]})]})]})}function d(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}}}]);