"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6333],{28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>l});var r=i(96540);const a={},n=r.createContext(a);function s(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(n.Provider,{value:t},e.children)}},97115:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"api references/audits","title":"Audits","description":"Retrieve Audits Search","source":"@site/docs/api references/audits.md","sourceDirName":"api references","slug":"/api references/audits","permalink":"/ja/api references/audits","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Account","permalink":"/ja/api references/account"},"next":{"title":"Balance","permalink":"/ja/api references/balance"}}');var a=i(74848),n=i(28453);const s={},l="Audits",c={},d=[{value:"Parameters",id:"parameters",level:3},{value:"Responses",id:"responses",level:3},{value:"Status: 200",id:"status-200",level:3}];function o(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"audits",children:"Audits"})}),"\n",(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,a.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,a.jsx)("h3",{children:"Retrieve Audits Search"}),(0,a.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,a.jsxs)("div",{class:"code",style:{flex:2},children:[(0,a.jsxs)("div",{class:"code-container",children:[(0,a.jsx)("div",{class:"code-header",children:"Retrieve Audits Search"}),(0,a.jsxs)("div",{class:"code-dropdown",children:[(0,a.jsxs)("select",{onChange:e=>handleLanguageChange(e.target),children:[(0,a.jsx)("option",{value:"curl",children:"curl"}),(0,a.jsx)("option",{value:"java",children:"java"}),(0,a.jsx)("option",{value:"android",children:"android"}),(0,a.jsx)("option",{value:"objc",children:"objc"}),(0,a.jsx)("option",{value:"javascript",children:"javascript"}),(0,a.jsx)("option",{value:"csharp",children:"csharp"}),(0,a.jsx)("option",{value:"php",children:"php"}),(0,a.jsx)("option",{value:"perl",children:"perl"}),(0,a.jsx)("option",{value:"python",children:"python"})]}),(0,a.jsx)("button",{className:"copy-btn",onClick:e=>copyActiveCode(e.currentTarget),title:"Copy to clipboard",children:(0,a.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,a.jsx)("div",{class:"code-block curl active",id:"Retrieve Audits Search-code-curl",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/audits/search?scope=&query=&filters[created]=&filters[actor_email][]=&filters[actor_type]=&filters[auditable_type]=&filters[auditable_uid]=&filters[verb]="\n'})})}),(0,a.jsx)("div",{class:"code-block java",id:"Retrieve Audits Search-code-java",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.AuditsApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class AuditsApiExample {\n\n    public static void main(String[] args) {\n        \n        AuditsApi apiInstance = new AuditsApi();\n        String scope = scope_example; // String | \n        String query = query_example; // String | \n        Date filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n        array[String] filters[actorEmail][] = ; // array[String] | \n        String filters[actorType] = filters[actorType]_example; // String | \n        String filters[auditableType] = filters[auditableType]_example; // String | \n        String filters[auditableUid] = filters[auditableUid]_example; // String | \n        String filters[verb] = filters[verb]_example; // String | \n        try {\n            audit result = apiInstance.auditsSearchGet(scope, query, filters[created], filters[actorEmail][], filters[actorType], filters[auditableType], filters[auditableUid], filters[verb]);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling AuditsApi#auditsSearchGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block android",id:"Retrieve Audits Search-code-android",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:'import io.swagger.client.api.AuditsApi;\n\npublic class AuditsApiExample {\n\n    public static void main(String[] args) {\n        AuditsApi apiInstance = new AuditsApi();\n        String scope = scope_example; // String | \n        String query = query_example; // String | \n        Date filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n        array[String] filters[actorEmail][] = ; // array[String] | \n        String filters[actorType] = filters[actorType]_example; // String | \n        String filters[auditableType] = filters[auditableType]_example; // String | \n        String filters[auditableUid] = filters[auditableUid]_example; // String | \n        String filters[verb] = filters[verb]_example; // String | \n        try {\n            audit result = apiInstance.auditsSearchGet(scope, query, filters[created], filters[actorEmail][], filters[actorType], filters[auditableType], filters[auditableUid], filters[verb]);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling AuditsApi#auditsSearchGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block objc",id:"Retrieve Audits Search-code-objc",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:'String *scope = scope_example; //  (optional) (default to audit)\nString *query = query_example; //  (optional)\nDate *filters[created] = 2013-10-20T19:20:30+01:00; //  (optional)\narray[String] *filters[actorEmail][] = ; //  (optional)\nString *filters[actorType] = filters[actorType]_example; //  (optional)\nString *filters[auditableType] = filters[auditableType]_example; //  (optional)\nString *filters[auditableUid] = filters[auditableUid]_example; //  (optional)\nString *filters[verb] = filters[verb]_example; //  (optional)\n\nAuditsApi *apiInstance = [[AuditsApi alloc] init];\n\n[apiInstance auditsSearchGetWith:scope\n    query:query\n    filters[created]:filters[created]\n    filters[actorEmail][]:filters[actorEmail][]\n    filters[actorType]:filters[actorType]\n    filters[auditableType]:filters[auditableType]\n    filters[auditableUid]:filters[auditableUid]\n    filters[verb]:filters[verb]\n              completionHandler: ^(audit output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,a.jsx)("div",{class:"code-block javascript",id:"Retrieve Audits Search-code-javascript",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.AuditsApi()\nvar opts = { \n  'scope': scope_example, // {{String}} \n  'query': query_example, // {{String}} \n  'filters[created]': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'filters[actorEmail][]': , // {{array[String]}} \n  'filters[actorType]': filters[actorType]_example, // {{String}} \n  'filters[auditableType]': filters[auditableType]_example, // {{String}} \n  'filters[auditableUid]': filters[auditableUid]_example, // {{String}} \n  'filters[verb]': filters[verb]_example // {{String}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.auditsSearchGet(opts, callback);\n"})})}),(0,a.jsx)("div",{class:"code-block csharp",id:"Retrieve Audits Search-code-csharp",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class auditsSearchGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new AuditsApi();\n            var scope = scope_example;  // String |  (optional)  (default to audit)\n            var query = query_example;  // String |  (optional) \n            var filters[created] = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n            var filters[actorEmail][] = new array[String](); // array[String] |  (optional) \n            var filters[actorType] = filters[actorType]_example;  // String |  (optional) \n            var filters[auditableType] = filters[auditableType]_example;  // String |  (optional) \n            var filters[auditableUid] = filters[auditableUid]_example;  // String |  (optional) \n            var filters[verb] = filters[verb]_example;  // String |  (optional) \n\n            try\n            {\n                audit result = apiInstance.auditsSearchGet(scope, query, filters[created], filters[actorEmail][], filters[actorType], filters[auditableType], filters[auditableUid], filters[verb]);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling AuditsApi.auditsSearchGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block php",id:"Retrieve Audits Search-code-php",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiAuditsApi();\n$scope = scope_example; // String | \n$query = query_example; // String | \n$filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n$filters[actorEmail][] = ; // array[String] | \n$filters[actorType] = filters[actorType]_example; // String | \n$filters[auditableType] = filters[auditableType]_example; // String | \n$filters[auditableUid] = filters[auditableUid]_example; // String | \n$filters[verb] = filters[verb]_example; // String | \n\ntry {\n    $result = $api_instance->auditsSearchGet($scope, $query, $filters[created], $filters[actorEmail][], $filters[actorType], $filters[auditableType], $filters[auditableUid], $filters[verb]);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AuditsApi->auditsSearchGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,a.jsx)("div",{class:"code-block perl",id:"Retrieve Audits Search-code-perl",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::AuditsApi;\n\nmy $api_instance = WWW::SwaggerClient::AuditsApi->new();\nmy $scope = scope_example; # String | \nmy $query = query_example; # String | \nmy $filters[created] = 2013-10-20T19:20:30+01:00; # Date | \nmy $filters[actorEmail][] = []; # array[String] | \nmy $filters[actorType] = filters[actorType]_example; # String | \nmy $filters[auditableType] = filters[auditableType]_example; # String | \nmy $filters[auditableUid] = filters[auditableUid]_example; # String | \nmy $filters[verb] = filters[verb]_example; # String | \n\neval { \n    my $result = $api_instance->auditsSearchGet(scope => $scope, query => $query, filters[created] => $filters[created], filters[actorEmail][] => $filters[actorEmail][], filters[actorType] => $filters[actorType], filters[auditableType] => $filters[auditableType], filters[auditableUid] => $filters[auditableUid], filters[verb] => $filters[verb]);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling AuditsApi->auditsSearchGet: $@\\n";\n}\n'})})}),(0,a.jsx)("div",{class:"code-block python",id:"Retrieve Audits Search-code-python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.AuditsApi()\nscope = scope_example # String |  (optional) (default to audit)\nquery = query_example # String |  (optional)\nfilters[created] = 2013-10-20T19:20:30+01:00 # Date |  (optional)\nfilters[actorEmail][] =  # array[String] |  (optional)\nfilters[actorType] = filters[actorType]_example # String |  (optional)\nfilters[auditableType] = filters[auditableType]_example # String |  (optional)\nfilters[auditableUid] = filters[auditableUid]_example # String |  (optional)\nfilters[verb] = filters[verb]_example # String |  (optional)\n\ntry: \n    api_response = api_instance.audits_search_get(scope=scope, query=query, filters[created]=filters[created], filters[actorEmail][]=filters[actorEmail][], filters[actorType]=filters[actorType], filters[auditableType]=filters[auditableType], filters[auditableUid]=filters[auditableUid], filters[verb]=filters[verb])\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling AuditsApi->auditsSearchGet: %s\\n" % e)\n'})})})]}),(0,a.jsx)(t.h3,{id:"parameters",children:"Parameters"}),(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Name"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"scope"}),(0,a.jsx)(t.td,{children:"String"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"query"}),(0,a.jsx)(t.td,{children:"String"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"filters[created]"}),(0,a.jsx)(t.td,{children:"Date (date-time)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"filters[actor_email][]"}),(0,a.jsx)(t.td,{children:"array[String]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"filters[actor_type]"}),(0,a.jsx)(t.td,{children:"String"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"filters[auditable_type]"}),(0,a.jsx)(t.td,{children:"String"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"filters[auditable_uid]"}),(0,a.jsx)(t.td,{children:"String"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"filters[verb]"}),(0,a.jsx)(t.td,{children:"String"})]})]})]})]})]}),(0,a.jsxs)("div",{children:[(0,a.jsx)(t.h3,{id:"responses",children:"Responses"}),(0,a.jsx)(t.h3,{id:"status-200",children:"Status: 200"}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:' {\n  "object": {\n    "pattern": "audit",\n    "type": "string",\n    "default": "audit"\n  },\n  "id": {\n    "type": "string"\n  },\n  "actor_email": {\n    "type": "string"\n  },\n  "auditable_type": {\n    "type": "string"\n  },\n  "auditable_uid": {\n    "type": "string"\n  },\n  "description": {\n    "type": "string"\n  },\n  "created_at": {\n    "type": "string",\n    "format": "date-time"\n  }\n} \n'})})]})]})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}}}]);