"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1405],{28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>o});var r=t(96540);const i={},a=r.createContext(i);function s(n){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),r.createElement(a.Provider,{value:e},n.children)}},69230:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"api references/refund","title":"Refund","description":"Retrieve Charges ID Refunds","source":"@site/docs/api references/refund.md","sourceDirName":"api references","slug":"/api references/refund","permalink":"/th/api references/refund","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Recipients","permalink":"/th/api references/recipients"},"next":{"title":"Routinggrouprules","permalink":"/th/api references/routinggrouprules"}}');var i=t(74848),a=t(28453);const s={},o="Refund",l={},d=[{value:"Parameters",id:"parameters",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Parameters",id:"parameters-5",level:3},{value:"Parameters",id:"parameters-6",level:3},{value:"Responses",id:"responses",level:3},{value:"Status: 200",id:"status-200",level:3}];function c(n){const e={code:"code",h1:"h1",h3:"h3",header:"header",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"refund",children:"Refund"})}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Retrieve Charges ID Refunds"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Retrieve Charges ID Refunds"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Retrieve Charges ID Refunds-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/charges/{id}/refunds?from=&to=&offset=&limit=&order="\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Retrieve Charges ID Refunds-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.RefundApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class RefundApiExample {\n\n    public static void main(String[] args) {\n        \n        RefundApi apiInstance = new RefundApi();\n        String id = id_example; // String | \n        Date from = 2013-10-20T19:20:30+01:00; // Date | \n        Date to = 2013-10-20T19:20:30+01:00; // Date | \n        Integer offset = 56; // Integer | \n        Integer limit = 56; // Integer | \n        String order = order_example; // String | \n        try {\n            list result = apiInstance.chargesIdRefundsGet(id, from, to, offset, limit, order);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling RefundApi#chargesIdRefundsGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Retrieve Charges ID Refunds-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.RefundApi;\n\npublic class RefundApiExample {\n\n    public static void main(String[] args) {\n        RefundApi apiInstance = new RefundApi();\n        String id = id_example; // String | \n        Date from = 2013-10-20T19:20:30+01:00; // Date | \n        Date to = 2013-10-20T19:20:30+01:00; // Date | \n        Integer offset = 56; // Integer | \n        Integer limit = 56; // Integer | \n        String order = order_example; // String | \n        try {\n            list result = apiInstance.chargesIdRefundsGet(id, from, to, offset, limit, order);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling RefundApi#chargesIdRefundsGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Retrieve Charges ID Refunds-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \nDate *from = 2013-10-20T19:20:30+01:00; //  (optional) (default to 1970-01-01T00:00Z)\nDate *to = 2013-10-20T19:20:30+01:00; //  (optional)\nInteger *offset = 56; //  (optional) (default to 0)\nInteger *limit = 56; //  (optional) (default to 20)\nString *order = order_example; //  (optional) (default to chronological)\n\nRefundApi *apiInstance = [[RefundApi alloc] init];\n\n[apiInstance chargesIdRefundsGetWith:id\n    from:from\n    to:to\n    offset:offset\n    limit:limit\n    order:order\n              completionHandler: ^(list output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Retrieve Charges ID Refunds-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.RefundApi()\nvar id = id_example; // {{String}} \nvar opts = { \n  'from': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'to': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'offset': 56, // {{Integer}} \n  'limit': 56, // {{Integer}} \n  'order': order_example // {{String}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesIdRefundsGet(id, opts, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Retrieve Charges ID Refunds-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesIdRefundsGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new RefundApi();\n            var id = id_example;  // String | \n            var from = 2013-10-20T19:20:30+01:00;  // Date |  (optional)  (default to 1970-01-01T00:00Z)\n            var to = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n            var offset = 56;  // Integer |  (optional)  (default to 0)\n            var limit = 56;  // Integer |  (optional)  (default to 20)\n            var order = order_example;  // String |  (optional)  (default to chronological)\n\n            try\n            {\n                list result = apiInstance.chargesIdRefundsGet(id, from, to, offset, limit, order);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling RefundApi.chargesIdRefundsGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Retrieve Charges ID Refunds-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiRefundApi();\n$id = id_example; // String | \n$from = 2013-10-20T19:20:30+01:00; // Date | \n$to = 2013-10-20T19:20:30+01:00; // Date | \n$offset = 56; // Integer | \n$limit = 56; // Integer | \n$order = order_example; // String | \n\ntry {\n    $result = $api_instance->chargesIdRefundsGet($id, $from, $to, $offset, $limit, $order);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RefundApi->chargesIdRefundsGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Retrieve Charges ID Refunds-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::RefundApi;\n\nmy $api_instance = WWW::SwaggerClient::RefundApi->new();\nmy $id = id_example; # String | \nmy $from = 2013-10-20T19:20:30+01:00; # Date | \nmy $to = 2013-10-20T19:20:30+01:00; # Date | \nmy $offset = 56; # Integer | \nmy $limit = 56; # Integer | \nmy $order = order_example; # String | \n\neval { \n    my $result = $api_instance->chargesIdRefundsGet(id => $id, from => $from, to => $to, offset => $offset, limit => $limit, order => $order);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling RefundApi->chargesIdRefundsGet: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Retrieve Charges ID Refunds-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.RefundApi()\nid = id_example # String | \nfrom = 2013-10-20T19:20:30+01:00 # Date |  (optional) (default to 1970-01-01T00:00Z)\nto = 2013-10-20T19:20:30+01:00 # Date |  (optional)\noffset = 56 # Integer |  (optional) (default to 0)\nlimit = 56 # Integer |  (optional) (default to 20)\norder = order_example # String |  (optional) (default to chronological)\n\ntry: \n    api_response = api_instance.charges_id_refunds_get(id, from=from, to=to, offset=offset, limit=limit, order=order)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling RefundApi->chargesIdRefundsGet: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})})]}),(0,i.jsx)(e.h3,{id:"parameters-1",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"from"}),(0,i.jsx)(e.td,{children:"Date (date-time)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"to"}),(0,i.jsx)(e.td,{children:"Date (date-time)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"offset"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"limit"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"order"}),(0,i.jsx)(e.td,{children:"String"})]})]})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Create Charges ID Refunds"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Create Charges ID Refunds"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Create Charges ID Refunds-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X POST\\\n-H "Accept: application/json"\\\n-H "Content-Type: application/x-www-form-urlencoded"\\\n"https://api.omise.co/charges/{id}/refunds"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Create Charges ID Refunds-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.RefundApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class RefundApiExample {\n\n    public static void main(String[] args) {\n        \n        RefundApi apiInstance = new RefundApi();\n        String id = id_example; // String | \n        Boolean void = true; // Boolean | \n        Integer amount = 56; // Integer | \n        Object metadata = ; // Object | \n        try {\n            refund result = apiInstance.chargesIdRefundsPost(id, void, amount, metadata);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling RefundApi#chargesIdRefundsPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Create Charges ID Refunds-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.RefundApi;\n\npublic class RefundApiExample {\n\n    public static void main(String[] args) {\n        RefundApi apiInstance = new RefundApi();\n        String id = id_example; // String | \n        Boolean void = true; // Boolean | \n        Integer amount = 56; // Integer | \n        Object metadata = ; // Object | \n        try {\n            refund result = apiInstance.chargesIdRefundsPost(id, void, amount, metadata);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling RefundApi#chargesIdRefundsPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Create Charges ID Refunds-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \nBoolean *void = true; //  (optional)\nInteger *amount = 56; //  (optional)\nObject *metadata = ; //  (optional)\n\nRefundApi *apiInstance = [[RefundApi alloc] init];\n\n[apiInstance chargesIdRefundsPostWith:id\n    void:void\n    amount:amount\n    metadata:metadata\n              completionHandler: ^(refund output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Create Charges ID Refunds-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.RefundApi()\nvar id = id_example; // {{String}} \nvar opts = { \n  'void': true // {{Boolean}} \n  'amount': 56 // {{Integer}} \n  'metadata':  // {{Object}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesIdRefundsPost(id, opts, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Create Charges ID Refunds-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesIdRefundsPostExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new RefundApi();\n            var id = id_example;  // String | \n            var void = true;  // Boolean |  (optional) \n            var amount = 56;  // Integer |  (optional) \n            var metadata = new Object(); // Object |  (optional) \n\n            try\n            {\n                refund result = apiInstance.chargesIdRefundsPost(id, void, amount, metadata);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling RefundApi.chargesIdRefundsPost: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Create Charges ID Refunds-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiRefundApi();\n$id = id_example; // String | \n$void = true; // Boolean | \n$amount = 56; // Integer | \n$metadata = ; // Object | \n\ntry {\n    $result = $api_instance->chargesIdRefundsPost($id, $void, $amount, $metadata);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RefundApi->chargesIdRefundsPost: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Create Charges ID Refunds-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::RefundApi;\n\nmy $api_instance = WWW::SwaggerClient::RefundApi->new();\nmy $id = id_example; # String | \nmy $void = true; # Boolean | \nmy $amount = 56; # Integer | \nmy $metadata = ; # Object | \n\neval { \n    my $result = $api_instance->chargesIdRefundsPost(id => $id, void => $void, amount => $amount, metadata => $metadata);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling RefundApi->chargesIdRefundsPost: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Create Charges ID Refunds-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.RefundApi()\nid = id_example # String | \nvoid = true # Boolean |  (optional)\namount = 56 # Integer |  (optional)\nmetadata =  # Object |  (optional)\n\ntry: \n    api_response = api_instance.charges_id_refunds_post(id, void=void, amount=amount, metadata=metadata)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling RefundApi->chargesIdRefundsPost: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-2",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})})]}),(0,i.jsx)(e.h3,{id:"parameters-3",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"void"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"amount"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"metadata"}),(0,i.jsx)(e.td,{children:"Object"})]})]})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Retrieve Charges ID Refunds Refund ID"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Retrieve Charges ID Refunds Refund ID"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Retrieve Charges ID Refunds Refund ID-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/charges/{id}/refunds/{refund_id}"\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Retrieve Charges ID Refunds Refund ID-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.RefundApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class RefundApiExample {\n\n    public static void main(String[] args) {\n        \n        RefundApi apiInstance = new RefundApi();\n        String id = id_example; // String | \n        String refundId = refundId_example; // String | \n        try {\n            refund result = apiInstance.chargesIdRefundsRefundIdGet(id, refundId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling RefundApi#chargesIdRefundsRefundIdGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Retrieve Charges ID Refunds Refund ID-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.RefundApi;\n\npublic class RefundApiExample {\n\n    public static void main(String[] args) {\n        RefundApi apiInstance = new RefundApi();\n        String id = id_example; // String | \n        String refundId = refundId_example; // String | \n        try {\n            refund result = apiInstance.chargesIdRefundsRefundIdGet(id, refundId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling RefundApi#chargesIdRefundsRefundIdGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Retrieve Charges ID Refunds Refund ID-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \nString *refundId = refundId_example; // \n\nRefundApi *apiInstance = [[RefundApi alloc] init];\n\n[apiInstance chargesIdRefundsRefundIdGetWith:id\n    refundId:refundId\n              completionHandler: ^(refund output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Retrieve Charges ID Refunds Refund ID-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.RefundApi()\nvar id = id_example; // {{String}} \nvar refundId = refundId_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.chargesIdRefundsRefundIdGet(id, refundId, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Retrieve Charges ID Refunds Refund ID-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class chargesIdRefundsRefundIdGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new RefundApi();\n            var id = id_example;  // String | \n            var refundId = refundId_example;  // String | \n\n            try\n            {\n                refund result = apiInstance.chargesIdRefundsRefundIdGet(id, refundId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling RefundApi.chargesIdRefundsRefundIdGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Retrieve Charges ID Refunds Refund ID-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiRefundApi();\n$id = id_example; // String | \n$refundId = refundId_example; // String | \n\ntry {\n    $result = $api_instance->chargesIdRefundsRefundIdGet($id, $refundId);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RefundApi->chargesIdRefundsRefundIdGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Retrieve Charges ID Refunds Refund ID-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::RefundApi;\n\nmy $api_instance = WWW::SwaggerClient::RefundApi->new();\nmy $id = id_example; # String | \nmy $refundId = refundId_example; # String | \n\neval { \n    my $result = $api_instance->chargesIdRefundsRefundIdGet(id => $id, refundId => $refundId);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling RefundApi->chargesIdRefundsRefundIdGet: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Retrieve Charges ID Refunds Refund ID-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.RefundApi()\nid = id_example # String | \nrefundId = refundId_example # String | \n\ntry: \n    api_response = api_instance.charges_id_refunds_refund_id_get(id, refundId)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling RefundApi->chargesIdRefundsRefundIdGet: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-4",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"id*"}),(0,i.jsx)(e.td,{children:"String Required"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"refund_id*"}),(0,i.jsx)(e.td,{children:"String Required"})]})]})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Retrieve Refunds"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Retrieve Refunds"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Retrieve Refunds-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/refunds?from=&to=&offset=&limit=&order="\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Retrieve Refunds-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.RefundApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class RefundApiExample {\n\n    public static void main(String[] args) {\n        \n        RefundApi apiInstance = new RefundApi();\n        Date from = 2013-10-20T19:20:30+01:00; // Date | \n        Date to = 2013-10-20T19:20:30+01:00; // Date | \n        Integer offset = 56; // Integer | \n        Integer limit = 56; // Integer | \n        String order = order_example; // String | \n        try {\n            list result = apiInstance.refundsGet(from, to, offset, limit, order);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling RefundApi#refundsGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Retrieve Refunds-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.RefundApi;\n\npublic class RefundApiExample {\n\n    public static void main(String[] args) {\n        RefundApi apiInstance = new RefundApi();\n        Date from = 2013-10-20T19:20:30+01:00; // Date | \n        Date to = 2013-10-20T19:20:30+01:00; // Date | \n        Integer offset = 56; // Integer | \n        Integer limit = 56; // Integer | \n        String order = order_example; // String | \n        try {\n            list result = apiInstance.refundsGet(from, to, offset, limit, order);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling RefundApi#refundsGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Retrieve Refunds-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'Date *from = 2013-10-20T19:20:30+01:00; //  (optional) (default to 1970-01-01T00:00Z)\nDate *to = 2013-10-20T19:20:30+01:00; //  (optional)\nInteger *offset = 56; //  (optional) (default to 0)\nInteger *limit = 56; //  (optional) (default to 20)\nString *order = order_example; //  (optional) (default to chronological)\n\nRefundApi *apiInstance = [[RefundApi alloc] init];\n\n[apiInstance refundsGetWith:from\n    to:to\n    offset:offset\n    limit:limit\n    order:order\n              completionHandler: ^(list output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Retrieve Refunds-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.RefundApi()\nvar opts = { \n  'from': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'to': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'offset': 56, // {{Integer}} \n  'limit': 56, // {{Integer}} \n  'order': order_example // {{String}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.refundsGet(opts, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Retrieve Refunds-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class refundsGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new RefundApi();\n            var from = 2013-10-20T19:20:30+01:00;  // Date |  (optional)  (default to 1970-01-01T00:00Z)\n            var to = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n            var offset = 56;  // Integer |  (optional)  (default to 0)\n            var limit = 56;  // Integer |  (optional)  (default to 20)\n            var order = order_example;  // String |  (optional)  (default to chronological)\n\n            try\n            {\n                list result = apiInstance.refundsGet(from, to, offset, limit, order);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling RefundApi.refundsGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Retrieve Refunds-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiRefundApi();\n$from = 2013-10-20T19:20:30+01:00; // Date | \n$to = 2013-10-20T19:20:30+01:00; // Date | \n$offset = 56; // Integer | \n$limit = 56; // Integer | \n$order = order_example; // String | \n\ntry {\n    $result = $api_instance->refundsGet($from, $to, $offset, $limit, $order);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RefundApi->refundsGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Retrieve Refunds-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::RefundApi;\n\nmy $api_instance = WWW::SwaggerClient::RefundApi->new();\nmy $from = 2013-10-20T19:20:30+01:00; # Date | \nmy $to = 2013-10-20T19:20:30+01:00; # Date | \nmy $offset = 56; # Integer | \nmy $limit = 56; # Integer | \nmy $order = order_example; # String | \n\neval { \n    my $result = $api_instance->refundsGet(from => $from, to => $to, offset => $offset, limit => $limit, order => $order);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling RefundApi->refundsGet: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Retrieve Refunds-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.RefundApi()\nfrom = 2013-10-20T19:20:30+01:00 # Date |  (optional) (default to 1970-01-01T00:00Z)\nto = 2013-10-20T19:20:30+01:00 # Date |  (optional)\noffset = 56 # Integer |  (optional) (default to 0)\nlimit = 56 # Integer |  (optional) (default to 20)\norder = order_example # String |  (optional) (default to chronological)\n\ntry: \n    api_response = api_instance.refunds_get(from=from, to=to, offset=offset, limit=limit, order=order)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling RefundApi->refundsGet: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-5",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"from"}),(0,i.jsx)(e.td,{children:"Date (date-time)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"to"}),(0,i.jsx)(e.td,{children:"Date (date-time)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"offset"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"limit"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"order"}),(0,i.jsx)(e.td,{children:"String"})]})]})]})]})]}),(0,i.jsx)("div",{})]}),"\n",(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,i.jsx)("h3",{children:"Retrieve Refunds Search"}),(0,i.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,i.jsxs)("div",{class:"code",style:{flex:2},children:[(0,i.jsxs)("div",{class:"code-container",children:[(0,i.jsx)("div",{class:"code-header",children:"Retrieve Refunds Search"}),(0,i.jsxs)("div",{class:"code-dropdown",children:[(0,i.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,i.jsx)("option",{value:"curl",children:"curl"}),(0,i.jsx)("option",{value:"java",children:"java"}),(0,i.jsx)("option",{value:"android",children:"android"}),(0,i.jsx)("option",{value:"objc",children:"objc"}),(0,i.jsx)("option",{value:"javascript",children:"javascript"}),(0,i.jsx)("option",{value:"csharp",children:"csharp"}),(0,i.jsx)("option",{value:"php",children:"php"}),(0,i.jsx)("option",{value:"perl",children:"perl"}),(0,i.jsx)("option",{value:"python",children:"python"})]}),(0,i.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,i.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,i.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,i.jsx)("div",{class:"code-block curl active",id:"Retrieve Refunds Search-code-curl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/refunds/search?scope=&query=&filters[amount]=&filters[card_first_digits]=&filters[card_last_digits]=&filters[charge_id]=&filters[created]=&filters[status]=&filters[voided]=&filters[acquirer_reference_number]="\n'})})}),(0,i.jsx)("div",{class:"code-block java",id:"Retrieve Refunds Search-code-java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.RefundApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class RefundApiExample {\n\n    public static void main(String[] args) {\n        \n        RefundApi apiInstance = new RefundApi();\n        String scope = scope_example; // String | \n        String query = query_example; // String | \n        Integer filters[amount] = 56; // Integer | \n        String filters[cardFirstDigits] = filters[cardFirstDigits]_example; // String | \n        String filters[cardLastDigits] = filters[cardLastDigits]_example; // String | \n        String filters[chargeId] = filters[chargeId]_example; // String | \n        Date filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n        String filters[status] = filters[status]_example; // String | \n        Boolean filters[voided] = true; // Boolean | \n        String filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example; // String | \n        try {\n            refund result = apiInstance.refundsSearchGet(scope, query, filters[amount], filters[cardFirstDigits], filters[cardLastDigits], filters[chargeId], filters[created], filters[status], filters[voided], filters[acquirerReferenceNumber]);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling RefundApi#refundsSearchGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block android",id:"Retrieve Refunds Search-code-android",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.RefundApi;\n\npublic class RefundApiExample {\n\n    public static void main(String[] args) {\n        RefundApi apiInstance = new RefundApi();\n        String scope = scope_example; // String | \n        String query = query_example; // String | \n        Integer filters[amount] = 56; // Integer | \n        String filters[cardFirstDigits] = filters[cardFirstDigits]_example; // String | \n        String filters[cardLastDigits] = filters[cardLastDigits]_example; // String | \n        String filters[chargeId] = filters[chargeId]_example; // String | \n        Date filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n        String filters[status] = filters[status]_example; // String | \n        Boolean filters[voided] = true; // Boolean | \n        String filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example; // String | \n        try {\n            refund result = apiInstance.refundsSearchGet(scope, query, filters[amount], filters[cardFirstDigits], filters[cardLastDigits], filters[chargeId], filters[created], filters[status], filters[voided], filters[acquirerReferenceNumber]);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling RefundApi#refundsSearchGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block objc",id:"Retrieve Refunds Search-code-objc",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'String *scope = scope_example; //  (optional) (default to refund)\nString *query = query_example; //  (optional)\nInteger *filters[amount] = 56; //  (optional)\nString *filters[cardFirstDigits] = filters[cardFirstDigits]_example; //  (optional)\nString *filters[cardLastDigits] = filters[cardLastDigits]_example; //  (optional)\nString *filters[chargeId] = filters[chargeId]_example; //  (optional)\nDate *filters[created] = 2013-10-20T19:20:30+01:00; //  (optional)\nString *filters[status] = filters[status]_example; //  (optional)\nBoolean *filters[voided] = true; //  (optional)\nString *filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example; //  (optional)\n\nRefundApi *apiInstance = [[RefundApi alloc] init];\n\n[apiInstance refundsSearchGetWith:scope\n    query:query\n    filters[amount]:filters[amount]\n    filters[cardFirstDigits]:filters[cardFirstDigits]\n    filters[cardLastDigits]:filters[cardLastDigits]\n    filters[chargeId]:filters[chargeId]\n    filters[created]:filters[created]\n    filters[status]:filters[status]\n    filters[voided]:filters[voided]\n    filters[acquirerReferenceNumber]:filters[acquirerReferenceNumber]\n              completionHandler: ^(refund output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,i.jsx)("div",{class:"code-block javascript",id:"Retrieve Refunds Search-code-javascript",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.RefundApi()\nvar opts = { \n  'scope': scope_example, // {{String}} \n  'query': query_example, // {{String}} \n  'filters[amount]': 56, // {{Integer}} \n  'filters[cardFirstDigits]': filters[cardFirstDigits]_example, // {{String}} \n  'filters[cardLastDigits]': filters[cardLastDigits]_example, // {{String}} \n  'filters[chargeId]': filters[chargeId]_example, // {{String}} \n  'filters[created]': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'filters[status]': filters[status]_example, // {{String}} \n  'filters[voided]': true, // {{Boolean}} \n  'filters[acquirerReferenceNumber]': filters[acquirerReferenceNumber]_example // {{String}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.refundsSearchGet(opts, callback);\n"})})}),(0,i.jsx)("div",{class:"code-block csharp",id:"Retrieve Refunds Search-code-csharp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class refundsSearchGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new RefundApi();\n            var scope = scope_example;  // String |  (optional)  (default to refund)\n            var query = query_example;  // String |  (optional) \n            var filters[amount] = 56;  // Integer |  (optional) \n            var filters[cardFirstDigits] = filters[cardFirstDigits]_example;  // String |  (optional) \n            var filters[cardLastDigits] = filters[cardLastDigits]_example;  // String |  (optional) \n            var filters[chargeId] = filters[chargeId]_example;  // String |  (optional) \n            var filters[created] = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n            var filters[status] = filters[status]_example;  // String |  (optional) \n            var filters[voided] = true;  // Boolean |  (optional) \n            var filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example;  // String |  (optional) \n\n            try\n            {\n                refund result = apiInstance.refundsSearchGet(scope, query, filters[amount], filters[cardFirstDigits], filters[cardLastDigits], filters[chargeId], filters[created], filters[status], filters[voided], filters[acquirerReferenceNumber]);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling RefundApi.refundsSearchGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,i.jsx)("div",{class:"code-block php",id:"Retrieve Refunds Search-code-php",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiRefundApi();\n$scope = scope_example; // String | \n$query = query_example; // String | \n$filters[amount] = 56; // Integer | \n$filters[cardFirstDigits] = filters[cardFirstDigits]_example; // String | \n$filters[cardLastDigits] = filters[cardLastDigits]_example; // String | \n$filters[chargeId] = filters[chargeId]_example; // String | \n$filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n$filters[status] = filters[status]_example; // String | \n$filters[voided] = true; // Boolean | \n$filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example; // String | \n\ntry {\n    $result = $api_instance->refundsSearchGet($scope, $query, $filters[amount], $filters[cardFirstDigits], $filters[cardLastDigits], $filters[chargeId], $filters[created], $filters[status], $filters[voided], $filters[acquirerReferenceNumber]);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RefundApi->refundsSearchGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,i.jsx)("div",{class:"code-block perl",id:"Retrieve Refunds Search-code-perl",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::RefundApi;\n\nmy $api_instance = WWW::SwaggerClient::RefundApi->new();\nmy $scope = scope_example; # String | \nmy $query = query_example; # String | \nmy $filters[amount] = 56; # Integer | \nmy $filters[cardFirstDigits] = filters[cardFirstDigits]_example; # String | \nmy $filters[cardLastDigits] = filters[cardLastDigits]_example; # String | \nmy $filters[chargeId] = filters[chargeId]_example; # String | \nmy $filters[created] = 2013-10-20T19:20:30+01:00; # Date | \nmy $filters[status] = filters[status]_example; # String | \nmy $filters[voided] = true; # Boolean | \nmy $filters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example; # String | \n\neval { \n    my $result = $api_instance->refundsSearchGet(scope => $scope, query => $query, filters[amount] => $filters[amount], filters[cardFirstDigits] => $filters[cardFirstDigits], filters[cardLastDigits] => $filters[cardLastDigits], filters[chargeId] => $filters[chargeId], filters[created] => $filters[created], filters[status] => $filters[status], filters[voided] => $filters[voided], filters[acquirerReferenceNumber] => $filters[acquirerReferenceNumber]);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling RefundApi->refundsSearchGet: $@\\n";\n}\n'})})}),(0,i.jsx)("div",{class:"code-block python",id:"Retrieve Refunds Search-code-python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.RefundApi()\nscope = scope_example # String |  (optional) (default to refund)\nquery = query_example # String |  (optional)\nfilters[amount] = 56 # Integer |  (optional)\nfilters[cardFirstDigits] = filters[cardFirstDigits]_example # String |  (optional)\nfilters[cardLastDigits] = filters[cardLastDigits]_example # String |  (optional)\nfilters[chargeId] = filters[chargeId]_example # String |  (optional)\nfilters[created] = 2013-10-20T19:20:30+01:00 # Date |  (optional)\nfilters[status] = filters[status]_example # String |  (optional)\nfilters[voided] = true # Boolean |  (optional)\nfilters[acquirerReferenceNumber] = filters[acquirerReferenceNumber]_example # String |  (optional)\n\ntry: \n    api_response = api_instance.refunds_search_get(scope=scope, query=query, filters[amount]=filters[amount], filters[cardFirstDigits]=filters[cardFirstDigits], filters[cardLastDigits]=filters[cardLastDigits], filters[chargeId]=filters[chargeId], filters[created]=filters[created], filters[status]=filters[status], filters[voided]=filters[voided], filters[acquirerReferenceNumber]=filters[acquirerReferenceNumber])\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling RefundApi->refundsSearchGet: %s\\n" % e)\n'})})})]}),(0,i.jsx)(e.h3,{id:"parameters-6",children:"Parameters"}),(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"scope"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"query"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[amount]"}),(0,i.jsx)(e.td,{children:"Integer"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[card_first_digits]"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[card_last_digits]"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[charge_id]"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[created]"}),(0,i.jsx)(e.td,{children:"Date (date-time)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[status]"}),(0,i.jsx)(e.td,{children:"String"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[voided]"}),(0,i.jsx)(e.td,{children:"Boolean"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"filters[acquirer_reference_number]"}),(0,i.jsx)(e.td,{children:"String"})]})]})]})]})]}),(0,i.jsxs)("div",{children:[(0,i.jsx)(e.h3,{id:"responses",children:"Responses"}),(0,i.jsx)(e.h3,{id:"status-200",children:"Status: 200"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:' {\n  "object": {\n    "pattern": "refund",\n    "type": "string",\n    "default": "refund"\n  },\n  "id": {\n    "type": "string"\n  },\n  "location": {\n    "type": "string"\n  },\n  "livemode": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "voided": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "currency": {\n    "type": "string",\n    "format": "currency"\n  },\n  "amount": {\n    "type": "integer"\n  },\n  "metadata": {\n    "type": "object",\n    "default": {}\n  },\n  "charge": {\n    "oneOf": [\n      {\n        "type": "object",\n        "properties": {\n          "object": {\n            "pattern": "charge",\n            "type": "string",\n            "default": "charge"\n          },\n          "id": {\n            "pattern": "chrg_[0-9a-z]+",\n            "type": "string"\n          },\n          "location": {\n            "type": "string"\n          },\n          "amount": {\n            "type": "integer"\n          },\n          "authorization_type": {\n            "type": "string"\n          },\n          "authorized_amount": {\n            "type": "integer"\n          },\n          "captured_amount": {\n            "type": "integer"\n          },\n          "acquirer_reference_number": {\n            "type": "string",\n            "nullable": true\n          },\n          "net": {\n            "type": "integer"\n          },\n          "fee": {\n            "type": "integer"\n          },\n          "fee_vat": {\n            "type": "integer"\n          },\n          "interest": {\n            "type": "integer"\n          },\n          "interest_vat": {\n            "type": "integer"\n          },\n          "funding_amount": {\n            "type": "integer"\n          },\n          "refunded_amount": {\n            "type": "integer"\n          },\n          "transaction_fees": {\n            "type": "object",\n            "properties": {\n              "fee_flat": {\n                "type": "integer"\n              },\n              "fee_rate": {\n                "type": "number",\n                "format": "float"\n              },\n              "vat_rate": {\n                "type": "number",\n                "format": "float"\n              }\n            }\n          },\n          "platform_fee": {\n            "type": "object",\n            "properties": {\n              "fixed": {\n                "type": "integer"\n              },\n              "amount": {\n                "type": "integer"\n              },\n              "percentage": {\n                "type": "string"\n              }\n            }\n          },\n          "unmanaged_payment": {\n            "type": "object",\n            "properties": {\n              "authorization_code": {\n                "type": "string"\n              },\n              "backend_name": {\n                "type": "string"\n              },\n              "iin": {\n                "type": "string"\n              },\n              "merchant_reference": {\n                "type": "string"\n              }\n            }\n          },\n          "three_ds_info": {\n            "type": "object",\n            "properties": {\n              "three_ds_version": {\n                "type": "string"\n              },\n              "authenticated_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "eci": {\n                "type": "string"\n              },\n              "transaction_status": {\n                "type": "string"\n              },\n              "acs_url": {\n                "type": "string"\n              }\n            }\n          },\n          "currency": {\n            "type": "string",\n            "format": "currency"\n          },\n          "funding_currency": {\n            "type": "string",\n            "format": "currency"\n          },\n          "ip": {\n            "type": "string",\n            "nullable": true\n          },\n          "refunds": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "list",\n                "type": "string",\n                "default": "list"\n              },\n              "data": {\n                "type": "array",\n                "items": {}\n              },\n              "limit": {\n                "type": "integer"\n              },\n              "offset": {\n                "type": "integer"\n              },\n              "total": {\n                "type": "integer"\n              },\n              "location": {\n                "type": "string"\n              },\n              "order": {\n                "type": "string",\n                "enum": [\n                  "chronological",\n                  "reverse_chronological"\n                ]\n              },\n              "from": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "to": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "link": {\n            "oneOf": [\n              {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "link",\n                    "type": "string",\n                    "default": "link"\n                  },\n                  "id": {\n                    "type": "string"\n                  },\n                  "livemode": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "deleted": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "multiple": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "used": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "currency": {\n                    "type": "string",\n                    "format": "currency"\n                  },\n                  "amount": {\n                    "type": "integer"\n                  },\n                  "charges": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "list",\n                        "type": "string",\n                        "default": "list"\n                      },\n                      "data": {\n                        "type": "array",\n                        "items": {}\n                      },\n                      "limit": {\n                        "type": "integer"\n                      },\n                      "offset": {\n                        "type": "integer"\n                      },\n                      "total": {\n                        "type": "integer"\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "order": {\n                        "type": "string",\n                        "enum": [\n                          "chronological",\n                          "reverse_chronological"\n                        ]\n                      },\n                      "from": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "to": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  "description": {\n                    "type": "string"\n                  },\n                  "title": {\n                    "type": "string"\n                  },\n                  "payment_uri": {\n                    "type": "string",\n                    "format": "uri"\n                  },\n                  "created_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "used_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "deleted_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "merchant_name": {\n                    "type": "string"\n                  },\n                  "merchant_uid": {\n                    "type": "string"\n                  }\n                }\n              },\n              {\n                "type": "string"\n              }\n            ]\n          },\n          "description": {\n            "type": "string",\n            "nullable": true\n          },\n          "metadata": {\n            "type": "object",\n            "default": {}\n          },\n          "missing_3ds_fields": {\n            "type": "object"\n          },\n          "card": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "card",\n                "type": "string",\n                "default": "card"\n              },\n              "id": {\n                "type": "string"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "location": {\n                "type": "string"\n              },\n              "deleted": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "street1": {\n                "type": "string",\n                "nullable": true\n              },\n              "street2": {\n                "type": "string",\n                "nullable": true\n              },\n              "city": {\n                "type": "string",\n                "nullable": true\n              },\n              "state": {\n                "type": "string",\n                "nullable": true\n              },\n              "phone_number": {\n                "type": "string",\n                "nullable": true\n              },\n              "postal_code": {\n                "type": "string",\n                "nullable": true\n              },\n              "country": {\n                "pattern": "^[a-z]{0,2}$",\n                "type": "string"\n              },\n              "financing": {\n                "type": "string"\n              },\n              "bank": {\n                "type": "string"\n              },\n              "brand": {\n                "type": "string"\n              },\n              "fingerprint": {\n                "type": "string"\n              },\n              "first_digits": {\n                "pattern": "^[0-9]{6}$",\n                "type": "string",\n                "nullable": true\n              },\n              "last_digits": {\n                "pattern": "^[0-9]{4}$",\n                "type": "string"\n              },\n              "name": {\n                "type": "string"\n              },\n              "expiration_month": {\n                "type": "integer"\n              },\n              "expiration_year": {\n                "type": "integer"\n              },\n              "security_code_check": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "tokenization_method": {\n                "type": "string"\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "source": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "source",\n                "type": "string",\n                "default": "source"\n              },\n              "id": {\n                "type": "string"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "location": {\n                "type": "string"\n              },\n              "amount": {\n                "type": "integer"\n              },\n              "barcode": {\n                "type": "string"\n              },\n              "bank": {\n                "type": "string"\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "currency": {\n                "type": "string",\n                "format": "currency"\n              },\n              "email": {\n                "type": "string"\n              },\n              "flow": {\n                "type": "string",\n                "enum": [\n                  "redirect",\n                  "offline",\n                  "app_redirect"\n                ]\n              },\n              "installment_term": {\n                "type": "integer"\n              },\n              "ip": {\n                "type": "string"\n              },\n              "absorption_type": {\n                "type": "string",\n                "enum": [\n                  "merchant",\n                  "customer"\n                ]\n              },\n              "name": {\n                "type": "string"\n              },\n              "mobile_number": {\n                "type": "string"\n              },\n              "phone_number": {\n                "type": "string"\n              },\n              "platform_type": {\n                "type": "string"\n              },\n              "scannable_code": {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "barcode",\n                    "type": "string",\n                    "default": "barcode"\n                  },\n                  "type": {\n                    "type": "string"\n                  },\n                  "image": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "document",\n                        "type": "string",\n                        "default": "document"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "filename": {\n                        "type": "string"\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "kind": {\n                        "type": "string"\n                      },\n                      "download_uri": {\n                        "type": "string",\n                        "format": "uri"\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  "raw_data": {\n                    "type": "string"\n                  }\n                }\n              },\n              "qr_settings": {\n                "type": "object",\n                "properties": {\n                  "image_type": {\n                    "type": "string"\n                  }\n                }\n              },\n              "billing": {\n                "type": "object",\n                "properties": {\n                  "city": {\n                    "type": "string"\n                  },\n                  "country": {\n                    "type": "string"\n                  },\n                  "postal_code": {\n                    "type": "string"\n                  },\n                  "state": {\n                    "type": "string"\n                  },\n                  "street1": {\n                    "type": "string"\n                  },\n                  "street2": {\n                    "type": "string"\n                  }\n                }\n              },\n              "shipping": {\n                "type": "object",\n                "properties": {\n                  "city": {\n                    "type": "string"\n                  },\n                  "country": {\n                    "type": "string"\n                  },\n                  "postal_code": {\n                    "type": "string"\n                  },\n                  "state": {\n                    "type": "string"\n                  },\n                  "street1": {\n                    "type": "string"\n                  },\n                  "street2": {\n                    "type": "string"\n                  }\n                }\n              },\n              "items": {\n                "type": "array",\n                "items": {}\n              },\n              "references": {\n                "type": "object",\n                "properties": {\n                  "expires_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "device_id": {\n                    "type": "string"\n                  },\n                  "customer_amount": {\n                    "type": "integer"\n                  },\n                  "customer_currency": {\n                    "type": "string"\n                  },\n                  "customer_exchange_rate": {\n                    "type": "number",\n                    "format": "float"\n                  },\n                  "omise_tax_id": {\n                    "type": "string"\n                  },\n                  "reference_number_1": {\n                    "type": "string"\n                  },\n                  "reference_number_2": {\n                    "type": "string"\n                  },\n                  "barcode": {\n                    "type": "string"\n                  },\n                  "payment_code": {\n                    "type": "string"\n                  },\n                  "va_code": {\n                    "type": "string"\n                  }\n                }\n              },\n              "provider_references": {\n                "type": "object",\n                "properties": {\n                  "reference_number_1": {\n                    "type": "string"\n                  },\n                  "reference_number_2": {\n                    "type": "string"\n                  },\n                  "buyer_name": {\n                    "type": "string"\n                  }\n                }\n              },\n              "store_id": {\n                "type": "string"\n              },\n              "store_name": {\n                "type": "string"\n              },\n              "terminal_id": {\n                "type": "string"\n              },\n              "type": {\n                "type": "string"\n              },\n              "zero_interest_installments": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "charge_status": {\n                "type": "string",\n                "enum": [\n                  "failed",\n                  "expired",\n                  "pending",\n                  "reversed",\n                  "successful",\n                  "unknown"\n                ]\n              },\n              "receipt_amount": {\n                "type": "integer"\n              },\n              "discounts": {\n                "type": "array",\n                "items": {},\n                "default": []\n              },\n              "promotion_code": {\n                "type": "string"\n              },\n              "supplier_id": {\n                "type": "string"\n              }\n            }\n          },\n          "schedule": {\n            "oneOf": [\n              {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "schedule",\n                    "type": "string",\n                    "default": "schedule"\n                  },\n                  "id": {\n                    "pattern": "schd_[0-9a-z]+",\n                    "type": "string"\n                  },\n                  "deleted": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "livemode": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "every": {\n                    "type": "integer"\n                  },\n                  "occurrences": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "list",\n                        "type": "string",\n                        "default": "list"\n                      },\n                      "data": {\n                        "type": "array",\n                        "items": {}\n                      },\n                      "limit": {\n                        "type": "integer"\n                      },\n                      "offset": {\n                        "type": "integer"\n                      },\n                      "total": {\n                        "type": "integer"\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "order": {\n                        "type": "string",\n                        "enum": [\n                          "chronological",\n                          "reverse_chronological"\n                        ]\n                      },\n                      "from": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "to": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  "on": {\n                    "type": "object",\n                    "properties": {\n                      "days_of_month": {\n                        "type": "array",\n                        "items": {}\n                      },\n                      "weekday_of_month": {\n                        "type": "string"\n                      },\n                      "weekdays": {\n                        "type": "array",\n                        "items": {\n                          "type": "string"\n                        },\n                        "enum": [\n                          "sunday",\n                          "monday",\n                          "tuesday",\n                          "wednesday",\n                          "thursday",\n                          "friday",\n                          "saturday"\n                        ]\n                      }\n                    }\n                  },\n                  "in_words": {\n                    "type": "string"\n                  },\n                  "period": {\n                    "type": "string",\n                    "enum": [\n                      "day",\n                      "week",\n                      "month"\n                    ]\n                  },\n                  "status": {\n                    "type": "string",\n                    "enum": [\n                      "running",\n                      "active",\n                      "expiring",\n                      "expired",\n                      "deleted",\n                      "suspended"\n                    ]\n                  },\n                  "active": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "state": {\n                    "type": "string",\n                    "enum": [\n                      "Active",\n                      "Pause"\n                    ]\n                  },\n                  "charge": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "charge_schedule",\n                        "type": "string",\n                        "default": "charge_schedule"\n                      },\n                      "id": {\n                        "pattern": "rchg_[0-9a-z]+",\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "currency": {\n                        "type": "string",\n                        "format": "currency"\n                      },\n                      "amount": {\n                        "type": "integer"\n                      },\n                      "default_card": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "card": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "card",\n                                "type": "string",\n                                "default": "card"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "street1": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "street2": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "city": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "state": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "phone_number": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "postal_code": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "country": {\n                                "pattern": "^[a-z]{0,2}$",\n                                "type": "string"\n                              },\n                              "financing": {\n                                "type": "string"\n                              },\n                              "bank": {\n                                "type": "string"\n                              },\n                              "brand": {\n                                "type": "string"\n                              },\n                              "fingerprint": {\n                                "type": "string"\n                              },\n                              "first_digits": {\n                                "pattern": "^[0-9]{6}$",\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "last_digits": {\n                                "pattern": "^[0-9]{4}$",\n                                "type": "string"\n                              },\n                              "name": {\n                                "type": "string"\n                              },\n                              "expiration_month": {\n                                "type": "integer"\n                              },\n                              "expiration_year": {\n                                "type": "integer"\n                              },\n                              "security_code_check": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "tokenization_method": {\n                                "type": "string"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "customer": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "customer",\n                                "type": "string",\n                                "default": "customer"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "metadata": {\n                                "type": "object",\n                                "default": {}\n                              },\n                              "cards": {\n                                "type": "object",\n                                "properties": {\n                                  "object": {\n                                    "pattern": "list",\n                                    "type": "string",\n                                    "default": "list"\n                                  },\n                                  "data": {\n                                    "type": "array",\n                                    "items": {}\n                                  },\n                                  "limit": {\n                                    "type": "integer"\n                                  },\n                                  "offset": {\n                                    "type": "integer"\n                                  },\n                                  "total": {\n                                    "type": "integer"\n                                  },\n                                  "location": {\n                                    "type": "string"\n                                  },\n                                  "order": {\n                                    "type": "string",\n                                    "enum": [\n                                      "chronological",\n                                      "reverse_chronological"\n                                    ]\n                                  },\n                                  "from": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  },\n                                  "to": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  }\n                                }\n                              },\n                              "default_card": {\n                                "oneOf": [\n                                  {\n                                    "type": "object",\n                                    "properties": {\n                                      "object": {\n                                        "pattern": "card",\n                                        "type": "string",\n                                        "default": "card"\n                                      },\n                                      "id": {\n                                        "type": "string"\n                                      },\n                                      "livemode": {\n                                        "type": "boolean",\n                                        "enum": [\n                                          true,\n                                          false\n                                        ]\n                                      },\n                                      "location": {\n                                        "type": "string"\n                                      },\n                                      "deleted": {\n                                        "type": "boolean",\n                                        "enum": [\n                                          true,\n                                          false\n                                        ]\n                                      },\n                                      "street1": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "street2": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "city": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "state": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "phone_number": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "postal_code": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "country": {\n                                        "pattern": "^[a-z]{0,2}$",\n                                        "type": "string"\n                                      },\n                                      "financing": {\n                                        "type": "string"\n                                      },\n                                      "bank": {\n                                        "type": "string"\n                                      },\n                                      "brand": {\n                                        "type": "string"\n                                      },\n                                      "fingerprint": {\n                                        "type": "string"\n                                      },\n                                      "first_digits": {\n                                        "pattern": "^[0-9]{6}$",\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "last_digits": {\n                                        "pattern": "^[0-9]{4}$",\n                                        "type": "string"\n                                      },\n                                      "name": {\n                                        "type": "string"\n                                      },\n                                      "expiration_month": {\n                                        "type": "integer"\n                                      },\n                                      "expiration_year": {\n                                        "type": "integer"\n                                      },\n                                      "security_code_check": {\n                                        "type": "boolean",\n                                        "enum": [\n                                          true,\n                                          false\n                                        ]\n                                      },\n                                      "tokenization_method": {\n                                        "type": "string"\n                                      },\n                                      "created_at": {\n                                        "type": "string",\n                                        "format": "date-time"\n                                      }\n                                    }\n                                  },\n                                  {\n                                    "type": "string"\n                                  }\n                                ]\n                              },\n                              "linked_accounts": {\n                                "type": "object",\n                                "properties": {\n                                  "object": {\n                                    "pattern": "list",\n                                    "type": "string",\n                                    "default": "list"\n                                  },\n                                  "data": {\n                                    "type": "array",\n                                    "items": {}\n                                  },\n                                  "limit": {\n                                    "type": "integer"\n                                  },\n                                  "offset": {\n                                    "type": "integer"\n                                  },\n                                  "total": {\n                                    "type": "integer"\n                                  },\n                                  "location": {\n                                    "type": "string"\n                                  },\n                                  "order": {\n                                    "type": "string",\n                                    "enum": [\n                                      "chronological",\n                                      "reverse_chronological"\n                                    ]\n                                  },\n                                  "from": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  },\n                                  "to": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  }\n                                }\n                              },\n                              "description": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "email": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "linked_account": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "linked_account",\n                                "type": "string",\n                                "default": "linked_account"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "registration_uri": {\n                                "type": "string",\n                                "format": "uri"\n                              },\n                              "return_uri": {\n                                "type": "string",\n                                "format": "uri"\n                              },\n                              "type": {\n                                "type": "string"\n                              },\n                              "status": {\n                                "type": "string",\n                                "enum": [\n                                  "failed",\n                                  "expired",\n                                  "deleted",\n                                  "pending",\n                                  "successful"\n                                ]\n                              },\n                              "last_digits": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "metadata": {\n                                "type": "object",\n                                "default": {}\n                              },\n                              "failure_code": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "failure_message": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "registered_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "expires_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "description": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  "transfer": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "transfer_schedule",\n                        "type": "string",\n                        "default": "transfer_schedule"\n                      },\n                      "id": {\n                        "pattern": "rtrf_[0-9a-z]+",\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "amount": {\n                        "type": "integer",\n                        "nullable": true\n                      },\n                      "currency": {\n                        "type": "string",\n                        "format": "currency"\n                      },\n                      "percentage_of_balance": {\n                        "type": "number",\n                        "format": "float",\n                        "nullable": true\n                      },\n                      "recipient": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "recipient",\n                                "type": "string",\n                                "default": "recipient"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "bank_account": {\n                                "type": "object",\n                                "properties": {\n                                  "object": {\n                                    "pattern": "bank_account",\n                                    "type": "string",\n                                    "default": "bank_account"\n                                  },\n                                  "livemode": {\n                                    "type": "boolean",\n                                    "enum": [\n                                      true,\n                                      false\n                                    ]\n                                  },\n                                  "last_digits": {\n                                    "pattern": "^[0-9]{4}$",\n                                    "type": "string"\n                                  },\n                                  "account_number": {\n                                    "type": "string"\n                                  },\n                                  "name": {\n                                    "type": "string"\n                                  },\n                                  "type": {\n                                    "type": "string",\n                                    "enum": [\n                                      "normal",\n                                      "current"\n                                    ]\n                                  },\n                                  "created_at": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  },\n                                  "brand": {\n                                    "type": "string"\n                                  },\n                                  "bank_code": {\n                                    "type": "string"\n                                  },\n                                  "branch_code": {\n                                    "type": "string"\n                                  }\n                                }\n                              },\n                              "active": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "default": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "verified": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "description": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "email": {\n                                "type": "string"\n                              },\n                              "failure_code": {\n                                "type": "string",\n                                "nullable": true,\n                                "enum": [\n                                  "name_mismatch",\n                                  "account_not_found",\n                                  "bank_not_found"\n                                ]\n                              },\n                              "name": {\n                                "type": "string"\n                              },\n                              "tax_id": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "type": {\n                                "type": "string",\n                                "enum": [\n                                  "individual",\n                                  "corporation"\n                                ]\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "schedule": {\n                                "oneOf": [\n                                  {\n                                    "type": "object",\n                                    "properties": {\n                                      "object": {\n                                        "pattern": "schedule",\n                                        "type": "string",\n                                        "default": "schedule"\n                                      },\n                                      "id": {\n                                        "pattern": "schd_[0-9a-z]+",\n                                        "type": "string"\n                                      },\n                                      "deleted": {\n                                        "type": "boolean",\n                                        "enum": [\n                                          true,\n                                          false\n                                        ]\n                                      },\n                                      "livemode": {\n                                        "type": "boolean",\n                                        "enum": [\n                                          true,\n                                          false\n                                        ]\n                                      },\n                                      "location": {\n                                        "type": "string"\n                                      },\n                                      "every": {\n                                        "type": "integer"\n                                      },\n                                      "occurrences": {\n                                        "$ref": "#/components/schemas/list"\n                                      },\n                                      "on": {\n                                        "$ref": "#/components/schemas/schedule_on"\n                                      },\n                                      "in_words": {\n                                        "type": "string"\n                                      },\n                                      "period": {\n                                        "type": "string",\n                                        "enum": [\n                                          "day",\n                                          "week",\n                                          "month"\n                                        ]\n                                      },\n                                      "status": {\n                                        "type": "string",\n                                        "enum": [\n                                          "running",\n                                          "active",\n                                          "expiring",\n                                          "expired",\n                                          "deleted",\n                                          "suspended"\n                                        ]\n                                      },\n                                      "active": {\n                                        "type": "boolean",\n                                        "enum": [\n                                          true,\n                                          false\n                                        ]\n                                      },\n                                      "state": {\n                                        "type": "string",\n                                        "enum": [\n                                          "Active",\n                                          "Pause"\n                                        ]\n                                      },\n                                      "charge": {\n                                        "$ref": "#/components/schemas/charge_schedule"\n                                      },\n                                      "transfer": {\n                                        "$ref": "#/components/schemas/transfer_schedule"\n                                      },\n                                      "next_occurrences_on": {\n                                        "type": "array",\n                                        "items": {\n                                          "type": "string",\n                                          "format": "date"\n                                        }\n                                      },\n                                      "ended_at": {\n                                        "type": "string",\n                                        "format": "date-time"\n                                      },\n                                      "start_on": {\n                                        "type": "string",\n                                        "format": "date"\n                                      },\n                                      "end_on": {\n                                        "type": "string",\n                                        "format": "date"\n                                      },\n                                      "created_at": {\n                                        "type": "string",\n                                        "format": "date-time"\n                                      },\n                                      "execute_time": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "deleted_by": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "merchant_name": {\n                                        "type": "string"\n                                      }\n                                    }\n                                  },\n                                  {\n                                    "type": "string"\n                                  }\n                                ]\n                              },\n                              "metadata": {\n                                "type": "object",\n                                "default": {}\n                              },\n                              "verified_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "activated_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "is_realtime_payout": {\n                        "type": "boolean",\n                        "nullable": true,\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      }\n                    }\n                  },\n                  "next_occurrences_on": {\n                    "type": "array",\n                    "items": {\n                      "type": "string",\n                      "format": "date"\n                    }\n                  },\n                  "ended_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "start_on": {\n                    "type": "string",\n                    "format": "date"\n                  },\n                  "end_on": {\n                    "type": "string",\n                    "format": "date"\n                  },\n                  "created_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "execute_time": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "deleted_by": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "merchant_name": {\n                    "type": "string"\n                  }\n                }\n              },\n              {\n                "type": "string"\n              }\n            ]\n          },\n          "linked_account": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "linked_account",\n                "type": "string",\n                "default": "linked_account"\n              },\n              "id": {\n                "type": "string"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "location": {\n                "type": "string"\n              },\n              "registration_uri": {\n                "type": "string",\n                "format": "uri"\n              },\n              "return_uri": {\n                "type": "string",\n                "format": "uri"\n              },\n              "type": {\n                "type": "string"\n              },\n              "status": {\n                "type": "string",\n                "enum": [\n                  "failed",\n                  "expired",\n                  "deleted",\n                  "pending",\n                  "successful"\n                ]\n              },\n              "last_digits": {\n                "type": "string",\n                "nullable": true\n              },\n              "metadata": {\n                "type": "object",\n                "default": {}\n              },\n              "failure_code": {\n                "type": "string",\n                "nullable": true\n              },\n              "failure_message": {\n                "type": "string",\n                "nullable": true\n              },\n              "registered_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "expires_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "customer": {\n            "oneOf": [\n              {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "customer",\n                    "type": "string",\n                    "default": "customer"\n                  },\n                  "id": {\n                    "type": "string"\n                  },\n                  "livemode": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "deleted": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "metadata": {\n                    "type": "object",\n                    "default": {}\n                  },\n                  "cards": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "list",\n                        "type": "string",\n                        "default": "list"\n                      },\n                      "data": {\n                        "type": "array",\n                        "items": {}\n                      },\n                      "limit": {\n                        "type": "integer"\n                      },\n                      "offset": {\n                        "type": "integer"\n                      },\n                      "total": {\n                        "type": "integer"\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "order": {\n                        "type": "string",\n                        "enum": [\n                          "chronological",\n                          "reverse_chronological"\n                        ]\n                      },\n                      "from": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "to": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  "default_card": {\n                    "oneOf": [\n                      {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "card",\n                            "type": "string",\n                            "default": "card"\n                          },\n                          "id": {\n                            "type": "string"\n                          },\n                          "livemode": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "deleted": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "street1": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "street2": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "city": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "state": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "phone_number": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "postal_code": {\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "country": {\n                            "pattern": "^[a-z]{0,2}$",\n                            "type": "string"\n                          },\n                          "financing": {\n                            "type": "string"\n                          },\n                          "bank": {\n                            "type": "string"\n                          },\n                          "brand": {\n                            "type": "string"\n                          },\n                          "fingerprint": {\n                            "type": "string"\n                          },\n                          "first_digits": {\n                            "pattern": "^[0-9]{6}$",\n                            "type": "string",\n                            "nullable": true\n                          },\n                          "last_digits": {\n                            "pattern": "^[0-9]{4}$",\n                            "type": "string"\n                          },\n                          "name": {\n                            "type": "string"\n                          },\n                          "expiration_month": {\n                            "type": "integer"\n                          },\n                          "expiration_year": {\n                            "type": "integer"\n                          },\n                          "security_code_check": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "tokenization_method": {\n                            "type": "string"\n                          },\n                          "created_at": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      {\n                        "type": "string"\n                      }\n                    ]\n                  },\n                  "linked_accounts": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "list",\n                        "type": "string",\n                        "default": "list"\n                      },\n                      "data": {\n                        "type": "array",\n                        "items": {}\n                      },\n                      "limit": {\n                        "type": "integer"\n                      },\n                      "offset": {\n                        "type": "integer"\n                      },\n                      "total": {\n                        "type": "integer"\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "order": {\n                        "type": "string",\n                        "enum": [\n                          "chronological",\n                          "reverse_chronological"\n                        ]\n                      },\n                      "from": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "to": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  "description": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "email": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "created_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  }\n                }\n              },\n              {\n                "type": "string"\n              }\n            ]\n          },\n          "dispute": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "dispute",\n                "type": "string",\n                "default": "dispute"\n              },\n              "id": {\n                "type": "string"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "location": {\n                "type": "string"\n              },\n              "currency": {\n                "type": "string",\n                "format": "currency"\n              },\n              "amount": {\n                "type": "integer"\n              },\n              "funding_amount": {\n                "type": "integer"\n              },\n              "funding_currency": {\n                "type": "string",\n                "format": "currency"\n              },\n              "metadata": {\n                "type": "object",\n                "default": {}\n              },\n              "charge": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "charge",\n                        "type": "string",\n                        "default": "charge"\n                      },\n                      "id": {\n                        "pattern": "chrg_[0-9a-z]+",\n                        "type": "string"\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "amount": {\n                        "type": "integer"\n                      },\n                      "authorization_type": {\n                        "type": "string"\n                      },\n                      "authorized_amount": {\n                        "type": "integer"\n                      },\n                      "captured_amount": {\n                        "type": "integer"\n                      },\n                      "acquirer_reference_number": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "net": {\n                        "type": "integer"\n                      },\n                      "fee": {\n                        "type": "integer"\n                      },\n                      "fee_vat": {\n                        "type": "integer"\n                      },\n                      "interest": {\n                        "type": "integer"\n                      },\n                      "interest_vat": {\n                        "type": "integer"\n                      },\n                      "funding_amount": {\n                        "type": "integer"\n                      },\n                      "refunded_amount": {\n                        "type": "integer"\n                      },\n                      "transaction_fees": {\n                        "$ref": "#/components/schemas/charge_transaction_fees"\n                      },\n                      "platform_fee": {\n                        "$ref": "#/components/schemas/charge_platform_fee"\n                      },\n                      "unmanaged_payment": {\n                        "$ref": "#/components/schemas/charge_unmanaged_payment"\n                      },\n                      "three_ds_info": {\n                        "$ref": "#/components/schemas/charge_three_ds_info"\n                      },\n                      "currency": {\n                        "type": "string",\n                        "format": "currency"\n                      },\n                      "funding_currency": {\n                        "type": "string",\n                        "format": "currency"\n                      },\n                      "ip": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "refunds": {\n                        "$ref": "#/components/schemas/list"\n                      },\n                      "link": {\n                        "oneOf": [\n                          {\n                            "$ref": "#/components/schemas/link"\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "description": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "missing_3ds_fields": {\n                        "type": "object"\n                      },\n                      "card": {\n                        "$ref": "#/components/schemas/card"\n                      },\n                      "source": {\n                        "$ref": "#/components/schemas/source"\n                      },\n                      "schedule": {\n                        "oneOf": [\n                          {\n                            "$ref": "#/components/schemas/schedule"\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "linked_account": {\n                        "$ref": "#/components/schemas/linked_account"\n                      },\n                      "customer": {\n                        "oneOf": [\n                          {\n                            "$ref": "#/components/schemas/customer"\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "dispute": {\n                        "$ref": "#/components/schemas/dispute"\n                      },\n                      "transaction": {\n                        "oneOf": [\n                          {\n                            "$ref": "#/components/schemas/transaction"\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "failure_code": {\n                        "type": "string",\n                        "nullable": true,\n                        "enum": [\n                          "failed_fraud_check",\n                          "failed_processing",\n                          "insufficient_balance",\n                          "insufficient_fund",\n                          "invalid_account_number",\n                          "invalid_security_code",\n                          "payment_cancelled",\n                          "payment_rejected",\n                          "timeout",\n                          "expired_card"\n                        ]\n                      },\n                      "failure_message": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "merchant_advice": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "merchant_advice_code": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "status": {\n                        "type": "string",\n                        "enum": [\n                          "failed",\n                          "expired",\n                          "pending",\n                          "reversed",\n                          "successful"\n                        ]\n                      },\n                      "authorize_uri": {\n                        "type": "string",\n                        "format": "uri",\n                        "nullable": true\n                      },\n                      "return_uri": {\n                        "type": "string",\n                        "format": "uri",\n                        "nullable": true\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "paid_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "authorized_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "expires_at": {\n                        "type": "string",\n                        "format": "date-time",\n                        "nullable": true\n                      },\n                      "expired_at": {\n                        "type": "string",\n                        "format": "date-time",\n                        "nullable": true\n                      },\n                      "reversed_at": {\n                        "type": "string",\n                        "format": "date-time",\n                        "nullable": true\n                      },\n                      "multi_capture": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "zero_interest_installments": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "authorized": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "capturable": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "capture": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "disputable": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "refundable": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "partially_refundable": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "reversed": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "reversible": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "voided": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "paid": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "expired": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "can_perform_void": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "merchant_name": {\n                        "type": "string"\n                      },\n                      "merchant_uid": {\n                        "type": "string"\n                      },\n                      "approval_code": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "statement_descriptor": {\n                        "type": "string"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "documents": {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "list",\n                    "type": "string",\n                    "default": "list"\n                  },\n                  "data": {\n                    "type": "array",\n                    "items": {}\n                  },\n                  "limit": {\n                    "type": "integer"\n                  },\n                  "offset": {\n                    "type": "integer"\n                  },\n                  "total": {\n                    "type": "integer"\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "order": {\n                    "type": "string",\n                    "enum": [\n                      "chronological",\n                      "reverse_chronological"\n                    ]\n                  },\n                  "from": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "to": {\n                    "type": "string",\n                    "format": "date-time"\n                  }\n                }\n              },\n              "transactions": {\n                "type": "array",\n                "items": {\n                  "type": "object",\n                  "properties": {\n                    "object": {\n                      "pattern": "transaction",\n                      "type": "string",\n                      "default": "transaction"\n                    },\n                    "id": {\n                      "pattern": "trxn_[0-9a-z]+",\n                      "type": "string"\n                    },\n                    "livemode": {\n                      "type": "boolean",\n                      "enum": [\n                        true,\n                        false\n                      ]\n                    },\n                    "currency": {\n                      "type": "string",\n                      "format": "currency"\n                    },\n                    "amount": {\n                      "type": "integer"\n                    },\n                    "location": {\n                      "type": "string"\n                    },\n                    "direction": {\n                      "type": "string",\n                      "enum": [\n                        "credit",\n                        "debit"\n                      ]\n                    },\n                    "key": {\n                      "type": "string"\n                    },\n                    "origin": {\n                      "type": "string"\n                    },\n                    "transferable_at": {\n                      "type": "string",\n                      "format": "date-time"\n                    },\n                    "created_at": {\n                      "type": "string",\n                      "format": "date-time"\n                    }\n                  }\n                }\n              },\n              "admin_message": {\n                "type": "string",\n                "nullable": true\n              },\n              "message": {\n                "type": "string",\n                "nullable": true\n              },\n              "reason_code": {\n                "type": "string",\n                "enum": [\n                  "not_recorded",\n                  "not_available",\n                  "other",\n                  "incorrect_transaction_amount",\n                  "duplicate_processing",\n                  "credit_not_processed",\n                  "paid_by_other_means",\n                  "unauthorized_charge",\n                  "non_matching_account_number",\n                  "incorrect_currency",\n                  "late_presentment",\n                  "cancelled_recurring_transaction",\n                  "not_as_described_or_defective_merchandise",\n                  "goods_or_services_not_provided",\n                  "incorrect_transaction_code",\n                  "invalid_data",\n                  "expired_card",\n                  "transaction_not_recognised"\n                ]\n              },\n              "reason_message": {\n                "type": "string"\n              },\n              "status": {\n                "type": "string",\n                "enum": [\n                  "open",\n                  "pending",\n                  "won",\n                  "lost"\n                ]\n              },\n              "closed_at": {\n                "type": "string",\n                "format": "date-time",\n                "nullable": true\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "merchant_name": {\n                "type": "string"\n              },\n              "merchant_uid": {\n                "type": "string"\n              }\n            }\n          },\n          "transaction": {\n            "oneOf": [\n              {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "transaction",\n                    "type": "string",\n                    "default": "transaction"\n                  },\n                  "id": {\n                    "pattern": "trxn_[0-9a-z]+",\n                    "type": "string"\n                  },\n                  "livemode": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "currency": {\n                    "type": "string",\n                    "format": "currency"\n                  },\n                  "amount": {\n                    "type": "integer"\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "direction": {\n                    "type": "string",\n                    "enum": [\n                      "credit",\n                      "debit"\n                    ]\n                  },\n                  "key": {\n                    "type": "string"\n                  },\n                  "origin": {\n                    "type": "string"\n                  },\n                  "transferable_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "created_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  }\n                }\n              },\n              {\n                "type": "string"\n              }\n            ]\n          },\n          "failure_code": {\n            "type": "string",\n            "nullable": true,\n            "enum": [\n              "failed_fraud_check",\n              "failed_processing",\n              "insufficient_balance",\n              "insufficient_fund",\n              "invalid_account_number",\n              "invalid_security_code",\n              "payment_cancelled",\n              "payment_rejected",\n              "timeout",\n              "expired_card"\n            ]\n          },\n          "failure_message": {\n            "type": "string",\n            "nullable": true\n          },\n          "merchant_advice": {\n            "type": "string",\n            "nullable": true\n          },\n          "merchant_advice_code": {\n            "type": "string",\n            "nullable": true\n          },\n          "status": {\n            "type": "string",\n            "enum": [\n              "failed",\n              "expired",\n              "pending",\n              "reversed",\n              "successful"\n            ]\n          },\n          "authorize_uri": {\n            "type": "string",\n            "format": "uri",\n            "nullable": true\n          },\n          "return_uri": {\n            "type": "string",\n            "format": "uri",\n            "nullable": true\n          },\n          "created_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "paid_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "authorized_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "expires_at": {\n            "type": "string",\n            "format": "date-time",\n            "nullable": true\n          },\n          "expired_at": {\n            "type": "string",\n            "format": "date-time",\n            "nullable": true\n          },\n          "reversed_at": {\n            "type": "string",\n            "format": "date-time",\n            "nullable": true\n          },\n          "multi_capture": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "zero_interest_installments": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "authorized": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "capturable": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "capture": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "disputable": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "livemode": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "refundable": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "partially_refundable": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "reversed": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "reversible": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "voided": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "paid": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "expired": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "can_perform_void": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "merchant_name": {\n            "type": "string"\n          },\n          "merchant_uid": {\n            "type": "string"\n          },\n          "approval_code": {\n            "type": "string",\n            "nullable": true\n          },\n          "statement_descriptor": {\n            "type": "string"\n          }\n        }\n      },\n      {\n        "type": "string"\n      }\n    ]\n  },\n  "capture": {\n    "type": "string",\n    "nullable": true\n  },\n  "terminal": {\n    "type": "string",\n    "nullable": true\n  },\n  "transaction": {\n    "oneOf": [\n      {\n        "type": "object",\n        "properties": {\n          "object": {\n            "pattern": "transaction",\n            "type": "string",\n            "default": "transaction"\n          },\n          "id": {\n            "pattern": "trxn_[0-9a-z]+",\n            "type": "string"\n          },\n          "livemode": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "currency": {\n            "type": "string",\n            "format": "currency"\n          },\n          "amount": {\n            "type": "integer"\n          },\n          "location": {\n            "type": "string"\n          },\n          "direction": {\n            "type": "string",\n            "enum": [\n              "credit",\n              "debit"\n            ]\n          },\n          "key": {\n            "type": "string"\n          },\n          "origin": {\n            "type": "string"\n          },\n          "transferable_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "created_at": {\n            "type": "string",\n            "format": "date-time"\n          }\n        }\n      },\n      {\n        "type": "string"\n      }\n    ]\n  },\n  "status": {\n    "type": "string",\n    "enum": [\n      "closed"\n    ]\n  },\n  "funding_amount": {\n    "type": "integer"\n  },\n  "funding_currency": {\n    "type": "string",\n    "format": "currency"\n  },\n  "created_at": {\n    "type": "string",\n    "format": "date-time"\n  },\n  "acquirer_reference_number": {\n    "type": "string",\n    "nullable": true\n  },\n  "merchant_name": {\n    "type": "string"\n  },\n  "merchant_uid": {\n    "type": "string"\n  },\n  "approval_code": {\n    "type": "string",\n    "nullable": true\n  }\n} \n'})})]})]})]})}function p(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}}}]);