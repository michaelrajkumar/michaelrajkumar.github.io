"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5880],{23685:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"api references/transfers","title":"Transfers","description":"Retrieve Transfers","source":"@site/docs/api references/transfers.md","sourceDirName":"api references","slug":"/api references/transfers","permalink":"/th/api references/transfers","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Transactions","permalink":"/th/api references/transactions"}}');var a=t(74848),i=t(28453);const s={},l="Transfers",o={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Parameters",id:"parameters-5",level:3},{value:"Parameters",id:"parameters-6",level:3},{value:"Parameters",id:"parameters-7",level:3},{value:"Parameters",id:"parameters-8",level:3},{value:"Responses",id:"responses",level:3},{value:"Status: 200",id:"status-200",level:3}];function p(n){const e={code:"code",h1:"h1",h3:"h3",header:"header",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"transfers",children:"Transfers"})}),"\n",(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,a.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,a.jsx)("h3",{children:"Retrieve Transfers"}),(0,a.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,a.jsxs)("div",{class:"code",style:{flex:2},children:[(0,a.jsxs)("div",{class:"code-container",children:[(0,a.jsx)("div",{class:"code-header",children:"Retrieve Transfers"}),(0,a.jsxs)("div",{class:"code-dropdown",children:[(0,a.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,a.jsx)("option",{value:"curl",children:"curl"}),(0,a.jsx)("option",{value:"java",children:"java"}),(0,a.jsx)("option",{value:"android",children:"android"}),(0,a.jsx)("option",{value:"objc",children:"objc"}),(0,a.jsx)("option",{value:"javascript",children:"javascript"}),(0,a.jsx)("option",{value:"csharp",children:"csharp"}),(0,a.jsx)("option",{value:"php",children:"php"}),(0,a.jsx)("option",{value:"perl",children:"perl"}),(0,a.jsx)("option",{value:"python",children:"python"})]}),(0,a.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,a.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,a.jsx)("div",{class:"code-block curl active",id:"Retrieve Transfers-code-curl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/transfers?from=&to=&offset=&limit=&order="\n'})})}),(0,a.jsx)("div",{class:"code-block java",id:"Retrieve Transfers-code-java",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.TransfersApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        \n        TransfersApi apiInstance = new TransfersApi();\n        Date from = 2013-10-20T19:20:30+01:00; // Date | \n        Date to = 2013-10-20T19:20:30+01:00; // Date | \n        Integer offset = 56; // Integer | \n        Integer limit = 56; // Integer | \n        String order = order_example; // String | \n        try {\n            list result = apiInstance.transfersGet(from, to, offset, limit, order);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block android",id:"Retrieve Transfers-code-android",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.TransfersApi;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        TransfersApi apiInstance = new TransfersApi();\n        Date from = 2013-10-20T19:20:30+01:00; // Date | \n        Date to = 2013-10-20T19:20:30+01:00; // Date | \n        Integer offset = 56; // Integer | \n        Integer limit = 56; // Integer | \n        String order = order_example; // String | \n        try {\n            list result = apiInstance.transfersGet(from, to, offset, limit, order);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block objc",id:"Retrieve Transfers-code-objc",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'Date *from = 2013-10-20T19:20:30+01:00; //  (optional) (default to 1970-01-01T00:00Z)\nDate *to = 2013-10-20T19:20:30+01:00; //  (optional)\nInteger *offset = 56; //  (optional) (default to 0)\nInteger *limit = 56; //  (optional) (default to 20)\nString *order = order_example; //  (optional) (default to chronological)\n\nTransfersApi *apiInstance = [[TransfersApi alloc] init];\n\n[apiInstance transfersGetWith:from\n    to:to\n    offset:offset\n    limit:limit\n    order:order\n              completionHandler: ^(list output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,a.jsx)("div",{class:"code-block javascript",id:"Retrieve Transfers-code-javascript",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.TransfersApi()\nvar opts = { \n  'from': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'to': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'offset': 56, // {{Integer}} \n  'limit': 56, // {{Integer}} \n  'order': order_example // {{String}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.transfersGet(opts, callback);\n"})})}),(0,a.jsx)("div",{class:"code-block csharp",id:"Retrieve Transfers-code-csharp",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class transfersGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new TransfersApi();\n            var from = 2013-10-20T19:20:30+01:00;  // Date |  (optional)  (default to 1970-01-01T00:00Z)\n            var to = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n            var offset = 56;  // Integer |  (optional)  (default to 0)\n            var limit = 56;  // Integer |  (optional)  (default to 20)\n            var order = order_example;  // String |  (optional)  (default to chronological)\n\n            try\n            {\n                list result = apiInstance.transfersGet(from, to, offset, limit, order);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling TransfersApi.transfersGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block php",id:"Retrieve Transfers-code-php",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiTransfersApi();\n$from = 2013-10-20T19:20:30+01:00; // Date | \n$to = 2013-10-20T19:20:30+01:00; // Date | \n$offset = 56; // Integer | \n$limit = 56; // Integer | \n$order = order_example; // String | \n\ntry {\n    $result = $api_instance->transfersGet($from, $to, $offset, $limit, $order);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TransfersApi->transfersGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,a.jsx)("div",{class:"code-block perl",id:"Retrieve Transfers-code-perl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::TransfersApi;\n\nmy $api_instance = WWW::SwaggerClient::TransfersApi->new();\nmy $from = 2013-10-20T19:20:30+01:00; # Date | \nmy $to = 2013-10-20T19:20:30+01:00; # Date | \nmy $offset = 56; # Integer | \nmy $limit = 56; # Integer | \nmy $order = order_example; # String | \n\neval { \n    my $result = $api_instance->transfersGet(from => $from, to => $to, offset => $offset, limit => $limit, order => $order);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling TransfersApi->transfersGet: $@\\n";\n}\n'})})}),(0,a.jsx)("div",{class:"code-block python",id:"Retrieve Transfers-code-python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.TransfersApi()\nfrom = 2013-10-20T19:20:30+01:00 # Date |  (optional) (default to 1970-01-01T00:00Z)\nto = 2013-10-20T19:20:30+01:00 # Date |  (optional)\noffset = 56 # Integer |  (optional) (default to 0)\nlimit = 56 # Integer |  (optional) (default to 20)\norder = order_example # String |  (optional) (default to chronological)\n\ntry: \n    api_response = api_instance.transfers_get(from=from, to=to, offset=offset, limit=limit, order=order)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling TransfersApi->transfersGet: %s\\n" % e)\n'})})})]}),(0,a.jsx)(e.h3,{id:"parameters",children:"Parameters"}),(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Name"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"from"}),(0,a.jsx)(e.td,{children:"Date (date-time)"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"to"}),(0,a.jsx)(e.td,{children:"Date (date-time)"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"offset"}),(0,a.jsx)(e.td,{children:"Integer"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"limit"}),(0,a.jsx)(e.td,{children:"Integer"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"order"}),(0,a.jsx)(e.td,{children:"String"})]})]})]})]})]}),(0,a.jsx)("div",{})]}),"\n",(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,a.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,a.jsx)("h3",{children:"Delete Transfers ID"}),(0,a.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,a.jsxs)("div",{class:"code",style:{flex:2},children:[(0,a.jsxs)("div",{class:"code-container",children:[(0,a.jsx)("div",{class:"code-header",children:"Delete Transfers ID"}),(0,a.jsxs)("div",{class:"code-dropdown",children:[(0,a.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,a.jsx)("option",{value:"curl",children:"curl"}),(0,a.jsx)("option",{value:"java",children:"java"}),(0,a.jsx)("option",{value:"android",children:"android"}),(0,a.jsx)("option",{value:"objc",children:"objc"}),(0,a.jsx)("option",{value:"javascript",children:"javascript"}),(0,a.jsx)("option",{value:"csharp",children:"csharp"}),(0,a.jsx)("option",{value:"php",children:"php"}),(0,a.jsx)("option",{value:"perl",children:"perl"}),(0,a.jsx)("option",{value:"python",children:"python"})]}),(0,a.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,a.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,a.jsx)("div",{class:"code-block curl active",id:"Delete Transfers ID-code-curl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'curl -X DELETE\\\n-H "Accept: application/json"\\\n"https://api.omise.co/transfers/{id}"\n'})})}),(0,a.jsx)("div",{class:"code-block java",id:"Delete Transfers ID-code-java",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.TransfersApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        \n        TransfersApi apiInstance = new TransfersApi();\n        String id = id_example; // String | \n        try {\n            transfer result = apiInstance.transfersIdDelete(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersIdDelete");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block android",id:"Delete Transfers ID-code-android",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.TransfersApi;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        TransfersApi apiInstance = new TransfersApi();\n        String id = id_example; // String | \n        try {\n            transfer result = apiInstance.transfersIdDelete(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersIdDelete");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block objc",id:"Delete Transfers ID-code-objc",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \n\nTransfersApi *apiInstance = [[TransfersApi alloc] init];\n\n[apiInstance transfersIdDeleteWith:id\n              completionHandler: ^(transfer output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,a.jsx)("div",{class:"code-block javascript",id:"Delete Transfers ID-code-javascript",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.TransfersApi()\nvar id = id_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.transfersIdDelete(id, callback);\n"})})}),(0,a.jsx)("div",{class:"code-block csharp",id:"Delete Transfers ID-code-csharp",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class transfersIdDeleteExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new TransfersApi();\n            var id = id_example;  // String | \n\n            try\n            {\n                transfer result = apiInstance.transfersIdDelete(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling TransfersApi.transfersIdDelete: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block php",id:"Delete Transfers ID-code-php",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiTransfersApi();\n$id = id_example; // String | \n\ntry {\n    $result = $api_instance->transfersIdDelete($id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TransfersApi->transfersIdDelete: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,a.jsx)("div",{class:"code-block perl",id:"Delete Transfers ID-code-perl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::TransfersApi;\n\nmy $api_instance = WWW::SwaggerClient::TransfersApi->new();\nmy $id = id_example; # String | \n\neval { \n    my $result = $api_instance->transfersIdDelete(id => $id);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling TransfersApi->transfersIdDelete: $@\\n";\n}\n'})})}),(0,a.jsx)("div",{class:"code-block python",id:"Delete Transfers ID-code-python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.TransfersApi()\nid = id_example # String | \n\ntry: \n    api_response = api_instance.transfers_id_delete(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling TransfersApi->transfersIdDelete: %s\\n" % e)\n'})})})]}),(0,a.jsx)(e.h3,{id:"parameters-1",children:"Parameters"}),(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Name"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsx)(e.tbody,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"id*"}),(0,a.jsx)(e.td,{children:"String Required"})]})})]})]})]}),(0,a.jsx)("div",{})]}),"\n",(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,a.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,a.jsx)("h3",{children:"Retrieve Transfers ID"}),(0,a.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,a.jsxs)("div",{class:"code",style:{flex:2},children:[(0,a.jsxs)("div",{class:"code-container",children:[(0,a.jsx)("div",{class:"code-header",children:"Retrieve Transfers ID"}),(0,a.jsxs)("div",{class:"code-dropdown",children:[(0,a.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,a.jsx)("option",{value:"curl",children:"curl"}),(0,a.jsx)("option",{value:"java",children:"java"}),(0,a.jsx)("option",{value:"android",children:"android"}),(0,a.jsx)("option",{value:"objc",children:"objc"}),(0,a.jsx)("option",{value:"javascript",children:"javascript"}),(0,a.jsx)("option",{value:"csharp",children:"csharp"}),(0,a.jsx)("option",{value:"php",children:"php"}),(0,a.jsx)("option",{value:"perl",children:"perl"}),(0,a.jsx)("option",{value:"python",children:"python"})]}),(0,a.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,a.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,a.jsx)("div",{class:"code-block curl active",id:"Retrieve Transfers ID-code-curl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/transfers/{id}"\n'})})}),(0,a.jsx)("div",{class:"code-block java",id:"Retrieve Transfers ID-code-java",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.TransfersApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        \n        TransfersApi apiInstance = new TransfersApi();\n        String id = id_example; // String | \n        try {\n            transfer result = apiInstance.transfersIdGet(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersIdGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block android",id:"Retrieve Transfers ID-code-android",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.TransfersApi;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        TransfersApi apiInstance = new TransfersApi();\n        String id = id_example; // String | \n        try {\n            transfer result = apiInstance.transfersIdGet(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersIdGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block objc",id:"Retrieve Transfers ID-code-objc",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \n\nTransfersApi *apiInstance = [[TransfersApi alloc] init];\n\n[apiInstance transfersIdGetWith:id\n              completionHandler: ^(transfer output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,a.jsx)("div",{class:"code-block javascript",id:"Retrieve Transfers ID-code-javascript",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.TransfersApi()\nvar id = id_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.transfersIdGet(id, callback);\n"})})}),(0,a.jsx)("div",{class:"code-block csharp",id:"Retrieve Transfers ID-code-csharp",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class transfersIdGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new TransfersApi();\n            var id = id_example;  // String | \n\n            try\n            {\n                transfer result = apiInstance.transfersIdGet(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling TransfersApi.transfersIdGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block php",id:"Retrieve Transfers ID-code-php",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiTransfersApi();\n$id = id_example; // String | \n\ntry {\n    $result = $api_instance->transfersIdGet($id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TransfersApi->transfersIdGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,a.jsx)("div",{class:"code-block perl",id:"Retrieve Transfers ID-code-perl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::TransfersApi;\n\nmy $api_instance = WWW::SwaggerClient::TransfersApi->new();\nmy $id = id_example; # String | \n\neval { \n    my $result = $api_instance->transfersIdGet(id => $id);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling TransfersApi->transfersIdGet: $@\\n";\n}\n'})})}),(0,a.jsx)("div",{class:"code-block python",id:"Retrieve Transfers ID-code-python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.TransfersApi()\nid = id_example # String | \n\ntry: \n    api_response = api_instance.transfers_id_get(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling TransfersApi->transfersIdGet: %s\\n" % e)\n'})})})]}),(0,a.jsx)(e.h3,{id:"parameters-2",children:"Parameters"}),(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Name"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsx)(e.tbody,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"id*"}),(0,a.jsx)(e.td,{children:"String Required"})]})})]})]})]}),(0,a.jsx)("div",{})]}),"\n",(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,a.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,a.jsx)("h3",{children:"Create Transfers ID Mark As Paid"}),(0,a.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,a.jsxs)("div",{class:"code",style:{flex:2},children:[(0,a.jsxs)("div",{class:"code-container",children:[(0,a.jsx)("div",{class:"code-header",children:"Create Transfers ID Mark As Paid"}),(0,a.jsxs)("div",{class:"code-dropdown",children:[(0,a.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,a.jsx)("option",{value:"curl",children:"curl"}),(0,a.jsx)("option",{value:"java",children:"java"}),(0,a.jsx)("option",{value:"android",children:"android"}),(0,a.jsx)("option",{value:"objc",children:"objc"}),(0,a.jsx)("option",{value:"javascript",children:"javascript"}),(0,a.jsx)("option",{value:"csharp",children:"csharp"}),(0,a.jsx)("option",{value:"php",children:"php"}),(0,a.jsx)("option",{value:"perl",children:"perl"}),(0,a.jsx)("option",{value:"python",children:"python"})]}),(0,a.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,a.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,a.jsx)("div",{class:"code-block curl active",id:"Create Transfers ID Mark As Paid-code-curl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'curl -X POST\\\n-H "Accept: application/json"\\\n"https://api.omise.co/transfers/{id}/mark_as_paid"\n'})})}),(0,a.jsx)("div",{class:"code-block java",id:"Create Transfers ID Mark As Paid-code-java",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.TransfersApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        \n        TransfersApi apiInstance = new TransfersApi();\n        String id = id_example; // String | \n        try {\n            transfer result = apiInstance.transfersIdMarkAsPaidPost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersIdMarkAsPaidPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block android",id:"Create Transfers ID Mark As Paid-code-android",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.TransfersApi;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        TransfersApi apiInstance = new TransfersApi();\n        String id = id_example; // String | \n        try {\n            transfer result = apiInstance.transfersIdMarkAsPaidPost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersIdMarkAsPaidPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block objc",id:"Create Transfers ID Mark As Paid-code-objc",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \n\nTransfersApi *apiInstance = [[TransfersApi alloc] init];\n\n[apiInstance transfersIdMarkAsPaidPostWith:id\n              completionHandler: ^(transfer output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,a.jsx)("div",{class:"code-block javascript",id:"Create Transfers ID Mark As Paid-code-javascript",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.TransfersApi()\nvar id = id_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.transfersIdMarkAsPaidPost(id, callback);\n"})})}),(0,a.jsx)("div",{class:"code-block csharp",id:"Create Transfers ID Mark As Paid-code-csharp",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class transfersIdMarkAsPaidPostExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new TransfersApi();\n            var id = id_example;  // String | \n\n            try\n            {\n                transfer result = apiInstance.transfersIdMarkAsPaidPost(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling TransfersApi.transfersIdMarkAsPaidPost: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block php",id:"Create Transfers ID Mark As Paid-code-php",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiTransfersApi();\n$id = id_example; // String | \n\ntry {\n    $result = $api_instance->transfersIdMarkAsPaidPost($id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TransfersApi->transfersIdMarkAsPaidPost: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,a.jsx)("div",{class:"code-block perl",id:"Create Transfers ID Mark As Paid-code-perl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::TransfersApi;\n\nmy $api_instance = WWW::SwaggerClient::TransfersApi->new();\nmy $id = id_example; # String | \n\neval { \n    my $result = $api_instance->transfersIdMarkAsPaidPost(id => $id);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling TransfersApi->transfersIdMarkAsPaidPost: $@\\n";\n}\n'})})}),(0,a.jsx)("div",{class:"code-block python",id:"Create Transfers ID Mark As Paid-code-python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.TransfersApi()\nid = id_example # String | \n\ntry: \n    api_response = api_instance.transfers_id_mark_as_paid_post(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling TransfersApi->transfersIdMarkAsPaidPost: %s\\n" % e)\n'})})})]}),(0,a.jsx)(e.h3,{id:"parameters-3",children:"Parameters"}),(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Name"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsx)(e.tbody,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"id*"}),(0,a.jsx)(e.td,{children:"String Required"})]})})]})]})]}),(0,a.jsx)("div",{})]}),"\n",(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,a.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,a.jsx)("h3",{children:"Create Transfers ID Mark As Sent"}),(0,a.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,a.jsxs)("div",{class:"code",style:{flex:2},children:[(0,a.jsxs)("div",{class:"code-container",children:[(0,a.jsx)("div",{class:"code-header",children:"Create Transfers ID Mark As Sent"}),(0,a.jsxs)("div",{class:"code-dropdown",children:[(0,a.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,a.jsx)("option",{value:"curl",children:"curl"}),(0,a.jsx)("option",{value:"java",children:"java"}),(0,a.jsx)("option",{value:"android",children:"android"}),(0,a.jsx)("option",{value:"objc",children:"objc"}),(0,a.jsx)("option",{value:"javascript",children:"javascript"}),(0,a.jsx)("option",{value:"csharp",children:"csharp"}),(0,a.jsx)("option",{value:"php",children:"php"}),(0,a.jsx)("option",{value:"perl",children:"perl"}),(0,a.jsx)("option",{value:"python",children:"python"})]}),(0,a.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,a.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,a.jsx)("div",{class:"code-block curl active",id:"Create Transfers ID Mark As Sent-code-curl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'curl -X POST\\\n-H "Accept: application/json"\\\n"https://api.omise.co/transfers/{id}/mark_as_sent"\n'})})}),(0,a.jsx)("div",{class:"code-block java",id:"Create Transfers ID Mark As Sent-code-java",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.TransfersApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        \n        TransfersApi apiInstance = new TransfersApi();\n        String id = id_example; // String | \n        try {\n            transfer result = apiInstance.transfersIdMarkAsSentPost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersIdMarkAsSentPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block android",id:"Create Transfers ID Mark As Sent-code-android",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.TransfersApi;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        TransfersApi apiInstance = new TransfersApi();\n        String id = id_example; // String | \n        try {\n            transfer result = apiInstance.transfersIdMarkAsSentPost(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersIdMarkAsSentPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block objc",id:"Create Transfers ID Mark As Sent-code-objc",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \n\nTransfersApi *apiInstance = [[TransfersApi alloc] init];\n\n[apiInstance transfersIdMarkAsSentPostWith:id\n              completionHandler: ^(transfer output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,a.jsx)("div",{class:"code-block javascript",id:"Create Transfers ID Mark As Sent-code-javascript",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.TransfersApi()\nvar id = id_example; // {{String}} \n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.transfersIdMarkAsSentPost(id, callback);\n"})})}),(0,a.jsx)("div",{class:"code-block csharp",id:"Create Transfers ID Mark As Sent-code-csharp",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class transfersIdMarkAsSentPostExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new TransfersApi();\n            var id = id_example;  // String | \n\n            try\n            {\n                transfer result = apiInstance.transfersIdMarkAsSentPost(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling TransfersApi.transfersIdMarkAsSentPost: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block php",id:"Create Transfers ID Mark As Sent-code-php",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiTransfersApi();\n$id = id_example; // String | \n\ntry {\n    $result = $api_instance->transfersIdMarkAsSentPost($id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TransfersApi->transfersIdMarkAsSentPost: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,a.jsx)("div",{class:"code-block perl",id:"Create Transfers ID Mark As Sent-code-perl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::TransfersApi;\n\nmy $api_instance = WWW::SwaggerClient::TransfersApi->new();\nmy $id = id_example; # String | \n\neval { \n    my $result = $api_instance->transfersIdMarkAsSentPost(id => $id);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling TransfersApi->transfersIdMarkAsSentPost: $@\\n";\n}\n'})})}),(0,a.jsx)("div",{class:"code-block python",id:"Create Transfers ID Mark As Sent-code-python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.TransfersApi()\nid = id_example # String | \n\ntry: \n    api_response = api_instance.transfers_id_mark_as_sent_post(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling TransfersApi->transfersIdMarkAsSentPost: %s\\n" % e)\n'})})})]}),(0,a.jsx)(e.h3,{id:"parameters-4",children:"Parameters"}),(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Name"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsx)(e.tbody,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"id*"}),(0,a.jsx)(e.td,{children:"String Required"})]})})]})]})]}),(0,a.jsx)("div",{})]}),"\n",(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,a.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,a.jsx)("h3",{children:"Update Transfers ID"}),(0,a.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,a.jsxs)("div",{class:"code",style:{flex:2},children:[(0,a.jsxs)("div",{class:"code-container",children:[(0,a.jsx)("div",{class:"code-header",children:"Update Transfers ID"}),(0,a.jsxs)("div",{class:"code-dropdown",children:[(0,a.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,a.jsx)("option",{value:"curl",children:"curl"}),(0,a.jsx)("option",{value:"java",children:"java"}),(0,a.jsx)("option",{value:"android",children:"android"}),(0,a.jsx)("option",{value:"objc",children:"objc"}),(0,a.jsx)("option",{value:"javascript",children:"javascript"}),(0,a.jsx)("option",{value:"csharp",children:"csharp"}),(0,a.jsx)("option",{value:"php",children:"php"}),(0,a.jsx)("option",{value:"perl",children:"perl"}),(0,a.jsx)("option",{value:"python",children:"python"})]}),(0,a.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,a.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,a.jsx)("div",{class:"code-block curl active",id:"Update Transfers ID-code-curl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'curl -X PATCH\\\n-H "Accept: application/json"\\\n-H "Content-Type: application/x-www-form-urlencoded"\\\n"https://api.omise.co/transfers/{id}"\n'})})}),(0,a.jsx)("div",{class:"code-block java",id:"Update Transfers ID-code-java",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.TransfersApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        \n        TransfersApi apiInstance = new TransfersApi();\n        String id = id_example; // String | \n        Boolean success = true; // Boolean | \n        String failureCode = failureCode_example; // String | \n        String failureMessage = failureMessage_example; // String | \n        try {\n            transfer result = apiInstance.transfersIdPatch(id, success, failureCode, failureMessage);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersIdPatch");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block android",id:"Update Transfers ID-code-android",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.TransfersApi;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        TransfersApi apiInstance = new TransfersApi();\n        String id = id_example; // String | \n        Boolean success = true; // Boolean | \n        String failureCode = failureCode_example; // String | \n        String failureMessage = failureMessage_example; // String | \n        try {\n            transfer result = apiInstance.transfersIdPatch(id, success, failureCode, failureMessage);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersIdPatch");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block objc",id:"Update Transfers ID-code-objc",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'String *id = id_example; // \nBoolean *success = true; //  (optional)\nString *failureCode = failureCode_example; //  (optional)\nString *failureMessage = failureMessage_example; //  (optional)\n\nTransfersApi *apiInstance = [[TransfersApi alloc] init];\n\n[apiInstance transfersIdPatchWith:id\n    success:success\n    failureCode:failureCode\n    failureMessage:failureMessage\n              completionHandler: ^(transfer output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,a.jsx)("div",{class:"code-block javascript",id:"Update Transfers ID-code-javascript",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.TransfersApi()\nvar id = id_example; // {{String}} \nvar opts = { \n  'success': true // {{Boolean}} \n  'failureCode': failureCode_example // {{String}} \n  'failureMessage': failureMessage_example // {{String}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.transfersIdPatch(id, opts, callback);\n"})})}),(0,a.jsx)("div",{class:"code-block csharp",id:"Update Transfers ID-code-csharp",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class transfersIdPatchExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new TransfersApi();\n            var id = id_example;  // String | \n            var success = true;  // Boolean |  (optional) \n            var failureCode = failureCode_example;  // String |  (optional) \n            var failureMessage = failureMessage_example;  // String |  (optional) \n\n            try\n            {\n                transfer result = apiInstance.transfersIdPatch(id, success, failureCode, failureMessage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling TransfersApi.transfersIdPatch: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block php",id:"Update Transfers ID-code-php",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiTransfersApi();\n$id = id_example; // String | \n$success = true; // Boolean | \n$failureCode = failureCode_example; // String | \n$failureMessage = failureMessage_example; // String | \n\ntry {\n    $result = $api_instance->transfersIdPatch($id, $success, $failureCode, $failureMessage);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TransfersApi->transfersIdPatch: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,a.jsx)("div",{class:"code-block perl",id:"Update Transfers ID-code-perl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::TransfersApi;\n\nmy $api_instance = WWW::SwaggerClient::TransfersApi->new();\nmy $id = id_example; # String | \nmy $success = true; # Boolean | \nmy $failureCode = failureCode_example; # String | \nmy $failureMessage = failureMessage_example; # String | \n\neval { \n    my $result = $api_instance->transfersIdPatch(id => $id, success => $success, failureCode => $failureCode, failureMessage => $failureMessage);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling TransfersApi->transfersIdPatch: $@\\n";\n}\n'})})}),(0,a.jsx)("div",{class:"code-block python",id:"Update Transfers ID-code-python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.TransfersApi()\nid = id_example # String | \nsuccess = true # Boolean |  (optional)\nfailureCode = failureCode_example # String |  (optional)\nfailureMessage = failureMessage_example # String |  (optional)\n\ntry: \n    api_response = api_instance.transfers_id_patch(id, success=success, failureCode=failureCode, failureMessage=failureMessage)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling TransfersApi->transfersIdPatch: %s\\n" % e)\n'})})})]}),(0,a.jsx)(e.h3,{id:"parameters-5",children:"Parameters"}),(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Name"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsx)(e.tbody,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"id*"}),(0,a.jsx)(e.td,{children:"String Required"})]})})]}),(0,a.jsx)(e.h3,{id:"parameters-6",children:"Parameters"}),(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Name"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"success"}),(0,a.jsx)(e.td,{children:"Boolean"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"failure_code"}),(0,a.jsx)(e.td,{children:"String"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"failure_message"}),(0,a.jsx)(e.td,{children:"String"})]})]})]})]})]}),(0,a.jsx)("div",{})]}),"\n",(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,a.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,a.jsx)("h3",{children:"Create Transfers"}),(0,a.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,a.jsxs)("div",{class:"code",style:{flex:2},children:[(0,a.jsxs)("div",{class:"code-container",children:[(0,a.jsx)("div",{class:"code-header",children:"Create Transfers"}),(0,a.jsxs)("div",{class:"code-dropdown",children:[(0,a.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,a.jsx)("option",{value:"curl",children:"curl"}),(0,a.jsx)("option",{value:"java",children:"java"}),(0,a.jsx)("option",{value:"android",children:"android"}),(0,a.jsx)("option",{value:"objc",children:"objc"}),(0,a.jsx)("option",{value:"javascript",children:"javascript"}),(0,a.jsx)("option",{value:"csharp",children:"csharp"}),(0,a.jsx)("option",{value:"php",children:"php"}),(0,a.jsx)("option",{value:"perl",children:"perl"}),(0,a.jsx)("option",{value:"python",children:"python"})]}),(0,a.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,a.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,a.jsx)("div",{class:"code-block curl active",id:"Create Transfers-code-curl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'curl -X POST\\\n-H "Accept: application/json"\\\n-H "Content-Type: application/x-www-form-urlencoded"\\\n"https://api.omise.co/transfers"\n'})})}),(0,a.jsx)("div",{class:"code-block java",id:"Create Transfers-code-java",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.TransfersApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        \n        TransfersApi apiInstance = new TransfersApi();\n        Integer amount = 56; // Integer | \n        String recipient = recipient_example; // String | \n        Boolean failFast = true; // Boolean | \n        Object metadata = ; // Object | \n        Boolean splitTransfer = true; // Boolean | \n        String idempKey = idempKey_example; // String | \n        try {\n            transfer result = apiInstance.transfersPost(amount, recipient, failFast, metadata, splitTransfer, idempKey);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block android",id:"Create Transfers-code-android",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.TransfersApi;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        TransfersApi apiInstance = new TransfersApi();\n        Integer amount = 56; // Integer | \n        String recipient = recipient_example; // String | \n        Boolean failFast = true; // Boolean | \n        Object metadata = ; // Object | \n        Boolean splitTransfer = true; // Boolean | \n        String idempKey = idempKey_example; // String | \n        try {\n            transfer result = apiInstance.transfersPost(amount, recipient, failFast, metadata, splitTransfer, idempKey);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersPost");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block objc",id:"Create Transfers-code-objc",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'Integer *amount = 56; //  (optional)\nString *recipient = recipient_example; //  (optional)\nBoolean *failFast = true; //  (optional)\nObject *metadata = ; //  (optional)\nBoolean *splitTransfer = true; //  (optional)\nString *idempKey = idempKey_example; //  (optional)\n\nTransfersApi *apiInstance = [[TransfersApi alloc] init];\n\n[apiInstance transfersPostWith:amount\n    recipient:recipient\n    failFast:failFast\n    metadata:metadata\n    splitTransfer:splitTransfer\n    idempKey:idempKey\n              completionHandler: ^(transfer output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,a.jsx)("div",{class:"code-block javascript",id:"Create Transfers-code-javascript",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.TransfersApi()\nvar opts = { \n  'amount': 56 // {{Integer}} \n  'recipient': recipient_example // {{String}} \n  'failFast': true // {{Boolean}} \n  'metadata':  // {{Object}} \n  'splitTransfer': true // {{Boolean}} \n  'idempKey': idempKey_example // {{String}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.transfersPost(opts, callback);\n"})})}),(0,a.jsx)("div",{class:"code-block csharp",id:"Create Transfers-code-csharp",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class transfersPostExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new TransfersApi();\n            var amount = 56;  // Integer |  (optional) \n            var recipient = recipient_example;  // String |  (optional) \n            var failFast = true;  // Boolean |  (optional) \n            var metadata = new Object(); // Object |  (optional) \n            var splitTransfer = true;  // Boolean |  (optional) \n            var idempKey = idempKey_example;  // String |  (optional) \n\n            try\n            {\n                transfer result = apiInstance.transfersPost(amount, recipient, failFast, metadata, splitTransfer, idempKey);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling TransfersApi.transfersPost: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block php",id:"Create Transfers-code-php",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiTransfersApi();\n$amount = 56; // Integer | \n$recipient = recipient_example; // String | \n$failFast = true; // Boolean | \n$metadata = ; // Object | \n$splitTransfer = true; // Boolean | \n$idempKey = idempKey_example; // String | \n\ntry {\n    $result = $api_instance->transfersPost($amount, $recipient, $failFast, $metadata, $splitTransfer, $idempKey);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TransfersApi->transfersPost: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,a.jsx)("div",{class:"code-block perl",id:"Create Transfers-code-perl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::TransfersApi;\n\nmy $api_instance = WWW::SwaggerClient::TransfersApi->new();\nmy $amount = 56; # Integer | \nmy $recipient = recipient_example; # String | \nmy $failFast = true; # Boolean | \nmy $metadata = ; # Object | \nmy $splitTransfer = true; # Boolean | \nmy $idempKey = idempKey_example; # String | \n\neval { \n    my $result = $api_instance->transfersPost(amount => $amount, recipient => $recipient, failFast => $failFast, metadata => $metadata, splitTransfer => $splitTransfer, idempKey => $idempKey);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling TransfersApi->transfersPost: $@\\n";\n}\n'})})}),(0,a.jsx)("div",{class:"code-block python",id:"Create Transfers-code-python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.TransfersApi()\namount = 56 # Integer |  (optional)\nrecipient = recipient_example # String |  (optional)\nfailFast = true # Boolean |  (optional)\nmetadata =  # Object |  (optional)\nsplitTransfer = true # Boolean |  (optional)\nidempKey = idempKey_example # String |  (optional)\n\ntry: \n    api_response = api_instance.transfers_post(amount=amount, recipient=recipient, failFast=failFast, metadata=metadata, splitTransfer=splitTransfer, idempKey=idempKey)\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling TransfersApi->transfersPost: %s\\n" % e)\n'})})})]}),(0,a.jsx)(e.h3,{id:"parameters-7",children:"Parameters"}),(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Name"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"amount"}),(0,a.jsx)(e.td,{children:"Integer"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"recipient"}),(0,a.jsx)(e.td,{children:"String"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"fail_fast"}),(0,a.jsx)(e.td,{children:"Boolean"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"metadata"}),(0,a.jsx)(e.td,{children:"Object"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"split_transfer"}),(0,a.jsx)(e.td,{children:"Boolean"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"idemp_key"}),(0,a.jsx)(e.td,{children:"String"})]})]})]})]})]}),(0,a.jsx)("div",{})]}),"\n",(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{style:{display:"flex",justifyContent:"space-between"},children:[(0,a.jsxs)("div",{class:"sub-heading",style:{flex:2},children:[(0,a.jsx)("h3",{children:"Retrieve Transfers Search"}),(0,a.jsx)("p",{children:"Welcome to the Omise Docs! These pages should contain everything you need to know to get paid using the Omise API. This is developer-oriented documentation.If you are not a developer, you can check our comprehensive support articles for non-technical explanations of various concepts or go straight to the plugin overview."})]}),(0,a.jsxs)("div",{class:"code",style:{flex:2},children:[(0,a.jsxs)("div",{class:"code-container",children:[(0,a.jsx)("div",{class:"code-header",children:"Retrieve Transfers Search"}),(0,a.jsxs)("div",{class:"code-dropdown",children:[(0,a.jsxs)("select",{onChange:n=>handleLanguageChange(n.target),children:[(0,a.jsx)("option",{value:"curl",children:"curl"}),(0,a.jsx)("option",{value:"java",children:"java"}),(0,a.jsx)("option",{value:"android",children:"android"}),(0,a.jsx)("option",{value:"objc",children:"objc"}),(0,a.jsx)("option",{value:"javascript",children:"javascript"}),(0,a.jsx)("option",{value:"csharp",children:"csharp"}),(0,a.jsx)("option",{value:"php",children:"php"}),(0,a.jsx)("option",{value:"perl",children:"perl"}),(0,a.jsx)("option",{value:"python",children:"python"})]}),(0,a.jsx)("button",{className:"copy-btn",onClick:n=>copyActiveCode(n.currentTarget),title:"Copy to clipboard",children:(0,a.jsxs)("svg",{"aria-hidden":"true",width:"15",height:"15",viewBox:"0 0 12 12",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4 6.375c0-.345.28-.625.625-.625h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 6.375Zm0 2.25C4 8.28 4.28 8 4.625 8h2.75a.625.625 0 1 1 0 1.25h-2.75A.625.625 0 0 1 4 8.625Z"}),(0,a.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8.437 1.5A2 2 0 0 0 6.5 0h-1a2 2 0 0 0-1.937 1.5H3a2 2 0 0 0-2 2V10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-.563ZM4.9 3.1h2.2V2a.6.6 0 0 0-.6-.6h-1a.6.6 0 0 0-.6.6v1.1ZM8 4.5H4a.5.5 0 0 1-.5-.5V2.9H3a.6.6 0 0 0-.6.6V10a.6.6 0 0 0 .6.6h6a.6.6 0 0 0 .6-.6V3.5a.6.6 0 0 0-.6-.6h-.5V4a.5.5 0 0 1-.5.5Z"})]})})]}),(0,a.jsx)("div",{class:"code-block curl active",id:"Retrieve Transfers Search-code-curl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'curl -X GET\\\n-H "Accept: application/json"\\\n"https://api.omise.co/transfers/search?scope=&query=&filters[amount]=&filters[created]=&filters[currency]=&filters[deleted]=&filters[fee]=&filters[paid]=&filters[paid_at]=&filters[sent]=&filters[sent_at]="\n'})})}),(0,a.jsx)("div",{class:"code-block java",id:"Retrieve Transfers Search-code-java",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.TransfersApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        \n        TransfersApi apiInstance = new TransfersApi();\n        String scope = scope_example; // String | \n        String query = query_example; // String | \n        Integer filters[amount] = 56; // Integer | \n        Date filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n        String filters[currency] = filters[currency]_example; // String | \n        Boolean filters[deleted] = true; // Boolean | \n        Integer filters[fee] = 56; // Integer | \n        Boolean filters[paid] = true; // Boolean | \n        Date filters[paidAt] = 2013-10-20T19:20:30+01:00; // Date | \n        Boolean filters[sent] = true; // Boolean | \n        Date filters[sentAt] = 2013-10-20T19:20:30+01:00; // Date | \n        try {\n            transfer result = apiInstance.transfersSearchGet(scope, query, filters[amount], filters[created], filters[currency], filters[deleted], filters[fee], filters[paid], filters[paidAt], filters[sent], filters[sentAt]);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersSearchGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block android",id:"Retrieve Transfers Search-code-android",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import io.swagger.client.api.TransfersApi;\n\npublic class TransfersApiExample {\n\n    public static void main(String[] args) {\n        TransfersApi apiInstance = new TransfersApi();\n        String scope = scope_example; // String | \n        String query = query_example; // String | \n        Integer filters[amount] = 56; // Integer | \n        Date filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n        String filters[currency] = filters[currency]_example; // String | \n        Boolean filters[deleted] = true; // Boolean | \n        Integer filters[fee] = 56; // Integer | \n        Boolean filters[paid] = true; // Boolean | \n        Date filters[paidAt] = 2013-10-20T19:20:30+01:00; // Date | \n        Boolean filters[sent] = true; // Boolean | \n        Date filters[sentAt] = 2013-10-20T19:20:30+01:00; // Date | \n        try {\n            transfer result = apiInstance.transfersSearchGet(scope, query, filters[amount], filters[created], filters[currency], filters[deleted], filters[fee], filters[paid], filters[paidAt], filters[sent], filters[sentAt]);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling TransfersApi#transfersSearchGet");\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block objc",id:"Retrieve Transfers Search-code-objc",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'String *scope = scope_example; //  (optional) (default to transfer)\nString *query = query_example; //  (optional)\nInteger *filters[amount] = 56; //  (optional)\nDate *filters[created] = 2013-10-20T19:20:30+01:00; //  (optional)\nString *filters[currency] = filters[currency]_example; //  (optional)\nBoolean *filters[deleted] = true; //  (optional)\nInteger *filters[fee] = 56; //  (optional)\nBoolean *filters[paid] = true; //  (optional)\nDate *filters[paidAt] = 2013-10-20T19:20:30+01:00; //  (optional)\nBoolean *filters[sent] = true; //  (optional)\nDate *filters[sentAt] = 2013-10-20T19:20:30+01:00; //  (optional)\n\nTransfersApi *apiInstance = [[TransfersApi alloc] init];\n\n[apiInstance transfersSearchGetWith:scope\n    query:query\n    filters[amount]:filters[amount]\n    filters[created]:filters[created]\n    filters[currency]:filters[currency]\n    filters[deleted]:filters[deleted]\n    filters[fee]:filters[fee]\n    filters[paid]:filters[paid]\n    filters[paidAt]:filters[paidAt]\n    filters[sent]:filters[sent]\n    filters[sentAt]:filters[sentAt]\n              completionHandler: ^(transfer output, NSError* error) {\n                            if (output) {\n                                NSLog(@"%@", output);\n                            }\n                            if (error) {\n                                NSLog(@"Error: %@", error);\n                            }\n                        }];\n'})})}),(0,a.jsx)("div",{class:"code-block javascript",id:"Retrieve Transfers Search-code-javascript",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"var OmiseApi = require('omise_api');\n\nvar api = new OmiseApi.TransfersApi()\nvar opts = { \n  'scope': scope_example, // {{String}} \n  'query': query_example, // {{String}} \n  'filters[amount]': 56, // {{Integer}} \n  'filters[created]': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'filters[currency]': filters[currency]_example, // {{String}} \n  'filters[deleted]': true, // {{Boolean}} \n  'filters[fee]': 56, // {{Integer}} \n  'filters[paid]': true, // {{Boolean}} \n  'filters[paidAt]': 2013-10-20T19:20:30+01:00, // {{Date}} \n  'filters[sent]': true, // {{Boolean}} \n  'filters[sentAt]': 2013-10-20T19:20:30+01:00 // {{Date}} \n};\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.transfersSearchGet(opts, callback);\n"})})}),(0,a.jsx)("div",{class:"code-block csharp",id:"Retrieve Transfers Search-code-csharp",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'using System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class transfersSearchGetExample\n    {\n        public void main()\n        {\n\n            var apiInstance = new TransfersApi();\n            var scope = scope_example;  // String |  (optional)  (default to transfer)\n            var query = query_example;  // String |  (optional) \n            var filters[amount] = 56;  // Integer |  (optional) \n            var filters[created] = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n            var filters[currency] = filters[currency]_example;  // String |  (optional) \n            var filters[deleted] = true;  // Boolean |  (optional) \n            var filters[fee] = 56;  // Integer |  (optional) \n            var filters[paid] = true;  // Boolean |  (optional) \n            var filters[paidAt] = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n            var filters[sent] = true;  // Boolean |  (optional) \n            var filters[sentAt] = 2013-10-20T19:20:30+01:00;  // Date |  (optional) \n\n            try\n            {\n                transfer result = apiInstance.transfersSearchGet(scope, query, filters[amount], filters[created], filters[currency], filters[deleted], filters[fee], filters[paid], filters[paidAt], filters[sent], filters[sentAt]);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print("Exception when calling TransfersApi.transfersSearchGet: " + e.Message );\n            }\n        }\n    }\n}\n'})})}),(0,a.jsx)("div",{class:"code-block php",id:"Retrieve Transfers Search-code-php",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$api_instance = new Swagger\\Client\\ApiTransfersApi();\n$scope = scope_example; // String | \n$query = query_example; // String | \n$filters[amount] = 56; // Integer | \n$filters[created] = 2013-10-20T19:20:30+01:00; // Date | \n$filters[currency] = filters[currency]_example; // String | \n$filters[deleted] = true; // Boolean | \n$filters[fee] = 56; // Integer | \n$filters[paid] = true; // Boolean | \n$filters[paidAt] = 2013-10-20T19:20:30+01:00; // Date | \n$filters[sent] = true; // Boolean | \n$filters[sentAt] = 2013-10-20T19:20:30+01:00; // Date | \n\ntry {\n    $result = $api_instance->transfersSearchGet($scope, $query, $filters[amount], $filters[created], $filters[currency], $filters[deleted], $filters[fee], $filters[paid], $filters[paidAt], $filters[sent], $filters[sentAt]);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TransfersApi->transfersSearchGet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n"})})}),(0,a.jsx)("div",{class:"code-block perl",id:"Retrieve Transfers Search-code-perl",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'use Data::Dumper;\nuse WWW::SwaggerClient::Configuration;\nuse WWW::SwaggerClient::TransfersApi;\n\nmy $api_instance = WWW::SwaggerClient::TransfersApi->new();\nmy $scope = scope_example; # String | \nmy $query = query_example; # String | \nmy $filters[amount] = 56; # Integer | \nmy $filters[created] = 2013-10-20T19:20:30+01:00; # Date | \nmy $filters[currency] = filters[currency]_example; # String | \nmy $filters[deleted] = true; # Boolean | \nmy $filters[fee] = 56; # Integer | \nmy $filters[paid] = true; # Boolean | \nmy $filters[paidAt] = 2013-10-20T19:20:30+01:00; # Date | \nmy $filters[sent] = true; # Boolean | \nmy $filters[sentAt] = 2013-10-20T19:20:30+01:00; # Date | \n\neval { \n    my $result = $api_instance->transfersSearchGet(scope => $scope, query => $query, filters[amount] => $filters[amount], filters[created] => $filters[created], filters[currency] => $filters[currency], filters[deleted] => $filters[deleted], filters[fee] => $filters[fee], filters[paid] => $filters[paid], filters[paidAt] => $filters[paidAt], filters[sent] => $filters[sent], filters[sentAt] => $filters[sentAt]);\n    print Dumper($result);\n};\nif ($@) {\n    warn "Exception when calling TransfersApi->transfersSearchGet: $@\\n";\n}\n'})})}),(0,a.jsx)("div",{class:"code-block python",id:"Retrieve Transfers Search-code-python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'from __future__ import print_statement\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = swagger_client.TransfersApi()\nscope = scope_example # String |  (optional) (default to transfer)\nquery = query_example # String |  (optional)\nfilters[amount] = 56 # Integer |  (optional)\nfilters[created] = 2013-10-20T19:20:30+01:00 # Date |  (optional)\nfilters[currency] = filters[currency]_example # String |  (optional)\nfilters[deleted] = true # Boolean |  (optional)\nfilters[fee] = 56 # Integer |  (optional)\nfilters[paid] = true # Boolean |  (optional)\nfilters[paidAt] = 2013-10-20T19:20:30+01:00 # Date |  (optional)\nfilters[sent] = true # Boolean |  (optional)\nfilters[sentAt] = 2013-10-20T19:20:30+01:00 # Date |  (optional)\n\ntry: \n    api_response = api_instance.transfers_search_get(scope=scope, query=query, filters[amount]=filters[amount], filters[created]=filters[created], filters[currency]=filters[currency], filters[deleted]=filters[deleted], filters[fee]=filters[fee], filters[paid]=filters[paid], filters[paidAt]=filters[paidAt], filters[sent]=filters[sent], filters[sentAt]=filters[sentAt])\n    pprint(api_response)\nexcept ApiException as e:\n    print("Exception when calling TransfersApi->transfersSearchGet: %s\\n" % e)\n'})})})]}),(0,a.jsx)(e.h3,{id:"parameters-8",children:"Parameters"}),(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Name"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"scope"}),(0,a.jsx)(e.td,{children:"String"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"query"}),(0,a.jsx)(e.td,{children:"String"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"filters[amount]"}),(0,a.jsx)(e.td,{children:"Integer"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"filters[created]"}),(0,a.jsx)(e.td,{children:"Date (date-time)"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"filters[currency]"}),(0,a.jsx)(e.td,{children:"String"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"filters[deleted]"}),(0,a.jsx)(e.td,{children:"Boolean"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"filters[fee]"}),(0,a.jsx)(e.td,{children:"Integer"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"filters[paid]"}),(0,a.jsx)(e.td,{children:"Boolean"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"filters[paid_at]"}),(0,a.jsx)(e.td,{children:"Date (date-time)"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"filters[sent]"}),(0,a.jsx)(e.td,{children:"Boolean"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"filters[sent_at]"}),(0,a.jsx)(e.td,{children:"Date (date-time)"})]})]})]})]})]}),(0,a.jsxs)("div",{children:[(0,a.jsx)(e.h3,{id:"responses",children:"Responses"}),(0,a.jsx)(e.h3,{id:"status-200",children:"Status: 200"}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:' {\n  "object": {\n    "pattern": "transfer",\n    "type": "string",\n    "default": "transfer"\n  },\n  "id": {\n    "pattern": "trsf_[0-9a-z]+",\n    "type": "string"\n  },\n  "livemode": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "location": {\n    "type": "string",\n    "nullable": true\n  },\n  "deleted": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "fail_fast": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "paid": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "sent": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "sendable": {\n    "type": "boolean",\n    "enum": [\n      true,\n      false\n    ]\n  },\n  "currency": {\n    "type": "string",\n    "format": "currency"\n  },\n  "amount": {\n    "type": "integer"\n  },\n  "fee": {\n    "type": "integer"\n  },\n  "metadata": {\n    "type": "object",\n    "default": {}\n  },\n  "recipient": {\n    "oneOf": [\n      {\n        "type": "object",\n        "properties": {\n          "object": {\n            "pattern": "recipient",\n            "type": "string",\n            "default": "recipient"\n          },\n          "id": {\n            "type": "string"\n          },\n          "livemode": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "location": {\n            "type": "string"\n          },\n          "deleted": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "bank_account": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "bank_account",\n                "type": "string",\n                "default": "bank_account"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "last_digits": {\n                "pattern": "^[0-9]{4}$",\n                "type": "string"\n              },\n              "account_number": {\n                "type": "string"\n              },\n              "name": {\n                "type": "string"\n              },\n              "type": {\n                "type": "string",\n                "enum": [\n                  "normal",\n                  "current"\n                ]\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "brand": {\n                "type": "string"\n              },\n              "bank_code": {\n                "type": "string"\n              },\n              "branch_code": {\n                "type": "string"\n              }\n            }\n          },\n          "active": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "default": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "verified": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "description": {\n            "type": "string",\n            "nullable": true\n          },\n          "email": {\n            "type": "string"\n          },\n          "failure_code": {\n            "type": "string",\n            "nullable": true,\n            "enum": [\n              "name_mismatch",\n              "account_not_found",\n              "bank_not_found"\n            ]\n          },\n          "name": {\n            "type": "string"\n          },\n          "tax_id": {\n            "type": "string",\n            "nullable": true\n          },\n          "type": {\n            "type": "string",\n            "enum": [\n              "individual",\n              "corporation"\n            ]\n          },\n          "created_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "schedule": {\n            "oneOf": [\n              {\n                "type": "object",\n                "properties": {\n                  "object": {\n                    "pattern": "schedule",\n                    "type": "string",\n                    "default": "schedule"\n                  },\n                  "id": {\n                    "pattern": "schd_[0-9a-z]+",\n                    "type": "string"\n                  },\n                  "deleted": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "livemode": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "location": {\n                    "type": "string"\n                  },\n                  "every": {\n                    "type": "integer"\n                  },\n                  "occurrences": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "list",\n                        "type": "string",\n                        "default": "list"\n                      },\n                      "data": {\n                        "type": "array",\n                        "items": {}\n                      },\n                      "limit": {\n                        "type": "integer"\n                      },\n                      "offset": {\n                        "type": "integer"\n                      },\n                      "total": {\n                        "type": "integer"\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "order": {\n                        "type": "string",\n                        "enum": [\n                          "chronological",\n                          "reverse_chronological"\n                        ]\n                      },\n                      "from": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "to": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  "on": {\n                    "type": "object",\n                    "properties": {\n                      "days_of_month": {\n                        "type": "array",\n                        "items": {}\n                      },\n                      "weekday_of_month": {\n                        "type": "string"\n                      },\n                      "weekdays": {\n                        "type": "array",\n                        "items": {\n                          "type": "string"\n                        },\n                        "enum": [\n                          "sunday",\n                          "monday",\n                          "tuesday",\n                          "wednesday",\n                          "thursday",\n                          "friday",\n                          "saturday"\n                        ]\n                      }\n                    }\n                  },\n                  "in_words": {\n                    "type": "string"\n                  },\n                  "period": {\n                    "type": "string",\n                    "enum": [\n                      "day",\n                      "week",\n                      "month"\n                    ]\n                  },\n                  "status": {\n                    "type": "string",\n                    "enum": [\n                      "running",\n                      "active",\n                      "expiring",\n                      "expired",\n                      "deleted",\n                      "suspended"\n                    ]\n                  },\n                  "active": {\n                    "type": "boolean",\n                    "enum": [\n                      true,\n                      false\n                    ]\n                  },\n                  "state": {\n                    "type": "string",\n                    "enum": [\n                      "Active",\n                      "Pause"\n                    ]\n                  },\n                  "charge": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "charge_schedule",\n                        "type": "string",\n                        "default": "charge_schedule"\n                      },\n                      "id": {\n                        "pattern": "rchg_[0-9a-z]+",\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "currency": {\n                        "type": "string",\n                        "format": "currency"\n                      },\n                      "amount": {\n                        "type": "integer"\n                      },\n                      "default_card": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "card": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "card",\n                                "type": "string",\n                                "default": "card"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "street1": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "street2": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "city": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "state": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "phone_number": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "postal_code": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "country": {\n                                "pattern": "^[a-z]{0,2}$",\n                                "type": "string"\n                              },\n                              "financing": {\n                                "type": "string"\n                              },\n                              "bank": {\n                                "type": "string"\n                              },\n                              "brand": {\n                                "type": "string"\n                              },\n                              "fingerprint": {\n                                "type": "string"\n                              },\n                              "first_digits": {\n                                "pattern": "^[0-9]{6}$",\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "last_digits": {\n                                "pattern": "^[0-9]{4}$",\n                                "type": "string"\n                              },\n                              "name": {\n                                "type": "string"\n                              },\n                              "expiration_month": {\n                                "type": "integer"\n                              },\n                              "expiration_year": {\n                                "type": "integer"\n                              },\n                              "security_code_check": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "tokenization_method": {\n                                "type": "string"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "customer": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "customer",\n                                "type": "string",\n                                "default": "customer"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "metadata": {\n                                "type": "object",\n                                "default": {}\n                              },\n                              "cards": {\n                                "type": "object",\n                                "properties": {\n                                  "object": {\n                                    "pattern": "list",\n                                    "type": "string",\n                                    "default": "list"\n                                  },\n                                  "data": {\n                                    "type": "array",\n                                    "items": {}\n                                  },\n                                  "limit": {\n                                    "type": "integer"\n                                  },\n                                  "offset": {\n                                    "type": "integer"\n                                  },\n                                  "total": {\n                                    "type": "integer"\n                                  },\n                                  "location": {\n                                    "type": "string"\n                                  },\n                                  "order": {\n                                    "type": "string",\n                                    "enum": [\n                                      "chronological",\n                                      "reverse_chronological"\n                                    ]\n                                  },\n                                  "from": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  },\n                                  "to": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  }\n                                }\n                              },\n                              "default_card": {\n                                "oneOf": [\n                                  {\n                                    "type": "object",\n                                    "properties": {\n                                      "object": {\n                                        "pattern": "card",\n                                        "type": "string",\n                                        "default": "card"\n                                      },\n                                      "id": {\n                                        "type": "string"\n                                      },\n                                      "livemode": {\n                                        "type": "boolean",\n                                        "enum": [\n                                          true,\n                                          false\n                                        ]\n                                      },\n                                      "location": {\n                                        "type": "string"\n                                      },\n                                      "deleted": {\n                                        "type": "boolean",\n                                        "enum": [\n                                          true,\n                                          false\n                                        ]\n                                      },\n                                      "street1": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "street2": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "city": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "state": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "phone_number": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "postal_code": {\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "country": {\n                                        "pattern": "^[a-z]{0,2}$",\n                                        "type": "string"\n                                      },\n                                      "financing": {\n                                        "type": "string"\n                                      },\n                                      "bank": {\n                                        "type": "string"\n                                      },\n                                      "brand": {\n                                        "type": "string"\n                                      },\n                                      "fingerprint": {\n                                        "type": "string"\n                                      },\n                                      "first_digits": {\n                                        "pattern": "^[0-9]{6}$",\n                                        "type": "string",\n                                        "nullable": true\n                                      },\n                                      "last_digits": {\n                                        "pattern": "^[0-9]{4}$",\n                                        "type": "string"\n                                      },\n                                      "name": {\n                                        "type": "string"\n                                      },\n                                      "expiration_month": {\n                                        "type": "integer"\n                                      },\n                                      "expiration_year": {\n                                        "type": "integer"\n                                      },\n                                      "security_code_check": {\n                                        "type": "boolean",\n                                        "enum": [\n                                          true,\n                                          false\n                                        ]\n                                      },\n                                      "tokenization_method": {\n                                        "type": "string"\n                                      },\n                                      "created_at": {\n                                        "type": "string",\n                                        "format": "date-time"\n                                      }\n                                    }\n                                  },\n                                  {\n                                    "type": "string"\n                                  }\n                                ]\n                              },\n                              "linked_accounts": {\n                                "type": "object",\n                                "properties": {\n                                  "object": {\n                                    "pattern": "list",\n                                    "type": "string",\n                                    "default": "list"\n                                  },\n                                  "data": {\n                                    "type": "array",\n                                    "items": {}\n                                  },\n                                  "limit": {\n                                    "type": "integer"\n                                  },\n                                  "offset": {\n                                    "type": "integer"\n                                  },\n                                  "total": {\n                                    "type": "integer"\n                                  },\n                                  "location": {\n                                    "type": "string"\n                                  },\n                                  "order": {\n                                    "type": "string",\n                                    "enum": [\n                                      "chronological",\n                                      "reverse_chronological"\n                                    ]\n                                  },\n                                  "from": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  },\n                                  "to": {\n                                    "type": "string",\n                                    "format": "date-time"\n                                  }\n                                }\n                              },\n                              "description": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "email": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "linked_account": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "linked_account",\n                                "type": "string",\n                                "default": "linked_account"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "registration_uri": {\n                                "type": "string",\n                                "format": "uri"\n                              },\n                              "return_uri": {\n                                "type": "string",\n                                "format": "uri"\n                              },\n                              "type": {\n                                "type": "string"\n                              },\n                              "status": {\n                                "type": "string",\n                                "enum": [\n                                  "failed",\n                                  "expired",\n                                  "deleted",\n                                  "pending",\n                                  "successful"\n                                ]\n                              },\n                              "last_digits": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "metadata": {\n                                "type": "object",\n                                "default": {}\n                              },\n                              "failure_code": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "failure_message": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "registered_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "expires_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "description": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  "transfer": {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "transfer_schedule",\n                        "type": "string",\n                        "default": "transfer_schedule"\n                      },\n                      "id": {\n                        "pattern": "rtrf_[0-9a-z]+",\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "amount": {\n                        "type": "integer",\n                        "nullable": true\n                      },\n                      "currency": {\n                        "type": "string",\n                        "format": "currency"\n                      },\n                      "percentage_of_balance": {\n                        "type": "number",\n                        "format": "float",\n                        "nullable": true\n                      },\n                      "recipient": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "recipient",\n                                "type": "string",\n                                "default": "recipient"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "bank_account": {\n                                "$ref": "#/components/schemas/bank_account"\n                              },\n                              "active": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "default": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "verified": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "description": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "email": {\n                                "type": "string"\n                              },\n                              "failure_code": {\n                                "type": "string",\n                                "nullable": true,\n                                "enum": [\n                                  "name_mismatch",\n                                  "account_not_found",\n                                  "bank_not_found"\n                                ]\n                              },\n                              "name": {\n                                "type": "string"\n                              },\n                              "tax_id": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "type": {\n                                "type": "string",\n                                "enum": [\n                                  "individual",\n                                  "corporation"\n                                ]\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "schedule": {\n                                "oneOf": [\n                                  {\n                                    "$ref": "#/components/schemas/schedule"\n                                  },\n                                  {\n                                    "type": "string"\n                                  }\n                                ]\n                              },\n                              "metadata": {\n                                "type": "object",\n                                "default": {}\n                              },\n                              "verified_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "activated_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "is_realtime_payout": {\n                        "type": "boolean",\n                        "nullable": true,\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      }\n                    }\n                  },\n                  "next_occurrences_on": {\n                    "type": "array",\n                    "items": {\n                      "type": "string",\n                      "format": "date"\n                    }\n                  },\n                  "ended_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "start_on": {\n                    "type": "string",\n                    "format": "date"\n                  },\n                  "end_on": {\n                    "type": "string",\n                    "format": "date"\n                  },\n                  "created_at": {\n                    "type": "string",\n                    "format": "date-time"\n                  },\n                  "execute_time": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "deleted_by": {\n                    "type": "string",\n                    "nullable": true\n                  },\n                  "merchant_name": {\n                    "type": "string"\n                  }\n                }\n              },\n              {\n                "type": "string"\n              }\n            ]\n          },\n          "metadata": {\n            "type": "object",\n            "default": {}\n          },\n          "verified_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "activated_at": {\n            "type": "string",\n            "format": "date-time"\n          }\n        }\n      },\n      {\n        "type": "string"\n      }\n    ]\n  },\n  "bank_account": {\n    "type": "object",\n    "properties": {\n      "object": {\n        "pattern": "bank_account",\n        "type": "string",\n        "default": "bank_account"\n      },\n      "livemode": {\n        "type": "boolean",\n        "enum": [\n          true,\n          false\n        ]\n      },\n      "last_digits": {\n        "pattern": "^[0-9]{4}$",\n        "type": "string"\n      },\n      "account_number": {\n        "type": "string"\n      },\n      "name": {\n        "type": "string"\n      },\n      "type": {\n        "type": "string",\n        "enum": [\n          "normal",\n          "current"\n        ]\n      },\n      "created_at": {\n        "type": "string",\n        "format": "date-time"\n      },\n      "brand": {\n        "type": "string"\n      },\n      "bank_code": {\n        "type": "string"\n      },\n      "branch_code": {\n        "type": "string"\n      }\n    }\n  },\n  "failure_code": {\n    "type": "string",\n    "nullable": true\n  },\n  "failure_message": {\n    "type": "string",\n    "nullable": true\n  },\n  "paid_at": {\n    "type": "string",\n    "format": "date-time",\n    "nullable": true\n  },\n  "sent_at": {\n    "type": "string",\n    "format": "date-time",\n    "nullable": true\n  },\n  "balance_hold_at": {\n    "type": "string",\n    "format": "date-time",\n    "nullable": true\n  },\n  "created_at": {\n    "type": "string",\n    "format": "date-time"\n  },\n  "transactions": {\n    "type": "array",\n    "items": {\n      "type": "object",\n      "properties": {\n        "object": {\n          "pattern": "transaction",\n          "type": "string",\n          "default": "transaction"\n        },\n        "id": {\n          "pattern": "trxn_[0-9a-z]+",\n          "type": "string"\n        },\n        "livemode": {\n          "type": "boolean",\n          "enum": [\n            true,\n            false\n          ]\n        },\n        "currency": {\n          "type": "string",\n          "format": "currency"\n        },\n        "amount": {\n          "type": "integer"\n        },\n        "location": {\n          "type": "string"\n        },\n        "direction": {\n          "type": "string",\n          "enum": [\n            "credit",\n            "debit"\n          ]\n        },\n        "key": {\n          "type": "string"\n        },\n        "origin": {\n          "type": "string"\n        },\n        "transferable_at": {\n          "type": "string",\n          "format": "date-time"\n        },\n        "created_at": {\n          "type": "string",\n          "format": "date-time"\n        }\n      }\n    }\n  },\n  "schedule": {\n    "oneOf": [\n      {\n        "type": "object",\n        "properties": {\n          "object": {\n            "pattern": "schedule",\n            "type": "string",\n            "default": "schedule"\n          },\n          "id": {\n            "pattern": "schd_[0-9a-z]+",\n            "type": "string"\n          },\n          "deleted": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "livemode": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "location": {\n            "type": "string"\n          },\n          "every": {\n            "type": "integer"\n          },\n          "occurrences": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "list",\n                "type": "string",\n                "default": "list"\n              },\n              "data": {\n                "type": "array",\n                "items": {}\n              },\n              "limit": {\n                "type": "integer"\n              },\n              "offset": {\n                "type": "integer"\n              },\n              "total": {\n                "type": "integer"\n              },\n              "location": {\n                "type": "string"\n              },\n              "order": {\n                "type": "string",\n                "enum": [\n                  "chronological",\n                  "reverse_chronological"\n                ]\n              },\n              "from": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "to": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "on": {\n            "type": "object",\n            "properties": {\n              "days_of_month": {\n                "type": "array",\n                "items": {}\n              },\n              "weekday_of_month": {\n                "type": "string"\n              },\n              "weekdays": {\n                "type": "array",\n                "items": {\n                  "type": "string"\n                },\n                "enum": [\n                  "sunday",\n                  "monday",\n                  "tuesday",\n                  "wednesday",\n                  "thursday",\n                  "friday",\n                  "saturday"\n                ]\n              }\n            }\n          },\n          "in_words": {\n            "type": "string"\n          },\n          "period": {\n            "type": "string",\n            "enum": [\n              "day",\n              "week",\n              "month"\n            ]\n          },\n          "status": {\n            "type": "string",\n            "enum": [\n              "running",\n              "active",\n              "expiring",\n              "expired",\n              "deleted",\n              "suspended"\n            ]\n          },\n          "active": {\n            "type": "boolean",\n            "enum": [\n              true,\n              false\n            ]\n          },\n          "state": {\n            "type": "string",\n            "enum": [\n              "Active",\n              "Pause"\n            ]\n          },\n          "charge": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "charge_schedule",\n                "type": "string",\n                "default": "charge_schedule"\n              },\n              "id": {\n                "pattern": "rchg_[0-9a-z]+",\n                "type": "string"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "currency": {\n                "type": "string",\n                "format": "currency"\n              },\n              "amount": {\n                "type": "integer"\n              },\n              "default_card": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "card": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "card",\n                        "type": "string",\n                        "default": "card"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "street1": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "street2": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "city": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "state": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "phone_number": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "postal_code": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "country": {\n                        "pattern": "^[a-z]{0,2}$",\n                        "type": "string"\n                      },\n                      "financing": {\n                        "type": "string"\n                      },\n                      "bank": {\n                        "type": "string"\n                      },\n                      "brand": {\n                        "type": "string"\n                      },\n                      "fingerprint": {\n                        "type": "string"\n                      },\n                      "first_digits": {\n                        "pattern": "^[0-9]{6}$",\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "last_digits": {\n                        "pattern": "^[0-9]{4}$",\n                        "type": "string"\n                      },\n                      "name": {\n                        "type": "string"\n                      },\n                      "expiration_month": {\n                        "type": "integer"\n                      },\n                      "expiration_year": {\n                        "type": "integer"\n                      },\n                      "security_code_check": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "tokenization_method": {\n                        "type": "string"\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "customer": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "customer",\n                        "type": "string",\n                        "default": "customer"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "cards": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "list",\n                            "type": "string",\n                            "default": "list"\n                          },\n                          "data": {\n                            "type": "array",\n                            "items": {}\n                          },\n                          "limit": {\n                            "type": "integer"\n                          },\n                          "offset": {\n                            "type": "integer"\n                          },\n                          "total": {\n                            "type": "integer"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "order": {\n                            "type": "string",\n                            "enum": [\n                              "chronological",\n                              "reverse_chronological"\n                            ]\n                          },\n                          "from": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "to": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "default_card": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "card",\n                                "type": "string",\n                                "default": "card"\n                              },\n                              "id": {\n                                "type": "string"\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "street1": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "street2": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "city": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "state": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "phone_number": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "postal_code": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "country": {\n                                "pattern": "^[a-z]{0,2}$",\n                                "type": "string"\n                              },\n                              "financing": {\n                                "type": "string"\n                              },\n                              "bank": {\n                                "type": "string"\n                              },\n                              "brand": {\n                                "type": "string"\n                              },\n                              "fingerprint": {\n                                "type": "string"\n                              },\n                              "first_digits": {\n                                "pattern": "^[0-9]{6}$",\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "last_digits": {\n                                "pattern": "^[0-9]{4}$",\n                                "type": "string"\n                              },\n                              "name": {\n                                "type": "string"\n                              },\n                              "expiration_month": {\n                                "type": "integer"\n                              },\n                              "expiration_year": {\n                                "type": "integer"\n                              },\n                              "security_code_check": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "tokenization_method": {\n                                "type": "string"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "linked_accounts": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "list",\n                            "type": "string",\n                            "default": "list"\n                          },\n                          "data": {\n                            "type": "array",\n                            "items": {}\n                          },\n                          "limit": {\n                            "type": "integer"\n                          },\n                          "offset": {\n                            "type": "integer"\n                          },\n                          "total": {\n                            "type": "integer"\n                          },\n                          "location": {\n                            "type": "string"\n                          },\n                          "order": {\n                            "type": "string",\n                            "enum": [\n                              "chronological",\n                              "reverse_chronological"\n                            ]\n                          },\n                          "from": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "to": {\n                            "type": "string",\n                            "format": "date-time"\n                          }\n                        }\n                      },\n                      "description": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "email": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "linked_account": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "linked_account",\n                        "type": "string",\n                        "default": "linked_account"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "registration_uri": {\n                        "type": "string",\n                        "format": "uri"\n                      },\n                      "return_uri": {\n                        "type": "string",\n                        "format": "uri"\n                      },\n                      "type": {\n                        "type": "string"\n                      },\n                      "status": {\n                        "type": "string",\n                        "enum": [\n                          "failed",\n                          "expired",\n                          "deleted",\n                          "pending",\n                          "successful"\n                        ]\n                      },\n                      "last_digits": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "failure_code": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "failure_message": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "registered_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "expires_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "description": {\n                "type": "string",\n                "nullable": true\n              },\n              "metadata": {\n                "type": "object",\n                "default": {}\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              }\n            }\n          },\n          "transfer": {\n            "type": "object",\n            "properties": {\n              "object": {\n                "pattern": "transfer_schedule",\n                "type": "string",\n                "default": "transfer_schedule"\n              },\n              "id": {\n                "pattern": "rtrf_[0-9a-z]+",\n                "type": "string"\n              },\n              "livemode": {\n                "type": "boolean",\n                "enum": [\n                  true,\n                  false\n                ]\n              },\n              "amount": {\n                "type": "integer",\n                "nullable": true\n              },\n              "currency": {\n                "type": "string",\n                "format": "currency"\n              },\n              "percentage_of_balance": {\n                "type": "number",\n                "format": "float",\n                "nullable": true\n              },\n              "recipient": {\n                "oneOf": [\n                  {\n                    "type": "object",\n                    "properties": {\n                      "object": {\n                        "pattern": "recipient",\n                        "type": "string",\n                        "default": "recipient"\n                      },\n                      "id": {\n                        "type": "string"\n                      },\n                      "livemode": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "location": {\n                        "type": "string"\n                      },\n                      "deleted": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "bank_account": {\n                        "type": "object",\n                        "properties": {\n                          "object": {\n                            "pattern": "bank_account",\n                            "type": "string",\n                            "default": "bank_account"\n                          },\n                          "livemode": {\n                            "type": "boolean",\n                            "enum": [\n                              true,\n                              false\n                            ]\n                          },\n                          "last_digits": {\n                            "pattern": "^[0-9]{4}$",\n                            "type": "string"\n                          },\n                          "account_number": {\n                            "type": "string"\n                          },\n                          "name": {\n                            "type": "string"\n                          },\n                          "type": {\n                            "type": "string",\n                            "enum": [\n                              "normal",\n                              "current"\n                            ]\n                          },\n                          "created_at": {\n                            "type": "string",\n                            "format": "date-time"\n                          },\n                          "brand": {\n                            "type": "string"\n                          },\n                          "bank_code": {\n                            "type": "string"\n                          },\n                          "branch_code": {\n                            "type": "string"\n                          }\n                        }\n                      },\n                      "active": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "default": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "verified": {\n                        "type": "boolean",\n                        "enum": [\n                          true,\n                          false\n                        ]\n                      },\n                      "description": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "email": {\n                        "type": "string"\n                      },\n                      "failure_code": {\n                        "type": "string",\n                        "nullable": true,\n                        "enum": [\n                          "name_mismatch",\n                          "account_not_found",\n                          "bank_not_found"\n                        ]\n                      },\n                      "name": {\n                        "type": "string"\n                      },\n                      "tax_id": {\n                        "type": "string",\n                        "nullable": true\n                      },\n                      "type": {\n                        "type": "string",\n                        "enum": [\n                          "individual",\n                          "corporation"\n                        ]\n                      },\n                      "created_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "schedule": {\n                        "oneOf": [\n                          {\n                            "type": "object",\n                            "properties": {\n                              "object": {\n                                "pattern": "schedule",\n                                "type": "string",\n                                "default": "schedule"\n                              },\n                              "id": {\n                                "pattern": "schd_[0-9a-z]+",\n                                "type": "string"\n                              },\n                              "deleted": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "livemode": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "location": {\n                                "type": "string"\n                              },\n                              "every": {\n                                "type": "integer"\n                              },\n                              "occurrences": {\n                                "$ref": "#/components/schemas/list"\n                              },\n                              "on": {\n                                "$ref": "#/components/schemas/schedule_on"\n                              },\n                              "in_words": {\n                                "type": "string"\n                              },\n                              "period": {\n                                "type": "string",\n                                "enum": [\n                                  "day",\n                                  "week",\n                                  "month"\n                                ]\n                              },\n                              "status": {\n                                "type": "string",\n                                "enum": [\n                                  "running",\n                                  "active",\n                                  "expiring",\n                                  "expired",\n                                  "deleted",\n                                  "suspended"\n                                ]\n                              },\n                              "active": {\n                                "type": "boolean",\n                                "enum": [\n                                  true,\n                                  false\n                                ]\n                              },\n                              "state": {\n                                "type": "string",\n                                "enum": [\n                                  "Active",\n                                  "Pause"\n                                ]\n                              },\n                              "charge": {\n                                "$ref": "#/components/schemas/charge_schedule"\n                              },\n                              "transfer": {\n                                "$ref": "#/components/schemas/transfer_schedule"\n                              },\n                              "next_occurrences_on": {\n                                "type": "array",\n                                "items": {\n                                  "type": "string",\n                                  "format": "date"\n                                }\n                              },\n                              "ended_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "start_on": {\n                                "type": "string",\n                                "format": "date"\n                              },\n                              "end_on": {\n                                "type": "string",\n                                "format": "date"\n                              },\n                              "created_at": {\n                                "type": "string",\n                                "format": "date-time"\n                              },\n                              "execute_time": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "deleted_by": {\n                                "type": "string",\n                                "nullable": true\n                              },\n                              "merchant_name": {\n                                "type": "string"\n                              }\n                            }\n                          },\n                          {\n                            "type": "string"\n                          }\n                        ]\n                      },\n                      "metadata": {\n                        "type": "object",\n                        "default": {}\n                      },\n                      "verified_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      },\n                      "activated_at": {\n                        "type": "string",\n                        "format": "date-time"\n                      }\n                    }\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "created_at": {\n                "type": "string",\n                "format": "date-time"\n              },\n              "is_realtime_payout": {\n                "type": "boolean",\n                "nullable": true,\n                "enum": [\n                  true,\n                  false\n                ]\n              }\n            }\n          },\n          "next_occurrences_on": {\n            "type": "array",\n            "items": {\n              "type": "string",\n              "format": "date"\n            }\n          },\n          "ended_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "start_on": {\n            "type": "string",\n            "format": "date"\n          },\n          "end_on": {\n            "type": "string",\n            "format": "date"\n          },\n          "created_at": {\n            "type": "string",\n            "format": "date-time"\n          },\n          "execute_time": {\n            "type": "string",\n            "nullable": true\n          },\n          "deleted_by": {\n            "type": "string",\n            "nullable": true\n          },\n          "merchant_name": {\n            "type": "string"\n          }\n        }\n      },\n      {\n        "type": "string"\n      }\n    ]\n  },\n  "fee_vat": {\n    "type": "integer"\n  },\n  "net": {\n    "type": "integer"\n  },\n  "total_fee": {\n    "type": "integer"\n  },\n  "split_transfer_group_id": {\n    "type": "string",\n    "nullable": true\n  },\n  "merchant_name": {\n    "type": "string"\n  },\n  "merchant_uid": {\n    "type": "string"\n  }\n} \n'})})]})]})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(p,{...n})}):p(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>l});var r=t(96540);const a={},i=r.createContext(a);function s(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);